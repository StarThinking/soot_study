hbase.regionserver.heapmemory.autotuner.step.max 0.04F
hbase.regionserver.logroll.multiplier 0.5F
hbase.writer.unified.encoded.blocksize.ratio 1.0F
hbase.hstore.min.locality.to.skip.major.compact 0.0F
hbase.hregion.majorcompaction.jitter 0.5F
hbase.hstore.compaction.ratio.offpeak 5.0F
hbase.hstore.compaction.ratio 1.2F
io.storefile.bloom.error.rate 0.01F
r1 f0
hfile.block.cache.size 0.4F
hfile.block.cache.size.max.range $f42
hfile.block.cache.size.min.range $f40
hbase.regionserver.global.memstore.size.max.range $f4
hbase.regionserver.global.memstore.size.min.range $f2
hfile.block.cache.size 0.4F
hbase.heap.occupancy.low_water_mark 0.95F
hbase.busy.policy.blockedRequests 0.2F
hbase.tablesnapshotinputformat.locality.cutoff.multiplier 0.8F
hbase.hregion.memstore.chunkpool.initialsize 0.0F
hbase.hregion.memstore.chunkpool.maxsize 1.0F
hbase.procedure.worker.add.stuck.percentage 0.5F
hbase.canary.write.perserver.regions.upperLimit 1.5F
hbase.canary.write.perserver.regions.lowerLimit 1.0F
r4 f0
hbase.mob.cache.evict.remain.ratio 0.5F
hbase.regions.overallSlop $f1
hbase.regions.slop 0.2F
hbase.regions.slop 0.001F
hbase.master.balancer.stochastic.tableSkewCost 35.0F
hbase.master.balancer.stochastic.maxMovePercent 0.25F
hbase.master.balancer.stochastic.moveCost 7.0F
hbase.master.balancer.stochastic.primaryRegionCountCost 500.0F
hbase.master.balancer.stochastic.regionCountCost 500.0F
hbase.master.balancer.stochastic.regionReplicaRackCostKey 10000.0F
hbase.master.balancer.stochastic.regionReplicaHostCostKey 100000.0F
hbase.master.balancer.stochastic.storefileSizeCost 5.0F
hbase.master.balancer.stochastic.memstoreSizeCost 5.0F
hbase.master.balancer.stochastic.writeRequestCost 5.0F
hbase.master.balancer.stochastic.readRequestCost 5.0F
r1 f0
hbase.hfile.prefetch.delay.variation 0.2F
hbase.regionserver.global.memstore.size $f0
hbase.regionserver.global.memstore.upperLimit 0.4F
hbase.master.balancer.stochastic.minCostNeedBalance $f0
hbase.regionserver.global.memstore.size.max.range $f10
hbase.regionserver.global.memstore.size.min.range $f8
hfile.block.cache.size.max.range $f6
hfile.block.cache.size 0.4F
hfile.block.cache.size.min.range $f4
hfile.block.cache.size 0.4F
hbase.regionserver.heapmemory.autotuner.sufficient.memory.level 0.5F
hbase.regionserver.heapmemory.autotuner.step.min 0.00125F
