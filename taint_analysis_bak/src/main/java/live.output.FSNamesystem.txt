classpath = /root/soot_study/soot/target/sootclasses-trunk-jar-with-dependencies.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/etc/hadoop:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/accessors-smart-1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-core-asl-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jersey-json-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jul-to-slf4j-1.7.25.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/log4j-1.2.17.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/metrics-core-3.2.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-admin-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-client-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-security-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/avro-1.7.7.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/audience-annotations-0.5.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-codec-1.11.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-server-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-webapp-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/javax.servlet-api-3.1.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-xc-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/asm-5.0.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jaxb-api-2.2.11.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-logging-1.1.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jettison-1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jaxb-impl-2.2.3-1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/hadoop-auth-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-util-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/curator-framework-2.13.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-util-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/curator-client-2.13.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-math3-3.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerby-xdr-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/htrace-core4-4.1.0-incubating.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jcip-annotations-1.0-1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-beanutils-1.9.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerby-pkix-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-simplekdc-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerby-config-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-cli-1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-configuration2-2.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/httpcore-4.4.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-io-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/json-smart-2.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/hadoop-annotations-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-server-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/gson-2.2.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/paranamer-2.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/woodstox-core-5.0.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jsch-0.1.54.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/stax2-api-3.1.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jsr311-api-1.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/nimbus-jose-jwt-4.41.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/curator-recipes-2.13.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jersey-servlet-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/slf4j-api-1.7.25.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/guava-11.0.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jersey-server-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/httpclient-4.5.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/token-provider-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/netty-3.10.5.Final.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-io-2.5.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerby-util-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-jaxrs-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/zookeeper-3.4.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/snappy-java-1.0.5.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-core-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-lang3-3.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerby-asn1-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-crypto-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jsr305-3.0.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-net-3.6.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-core-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-databind-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-common-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jsp-api-2.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-xml-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-collections-3.2.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-compress-1.18.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-mapper-asl-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/protobuf-java-2.5.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jersey-core-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/re2j-1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jackson-annotations-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/commons-lang-2.6.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-http-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/kerb-identity-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/lib/jetty-servlet-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/hadoop-nfs-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/hadoop-kms-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/hadoop-common-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/common/hadoop-common-3.1.2-tests.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/accessors-smart-1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-core-asl-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jersey-json-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/log4j-1.2.17.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/netty-all-4.0.52.Final.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-admin-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-client-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-security-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/avro-1.7.7.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/audience-annotations-0.5.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-codec-1.11.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/okhttp-2.7.5.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-server-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-webapp-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/javax.servlet-api-3.1.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-util-ajax-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-xc-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/asm-5.0.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jaxb-api-2.2.11.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-logging-1.1.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jettison-1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jaxb-impl-2.2.3-1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/hadoop-auth-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-util-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/curator-framework-2.13.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-util-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/curator-client-2.13.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-math3-3.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerby-xdr-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/htrace-core4-4.1.0-incubating.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jcip-annotations-1.0-1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-beanutils-1.9.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerby-pkix-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-simplekdc-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerby-config-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/json-simple-1.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-cli-1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-configuration2-2.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/httpcore-4.4.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-io-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/okio-1.6.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/json-smart-2.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/hadoop-annotations-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-server-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/gson-2.2.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/paranamer-2.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-daemon-1.0.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/woodstox-core-5.0.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jsch-0.1.54.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/stax2-api-3.1.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jsr311-api-1.1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/nimbus-jose-jwt-4.41.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/curator-recipes-2.13.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jersey-servlet-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/guava-11.0.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jersey-server-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/httpclient-4.5.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/token-provider-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/netty-3.10.5.Final.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-io-2.5.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerby-util-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-jaxrs-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/zookeeper-3.4.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/snappy-java-1.0.5.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-core-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-lang3-3.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerby-asn1-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-crypto-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jsr305-3.0.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-net-3.6.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-core-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-databind-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-common-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-xml-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/leveldbjni-all-1.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-collections-3.2.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-compress-1.18.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-mapper-asl-1.9.13.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/protobuf-java-2.5.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jersey-core-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/re2j-1.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jackson-annotations-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/commons-lang-2.6.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-http-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/kerb-identity-1.0.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/lib/jetty-servlet-9.3.24.v20180605.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-native-client-3.1.2-tests.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-client-3.1.2-tests.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-3.1.2-tests.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-client-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-httpfs-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-rbf-3.1.2-tests.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-nfs-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-native-client-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-rbf-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/hdfs/hadoop-hdfs-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/lib/junit-4.11.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/lib/hamcrest-core-1.3.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-core-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-plugins-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-shuffle-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-app-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.2-tests.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-common-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-uploader-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/mapreduce/hadoop-mapreduce-client-nativetask-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/metrics-core-3.2.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/javax.inject-1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/ehcache-3.3.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/geronimo-jcache_1.0_spec-1.0-alpha-1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/jackson-jaxrs-base-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/snakeyaml-1.16.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/guice-servlet-4.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/dnsjava-2.1.7.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/json-io-2.5.1.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/java-util-1.9.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/mssql-jdbc-6.2.1.jre7.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/jersey-client-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/guice-4.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/fst-2.50.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/objenesis-1.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/jersey-guice-1.19.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/jackson-module-jaxb-annotations-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/aopalliance-1.0.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/jackson-jaxrs-json-provider-2.7.8.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/swagger-annotations-1.5.4.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/lib/HikariCP-java7-2.4.12.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-applications-unmanaged-am-launcher-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-timeline-pluginstorage-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-resourcemanager-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-applications-distributedshell-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-applicationhistoryservice-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-services-core-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-router-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-api-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-common-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-sharedcachemanager-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-services-api-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-web-proxy-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-nodemanager-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-client-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-server-tests-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-common-3.1.2.jar:/root/hadoop-3.1.2-src/hadoop-dist/target/hadoop-3.1.2/share/hadoop/yarn/hadoop-yarn-registry-3.1.2.jar.
=======================================
isAuditEnabled
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isDefaultAuditLogger>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log auditLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.commons.logging.Log}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isInfoEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.commons.logging.Log}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.List}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
Live in: {$r1: java.util.List}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label2
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z3 = 1
Live in: {}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {$z3: boolean}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
$z3 = 0
Live in: {}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
return $z3
Live in: {$z3: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
logAuditEvent
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, r1, r2, null, null)
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
logAuditEvent
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter3: java.lang.String
Live in: {z0: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {z0: boolean, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter4: org.apache.hadoop.fs.FileStatus
Live in: {z0: boolean, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isAuditEnabled()>()
Live in: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label1
Live in: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $z1: boolean}
Live out: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isExternalInvocation()>()
Live in: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label1
Live in: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $z2: boolean}
Live out: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = staticinvoke <org.apache.hadoop.ipc.Server: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {z0: boolean, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {z0: boolean, $r5: org.apache.hadoop.security.UserGroupInformation, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <org.apache.hadoop.ipc.Server: java.net.InetAddress getRemoteIp()>()
Live in: {z0: boolean, $r5: org.apache.hadoop.security.UserGroupInformation, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.fs.FileStatus}
Live out: {z0: boolean, $r5: org.apache.hadoop.security.UserGroupInformation, $r6: java.net.InetAddress, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,org.apache.hadoop.security.UserGroupInformation,java.net.InetAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, $r5, $r6, r1, r2, r3, r4)
Live in: {z0: boolean, $r5: org.apache.hadoop.security.UserGroupInformation, $r6: java.net.InetAddress, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
logAuditEvent
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 := @parameter3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isAuditEnabled()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label1
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isExternalInvocation()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label2
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r13 = null
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
if r3 == null goto label5
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$z3 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: boolean isSymlink()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label3
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $z3: boolean}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$r14 = new org.apache.hadoop.fs.Path
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$r11 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: byte[] getSymlinkInBytes()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path, $r11: byte[]}
---------------------------------------
---------------------------------------
$r12 = staticinvoke <org.apache.hadoop.hdfs.DFSUtilClient: java.lang.String bytes2String(byte[])>($r11)
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path, $r11: byte[]}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path, $r12: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r14.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path, $r12: java.lang.String}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
goto label4
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$r14 = null
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
r4 = $r14
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r14: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r4: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$r6 = new org.apache.hadoop.fs.Path
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r4: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r4: org.apache.hadoop.fs.Path, $r6: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
specialinvoke $r6.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r2)
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r4: org.apache.hadoop.fs.Path, $r6: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r4: org.apache.hadoop.fs.Path, $r6: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
r5 = $r6
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r4: org.apache.hadoop.fs.Path, $r6: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$r7 = new org.apache.hadoop.fs.FileStatus
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: long getLen()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$z4 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: boolean isDirectory()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$s1 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: short getReplication()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$l2 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: long getBlockSize()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$l3 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: long getModificationTime()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$l4 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: long getAccessTime()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$r8 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: org.apache.hadoop.fs.permission.FsPermission getPermission()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, $r8: org.apache.hadoop.fs.permission.FsPermission, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
$r9 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: java.lang.String getOwner()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, $r8: org.apache.hadoop.fs.permission.FsPermission, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, $r8: org.apache.hadoop.fs.permission.FsPermission, $r9: java.lang.String, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$r10 = interfaceinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: java.lang.String getGroup()>()
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, $r8: org.apache.hadoop.fs.permission.FsPermission, $r9: java.lang.String, r5: org.apache.hadoop.fs.Path, r4: org.apache.hadoop.fs.Path, r3: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, $r8: org.apache.hadoop.fs.permission.FsPermission, $r9: java.lang.String, $r10: java.lang.String, r4: org.apache.hadoop.fs.Path, r5: org.apache.hadoop.fs.Path}
---------------------------------------
---------------------------------------
specialinvoke $r7.<org.apache.hadoop.fs.FileStatus: void <init>(long,boolean,int,long,long,long,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>($l0, $z4, $s1, $l2, $l3, $l4, $r8, $r9, $r10, r4, r5)
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus, $l0: long, $z4: boolean, $s1: short, $l2: long, $l3: long, $l4: long, $r8: org.apache.hadoop.fs.permission.FsPermission, $r9: java.lang.String, $r10: java.lang.String, r4: org.apache.hadoop.fs.Path, r5: org.apache.hadoop.fs.Path}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
r13 = $r7
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.fs.FileStatus}
Live out: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, r1, r2, null, r13)
Live in: {z0: boolean, r1: java.lang.String, r2: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
logAuditEvent
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
r1 := @parameter1: org.apache.hadoop.security.UserGroupInformation
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.net.InetAddress
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress}
---------------------------------------
---------------------------------------
r3 := @parameter3: java.lang.String
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter4: java.lang.String
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String}
---------------------------------------
---------------------------------------
r5 := @parameter5: java.lang.String
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
---------------------------------------
---------------------------------------
r6 := @parameter6: org.apache.hadoop.fs.FileStatus
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r1.<org.apache.hadoop.security.UserGroupInformation: java.lang.String toString()>()
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.util.List}
---------------------------------------
---------------------------------------
r8 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: org.apache.hadoop.security.UserGroupInformation, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.util.List}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label4
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, $z1: boolean}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$r12 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, $r12: java.lang.Object}
---------------------------------------
---------------------------------------
r9 = (org.apache.hadoop.hdfs.server.namenode.AuditLogger) $r12
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, $r12: java.lang.Object}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
$z2 = r9 instanceof org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label2
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger, $z2: boolean}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
r10 = (org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger) r9
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r10: org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger}
---------------------------------------
---------------------------------------
$r13 = staticinvoke <org.apache.hadoop.ipc.CallerContext: org.apache.hadoop.ipc.CallerContext getCurrent()>()
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r10: org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, $r13: org.apache.hadoop.ipc.CallerContext, r1: org.apache.hadoop.security.UserGroupInformation, r10: org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, $r13: org.apache.hadoop.ipc.CallerContext, r1: org.apache.hadoop.security.UserGroupInformation, r10: org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, $r13: org.apache.hadoop.ipc.CallerContext, $r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r10: org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger}
---------------------------------------
---------------------------------------
virtualinvoke r10.<org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger: void logAuditEvent(boolean,java.lang.String,java.net.InetAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus,org.apache.hadoop.ipc.CallerContext,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager)>(z0, r7, r2, r3, r4, r5, r6, $r13, r1, $r14)
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, $r13: org.apache.hadoop.ipc.CallerContext, $r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r10: org.apache.hadoop.hdfs.server.namenode.HdfsAuditLogger}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
goto label3
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
interfaceinvoke r9.<org.apache.hadoop.hdfs.server.namenode.AuditLogger: void logAuditEvent(boolean,java.lang.String,java.net.InetAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, r7, r2, r3, r4, r5, r6)
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation, r9: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
goto label1
Live in: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {r8: java.util.Iterator, z0: boolean, r7: java.lang.String, r2: java.net.InetAddress, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r6: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
imageLoadComplete
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean imageLoaded>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
$z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "FSDirectory already loaded")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setImageLoaded()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setImageLoaded
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean imageLoaded>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setImageLoaded(boolean)>(1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void markNameCacheInitialized()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.Condition cond>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.util.concurrent.locks.Condition}
---------------------------------------
---------------------------------------
interfaceinvoke $r3.<java.util.concurrent.locks.Condition: void signalAll()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.util.concurrent.locks.Condition}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setImageLoaded")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label5
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r4 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setImageLoaded")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
isImageLoaded
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean imageLoaded>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
setImageLoaded
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean imageLoaded> = z0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
clear
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void reset()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void reset()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void removeAllLeases()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: void clearSnapshottableDirs()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void clear()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setImageLoaded(boolean)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void clear()>()
Live in: {$r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager getInstance()>()
Live in: {}
Live out: {$r7: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager: void clear()>()
Live in: {$r7: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getLeaseManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {}
---------------------------------------
=======================================
=======================================
isHaEnabled
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
checkConfiguration
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getNamespaceDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.Collection}
---------------------------------------
---------------------------------------
r2 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List getNamespaceEditsDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.Collection}
Live out: {r2: java.util.List, r1: java.util.Collection, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getRequiredNamespaceEditsDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r2: java.util.List, r1: java.util.Collection, r0: org.apache.hadoop.conf.Configuration}
Live out: {r2: java.util.List, r1: java.util.Collection, r3: java.util.Collection, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List getSharedEditsDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r2: java.util.List, r1: java.util.Collection, r3: java.util.Collection, r0: org.apache.hadoop.conf.Configuration}
Live out: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r1: java.util.Collection}
---------------------------------------
---------------------------------------
r5 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
Live in: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r1: java.util.Collection}
Live out: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
Live in: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection}
Live out: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label4
Live in: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection, $z2: boolean}
Live out: {r1: java.util.Collection, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator}
---------------------------------------
---------------------------------------
$r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.Collection, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator}
Live out: {r1: java.util.Collection, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, $r9: java.lang.Object}
---------------------------------------
---------------------------------------
r6 = (java.net.URI) $r9
Live in: {r1: java.util.Collection, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, $r9: java.lang.Object}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r6.<java.net.URI: java.lang.String toString()>()
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $r10: java.lang.String}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke $r10.<java.lang.String: int compareTo(java.lang.String)>("file:///tmp/hadoop/dfs/name")
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $r10: java.lang.String}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $i2: int}
---------------------------------------
---------------------------------------
if $i2 != 0 goto label2
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $i2: int}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
goto label1
Live in: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection}
Live out: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Collection: boolean contains(java.lang.Object)>(r6)
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label3
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $z0: boolean}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r4.<java.util.Collection: boolean contains(java.lang.Object)>(r6)
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label3
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection, $z1: boolean}
Live out: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
$r11 = new java.lang.IllegalArgumentException
Live in: {r6: java.net.URI, r4: java.util.List, r3: java.util.Collection, r2: java.util.List}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI}
---------------------------------------
---------------------------------------
$r12 = new java.lang.StringBuilder
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI, $r12: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Required edits directory ")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI, $r12: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, r6: java.net.URI, $r13: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found: ")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r14: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.edits.dir")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r15: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r16: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, r2: java.util.List, $r17: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r18: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.edits.dir.required")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r19: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r20: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, r3: java.util.Collection, $r21: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r22: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.shared.edits.dir")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r23: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r24: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
Live in: {$r11: java.lang.IllegalArgumentException, r4: java.util.List, $r25: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r11: java.lang.IllegalArgumentException, $r26: java.lang.StringBuilder}
Live out: {$r11: java.lang.IllegalArgumentException, $r27: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27)
Live in: {$r11: java.lang.IllegalArgumentException, $r27: java.lang.String}
Live out: {$r11: java.lang.IllegalArgumentException}
---------------------------------------
---------------------------------------
throw $r11
Live in: {$r11: java.lang.IllegalArgumentException}
Live out: {}
---------------------------------------
---------------------------------------
goto label1
Live in: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection}
Live out: {r2: java.util.List, r4: java.util.List, r3: java.util.Collection, r5: java.util.Iterator, r1: java.util.Collection}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke r1.<java.util.Collection: int size()>()
Live in: {r2: java.util.List, r1: java.util.Collection}
Live out: {r2: java.util.List, $i0: int}
---------------------------------------
---------------------------------------
if $i0 != 1 goto label5
Live in: {r2: java.util.List, $i0: int}
Live out: {r2: java.util.List}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: java.util.List}
Live out: {r2: java.util.List, $r8: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Only one image storage directory (dfs.namenode.name.dir) configured. Beware of data loss due to lack of redundant storage directories!")
Live in: {r2: java.util.List, $r8: org.slf4j.Logger}
Live out: {r2: java.util.List}
---------------------------------------
---------------------------------------
$i1 = interfaceinvoke r2.<java.util.Collection: int size()>()
Live in: {r2: java.util.List}
Live out: {$i1: int}
---------------------------------------
---------------------------------------
if $i1 != 1 goto label6
Live in: {$i1: int}
Live out: {}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {}
Live out: {$r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>("Only one namespace edits storage directory (dfs.namenode.edits.dir) configured. Beware of data loss due to lack of redundant storage directories!")
Live in: {$r7: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
loadFromDisk
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkConfiguration(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r5 = new org.apache.hadoop.hdfs.server.namenode.FSImage
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getNamespaceDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage, $r6: java.util.Collection}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List getNamespaceEditsDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage, $r6: java.util.Collection}
Live out: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage, $r6: java.util.Collection, $r7: java.util.List}
---------------------------------------
---------------------------------------
specialinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSImage: void <init>(org.apache.hadoop.conf.Configuration,java.util.Collection,java.util.List)>(r0, $r6, $r7)
Live in: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage, $r6: java.util.Collection, $r7: java.util.List}
Live out: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r1 = $r5
Live in: {r0: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r8 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.conf.Configuration}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hdfs.server.namenode.FSImage,boolean)>(r0, r1, 0)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 = $r8
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption getStartupOption(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r0: org.apache.hadoop.conf.Configuration}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption RECOVER>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r9: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
if r3 != $r9 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r9: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$r17 = <org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction SAFEMODE_ENTER>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r17: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean setSafeMode(org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction)>($r17)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r17: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
l0 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
specialinvoke r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void loadFSImage(org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption)>(r3)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r3: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
goto label5
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r18: java.io.IOException}
---------------------------------------
---------------------------------------
r20 = $r18
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r18: java.io.IOException}
Live out: {r20: java.io.IOException, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r19 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r20: java.io.IOException, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r20: java.io.IOException, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r19: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Encountered exception loading fsimage", r20)
Live in: {r20: java.io.IOException, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r19: org.slf4j.Logger}
Live out: {r20: java.io.IOException, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void close()>()
Live in: {r20: java.io.IOException, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r20: java.io.IOException}
---------------------------------------
---------------------------------------
throw r20
Live in: {r20: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
$l1 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long, l0: long}
---------------------------------------
---------------------------------------
l5 = $l1 - l0
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long, l0: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished loading FSImage in ")
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r12: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs")
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r13: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r11: org.slf4j.Logger, $r14: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r15: java.lang.String, $r11: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>($r15)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long, $r15: java.lang.String, $r11: org.slf4j.Logger}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics getNameNodeMetrics()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l5: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics, l5: long}
---------------------------------------
---------------------------------------
if r4 == null goto label6
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics, l5: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics, l5: long}
---------------------------------------
---------------------------------------
$i3 = (int) l5
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics, l5: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics, $i3: int}
---------------------------------------
---------------------------------------
$l4 = (long) $i3
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics, $i3: int}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l4: long, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics}
---------------------------------------
---------------------------------------
virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics: void setFsImageLoadTime(long)>($l4)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l4: long, r4: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory getFSDirectory()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCTime()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void createReservedStatuses(long)>($l2)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return r2
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
=======================================
=======================================
<init>
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.FSImage
Live in: {r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hdfs.server.namenode.FSImage,boolean)>(r1, r2, 0)
Live in: {r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
<init>
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.FSImage
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
specialinvoke r0.<java.lang.Object: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r4 = new org.apache.hadoop.metrics2.lib.MetricsRegistry
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r4: org.apache.hadoop.metrics2.lib.MetricsRegistry}
---------------------------------------
---------------------------------------
specialinvoke $r4.<org.apache.hadoop.metrics2.lib.MetricsRegistry: void <init>(java.lang.String)>("FSNamesystem")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r4: org.apache.hadoop.metrics2.lib.MetricsRegistry}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r4: org.apache.hadoop.metrics2.lib.MetricsRegistry}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.metrics2.lib.MetricsRegistry registry> = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r4: org.apache.hadoop.metrics2.lib.MetricsRegistry}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.metrics2.lib.MetricsRegistry registry>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r5: org.apache.hadoop.metrics2.lib.MetricsRegistry}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.metrics2.lib.MetricsRegistry: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation newRatesWithAggregation(java.lang.String)>("detailedLockHoldTimeMetrics")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r5: org.apache.hadoop.metrics2.lib.MetricsRegistry}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r6: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation detailedLockHoldTimeMetrics> = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r6: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r7 = new org.apache.hadoop.hdfs.server.namenode.LeaseManager
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r7: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
specialinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r7: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r7: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager> = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r7: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnrmthread> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnEditLogRoller> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon lazyPersistFileScrubber> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.ExecutorService edekCacheLoader> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasResourcesAvailable> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean fsRunning> = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$l0 = staticinvoke <org.apache.hadoop.util.Time: long now()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $l0: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long startTime> = $l0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean startingActiveService> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean imageLoaded> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean manualSafeMode> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean resourceLowSafeMode> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameNodeHostName> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r8 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension createKeyProviderCryptoExtension(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r8: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider> = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r8: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeyProvider: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r12: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r12: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r10: org.slf4j.Logger, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r14: java.lang.String, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r14: java.lang.String, $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.namenode.audit.log.async", 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r92 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r92: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r92.<org.slf4j.Logger: void info(java.lang.String)>("Enabling async auditlog")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r92: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void enableAsyncAuditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r15 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation detailedLockHoldTimeMetrics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock, $r16: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation}
---------------------------------------
---------------------------------------
specialinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation)>(r1, $r16)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock, $r16: org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock> = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r17: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: java.util.concurrent.locks.Condition newWriteLockCondition()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r17: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r18: java.util.concurrent.locks.Condition}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.Condition cond> = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r18: java.util.concurrent.locks.Condition}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r19 = new java.util.concurrent.locks.ReentrantLock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r19: java.util.concurrent.locks.ReentrantLock}
---------------------------------------
---------------------------------------
specialinvoke $r19.<java.util.concurrent.locks.ReentrantLock: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r19: java.util.concurrent.locks.ReentrantLock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r19: java.util.concurrent.locks.ReentrantLock}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.ReentrantLock cpLock> = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage, $r19: java.util.concurrent.locks.ReentrantLock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage> = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.resource.check.interval", 5000L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l1: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long resourceRecheckInterval> = $l1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r20 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r20: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation fsOwner> = $r20
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r20: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String,java.lang.String)>("dfs.permissions.superusergroup", "supergroup")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r21: java.lang.String}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String supergroup> = $r21
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r21: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.permissions.enabled", 1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z2: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled> = $z2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.snapshotdiff.listing.limit", 1000)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i2: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int snapshotDiffReportLimit> = $i2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i2: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r23 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r22 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r22: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fsOwner             = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r22: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation fsOwner>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r24: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r25: org.apache.hadoop.security.UserGroupInformation, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r25: org.apache.hadoop.security.UserGroupInformation, $r24: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r23: org.slf4j.Logger, $r26: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r27: java.lang.String, $r23: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String)>($r27)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r27: java.lang.String, $r23: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r29 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r28 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r28: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("supergroup          = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r28: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String supergroup>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r30: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r31: java.lang.String, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r31: java.lang.String, $r30: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r32: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r29: org.slf4j.Logger, $r32: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r33: java.lang.String, $r29: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>($r33)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r33: java.lang.String, $r29: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r35 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r34 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r34: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isPermissionEnabled = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r34: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r36: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$z3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r36: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $z3: boolean, $r36: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $z3: boolean, $r36: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r35: org.slf4j.Logger, $r37: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r38: java.lang.String, $r35: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String)>($r38)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r38: java.lang.String, $r35: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r39 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: java.lang.String getNamenodeNameServiceId(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r39: java.lang.String}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameserviceId> = $r39
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r39: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r40 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameserviceId>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r40: java.lang.String}
---------------------------------------
---------------------------------------
$z4 = staticinvoke <org.apache.hadoop.hdfs.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration,java.lang.String)>(r1, $r40)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r40: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z4: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled> = $z4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z4: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r41 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameserviceId>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r41: java.lang.String}
---------------------------------------
---------------------------------------
if $r41 == null goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r41: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r87 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r86 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r86: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r86.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r86: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r86: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Determined nameservice ID: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r86: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r88: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r89 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameserviceId>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r88: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r89: java.lang.String, $r88: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r89: java.lang.String, $r88: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r90: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r87: org.slf4j.Logger, $r90: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r91: java.lang.String, $r87: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r87.<org.slf4j.Logger: void info(java.lang.String)>($r91)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r91: java.lang.String, $r87: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r43 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r42 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r42: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r42.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r42: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r42: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HA Enabled: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r42: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$z5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r44: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $z5: boolean, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $z5: boolean, $r44: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r45: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r43: org.slf4j.Logger, $r45: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r46: java.lang.String, $r43: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String)>($r46)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r46: java.lang.String, $r43: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$z6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 != 0 goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z6: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$z12 = staticinvoke <org.apache.hadoop.hdfs.HAUtil: boolean usesSharedEditsDir(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z12: boolean}
---------------------------------------
---------------------------------------
if $z12 == 0 goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z12: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r80 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r79 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, r1: org.apache.hadoop.conf.Configuration, $r79: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r79.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, r1: org.apache.hadoop.conf.Configuration, $r79: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, r1: org.apache.hadoop.conf.Configuration, $r79: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configured NNs:\n")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, r1: org.apache.hadoop.conf.Configuration, $r79: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, $r81: java.lang.StringBuilder, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r82 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: java.lang.String nnAddressesAsString(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, $r81: java.lang.StringBuilder, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, $r82: java.lang.String, $r81: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, $r82: java.lang.String, $r81: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, $r83: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r80: org.slf4j.Logger, $r83: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: java.lang.String, $r80: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r80.<org.slf4j.Logger: void warn(java.lang.String)>($r84)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: java.lang.String, $r80: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r85 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r85: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r85.<java.io.IOException: void <init>(java.lang.String)>("Invalid configuration: a shared edits dir must not be specified if HA is not enabled.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r85: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r85: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r85
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r85: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r47 = new org.apache.hadoop.hdfs.server.blockmanagement.BlockManager
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r47: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r47: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r47: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, $z7: boolean}
---------------------------------------
---------------------------------------
specialinvoke $r47.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void <init>(org.apache.hadoop.hdfs.server.namenode.Namesystem,boolean,org.apache.hadoop.conf.Configuration)>(r0, $z7, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r47: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, $z7: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r47: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> = $r47
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r47: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r48 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r48: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r48.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r48: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r49: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r50 = virtualinvoke $r49.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics getDatanodeStatistics()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r49: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r50: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics> = $r50
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration, $r50: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r115 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String,java.lang.String)>("dfs.checksum.type", "CRC32C")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.util.DataChecksum$Type: org.apache.hadoop.util.DataChecksum$Type valueOf(java.lang.String)>(r115)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$r109 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String, $r109: java.lang.IllegalArgumentException}
---------------------------------------
---------------------------------------
r116 = $r109
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String, $r109: java.lang.IllegalArgumentException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String}
---------------------------------------
---------------------------------------
$r110 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r115: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String}
---------------------------------------
---------------------------------------
$r111 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String, $r111: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r111.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String, $r111: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String, $r111: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid checksum type in dfs.checksum.type: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String, $r111: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String, $r112: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r115)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, r115: java.lang.String, $r112: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, $r113: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, $r113: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, $r114: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r110.<java.io.IOException: void <init>(java.lang.String)>($r114)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException, $r114: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r110
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r110: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r51 = new org.apache.hadoop.fs.FsServerDefaults
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLongBytes(java.lang.String,long)>("dfs.blocksize", 134217728L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$i4 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.bytes-per-checksum", 512)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$i5 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.client-write-packet-size", 65536)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$i6 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.replication", 3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, r3: org.apache.hadoop.util.DataChecksum$Type, $i6: int}
---------------------------------------
---------------------------------------
$s7 = (short) $i6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, r3: org.apache.hadoop.util.DataChecksum$Type, $i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$i8 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("io.file.buffer.size", 4096)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$z8 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.encrypt.data.transfer", 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$l9 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("fs.trash.interval", 0L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type}
---------------------------------------
---------------------------------------
$r52 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: java.lang.String getTrimmed(java.lang.String,java.lang.String)>("hadoop.security.key.provider.path", "")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String}
---------------------------------------
---------------------------------------
$r53 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $r53: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r54 = virtualinvoke $r53.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite getStoragePolicySuite()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $r53: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $r54: org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite}
---------------------------------------
---------------------------------------
$r55 = virtualinvoke $r54.<org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy getDefaultPolicy()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $r54: org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $r55: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy}
---------------------------------------
---------------------------------------
$b10 = virtualinvoke $r55.<org.apache.hadoop.hdfs.protocol.BlockStoragePolicy: byte getId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $r55: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $b10: byte}
---------------------------------------
---------------------------------------
specialinvoke $r51.<org.apache.hadoop.fs.FsServerDefaults: void <init>(long,int,int,short,int,boolean,long,org.apache.hadoop.util.DataChecksum$Type,java.lang.String,byte)>($l3, $i4, $i5, $s7, $i8, $z8, $l9, r3, $r52, $b10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults, $l3: long, $i4: int, $i5: int, $s7: short, $i8: int, $z8: boolean, $l9: long, r3: org.apache.hadoop.util.DataChecksum$Type, $r52: java.lang.String, $b10: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.fs.FsServerDefaults serverDefaults> = $r51
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r51: org.apache.hadoop.fs.FsServerDefaults}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$l11 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.max.objects", 0L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l11: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxFsObjects> = $l11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l11: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$l12 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.fs-limits.min-block-size", 1048576L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l12: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long minBlockSize> = $l12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l12: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$l13 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.fs-limits.max-blocks-per-file", 10000L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l13: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxBlocksPerFile> = $l13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l13: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i14 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.file.close.num-committed-allowed", 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i14: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int numCommittedAllowed> = $i14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i14: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i15 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.max-corrupt-file-blocks-returned", 100)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i15: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int maxCorruptFileBlocksReturn> = $i15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i15: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r56 = staticinvoke <org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure get(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r56: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure dtpReplaceDatanodeOnFailure> = $r56
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r56: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$z9 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.ha.standby.checkpoints", 1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z9: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean standbyShouldCheckpoint> = $z9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z9: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$f0 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: float getFloat(java.lang.String,float)>("dfs.namenode.edit.log.autoroll.multiplier.threshold", 2.0F)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f0: float}
---------------------------------------
---------------------------------------
$l16 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.checkpoint.txns", 1000000L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f0: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f0: float, $l16: long}
---------------------------------------
---------------------------------------
$f1 = (float) $l16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f0: float, $l16: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f0: float, $f1: float}
---------------------------------------
---------------------------------------
$f2 = $f0 * $f1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f0: float, $f1: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f2: float}
---------------------------------------
---------------------------------------
$l17 = (long) $f2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $f2: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l17: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long editLogRollerThreshold> = $l17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l17: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i18 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.edit.log.autoroll.check.interval.ms", 300000)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i18: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int editLogRollerInterval> = $i18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i18: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i19 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.lazypersist.file.scrub.interval.sec", 300)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i19: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int lazyPersistFileScrubIntervalSec> = $i19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i19: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i20 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int lazyPersistFileScrubIntervalSec>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i20: int}
---------------------------------------
---------------------------------------
if $i20 >= 0 goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i20: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r78 = new java.lang.IllegalArgumentException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r78: java.lang.IllegalArgumentException}
---------------------------------------
---------------------------------------
specialinvoke $r78.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dfs.namenode.lazypersist.file.scrub.interval.sec must be zero (for disable) or greater than zero.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r78: java.lang.IllegalArgumentException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r78: java.lang.IllegalArgumentException}
---------------------------------------
---------------------------------------
throw $r78
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r78: java.lang.IllegalArgumentException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i21 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.edekcacheloader.initial.delay.ms", 3000)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i21: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int edekCacheLoaderDelay> = $i21
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i21: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$i22 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.edekcacheloader.interval.ms", 1000)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i22: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int edekCacheLoaderInterval> = $i22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i22: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$l23 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.lease-recheck-interval-ms", 2000L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l23: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long leaseRecheckIntervalMs> = $l23
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l23: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$l24 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.max-lock-hold-to-release-lease-ms", 25L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l24: long}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxLockHoldToReleaseLeaseMs> = $l24
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $l24: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$z10 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.namenode.delegation.token.always-use", 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z10: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean alwaysUseDelegationTokensForTests> = $z10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z10: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r57 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager createDelegationTokenSecretManager(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r57: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager> = $r57
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r57: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r58 = new org.apache.hadoop.hdfs.server.namenode.FSDirectory
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r58: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
specialinvoke $r58.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.conf.Configuration)>(r0, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r58: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r58: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir> = $r58
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r58: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r59 = new org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r59: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
$r60 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r59: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r59: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, $r60: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
specialinvoke $r59.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hdfs.server.namenode.FSDirectory)>(r1, $r60)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r59: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, $r60: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r59: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager> = $r59
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r59: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r61 = new org.apache.hadoop.hdfs.server.namenode.CacheManager
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r61: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
$r62 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r61: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r61: org.apache.hadoop.hdfs.server.namenode.CacheManager, $r62: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
specialinvoke $r61.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.hdfs.server.blockmanagement.BlockManager)>(r0, r1, $r62)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r61: org.apache.hadoop.hdfs.server.namenode.CacheManager, $r62: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r61: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager> = $r61
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r61: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r63 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager getInstance()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r63: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager}
---------------------------------------
---------------------------------------
virtualinvoke $r63.<org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager: void init(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r63: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r64 = new org.apache.hadoop.hdfs.server.namenode.top.TopConf
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r64: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
---------------------------------------
---------------------------------------
specialinvoke $r64.<org.apache.hadoop.hdfs.server.namenode.top.TopConf: void <init>(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r64: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r64: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.TopConf topConf> = $r64
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r64: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r65 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List initAuditLoggers(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r65: java.util.List}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers> = $r65
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r65: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r66 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r66: java.util.List}
---------------------------------------
---------------------------------------
$i25 = interfaceinvoke $r66.<java.util.List: int size()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r66: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i25: int}
---------------------------------------
---------------------------------------
if $i25 != 1 goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $i25: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r76 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r76: java.util.List}
---------------------------------------
---------------------------------------
$r77 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r76: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r77: java.lang.Object}
---------------------------------------
---------------------------------------
$z11 = $r77 instanceof org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $r77: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z11: boolean}
---------------------------------------
---------------------------------------
if $z11 == 0 goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z11: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$z13 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z13: boolean}
---------------------------------------
---------------------------------------
goto label11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z13: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z13: boolean}
---------------------------------------
---------------------------------------
$z13 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z13: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isDefaultAuditLogger> = $z13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean, $z13: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r118 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r118: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
goto label13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r118: org.apache.hadoop.ipc.RetryCache}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r118: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
$r118 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache initRetryCache(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r118: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache> = $r118
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r118: org.apache.hadoop.ipc.RetryCache}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r119 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: java.lang.Class getClass(java.lang.String,java.lang.Class,java.lang.Class)>("dfs.namenode.inode.attributes.provider.class", null, class "Lorg/apache/hadoop/hdfs/server/namenode/INodeAttributeProvider;")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class}
---------------------------------------
---------------------------------------
if r119 == null goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class}
---------------------------------------
---------------------------------------
$r67 = staticinvoke <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>(r119, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class, $r67: java.lang.Object}
---------------------------------------
---------------------------------------
$r68 = (org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider) $r67
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class, $r67: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class, $r68: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider inodeAttributeProvider> = $r68
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class, $r68: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class}
---------------------------------------
---------------------------------------
$r70 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r119: java.lang.Class}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, r119: java.lang.Class}
---------------------------------------
---------------------------------------
$r69 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, r119: java.lang.Class}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, r119: java.lang.Class, $r69: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, r119: java.lang.Class, $r69: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, r119: java.lang.Class, $r69: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using INode attribute provider: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, r119: java.lang.Class, $r69: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, $r71: java.lang.StringBuilder, r119: java.lang.Class}
---------------------------------------
---------------------------------------
$r72 = virtualinvoke r119.<java.lang.Class: java.lang.String getName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, $r71: java.lang.StringBuilder, r119: java.lang.Class}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, $r72: java.lang.String, $r71: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, $r72: java.lang.String, $r71: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, $r73: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r70: org.slf4j.Logger, $r73: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r74: java.lang.String, $r70: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r70.<org.slf4j.Logger: void info(java.lang.String)>($r74)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r74: java.lang.String, $r70: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$i26 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.list.openfiles.num.responses", 1000)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $i26: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int maxListOpenFilesResponses> = $i26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $i26: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$i27 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int maxListOpenFilesResponses>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $i27: int}
---------------------------------------
---------------------------------------
if $i27 <= 0 goto label15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $i27: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$z14 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z14: boolean}
---------------------------------------
---------------------------------------
goto label16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z14: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z14: boolean}
---------------------------------------
---------------------------------------
$z14 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z14: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z14, "dfs.namenode.list.openfiles.num.responses must be a positive integer.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z14: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$i28 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("dfs.namenode.block.deletion.increment", 1000)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i28: int}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int blockDeletionIncrement> = $i28
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i28: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i29 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int blockDeletionIncrement>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i29: int}
---------------------------------------
---------------------------------------
if $i29 <= 0 goto label17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i29: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z15 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z15: boolean}
---------------------------------------
---------------------------------------
goto label18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z15: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z15: boolean}
---------------------------------------
---------------------------------------
$z15 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z15: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z15, "dfs.namenode.block.deletion.increment must be a positive integer.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z15: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label22
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r101 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r101: java.io.IOException}
---------------------------------------
---------------------------------------
r120 = $r101
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r101: java.io.IOException}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r103 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r102 = new java.lang.StringBuilder
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r102: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r102.<java.lang.StringBuilder: void <init>()>()
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r102: java.lang.StringBuilder}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r102: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r104 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r102: java.lang.StringBuilder}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r102: java.lang.StringBuilder, $r104: java.lang.Class}
---------------------------------------
---------------------------------------
$r105 = virtualinvoke $r104.<java.lang.Class: java.lang.String getSimpleName()>()
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r102: java.lang.StringBuilder, $r104: java.lang.Class}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r105: java.lang.String, $r102: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r106 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105)
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r105: java.lang.String, $r102: java.lang.StringBuilder}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r106: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" initialization failed.")
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r106: java.lang.StringBuilder}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r107: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r103: org.slf4j.Logger, $r107: java.lang.StringBuilder}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r108: java.lang.String, $r103: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r103.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r108, r120)
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r108: java.lang.String, $r103: org.slf4j.Logger}
Live out: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void close()>()
Live in: {r120: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r120: java.io.IOException}
---------------------------------------
---------------------------------------
throw r120
Live in: {r120: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
$r93 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r93: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
r121 = $r93
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r93: java.lang.RuntimeException}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r95 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r94 = new java.lang.StringBuilder
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r94: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r94.<java.lang.StringBuilder: void <init>()>()
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r94: java.lang.StringBuilder}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r94: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r96 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r94: java.lang.StringBuilder}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r94: java.lang.StringBuilder, $r96: java.lang.Class}
---------------------------------------
---------------------------------------
$r97 = virtualinvoke $r96.<java.lang.Class: java.lang.String getSimpleName()>()
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r94: java.lang.StringBuilder, $r96: java.lang.Class}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r97: java.lang.String, $r94: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r98 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97)
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r97: java.lang.String, $r94: java.lang.StringBuilder}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r98: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" initialization failed.")
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r98: java.lang.StringBuilder}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r99: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r95: org.slf4j.Logger, $r99: java.lang.StringBuilder}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r100: java.lang.String, $r95: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r95.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r100, r121)
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r100: java.lang.String, $r95: org.slf4j.Logger}
Live out: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void close()>()
Live in: {r121: java.lang.RuntimeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r121: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
throw r121
Live in: {r121: java.lang.RuntimeException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getAuditLoggers
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.List}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
getRetryCache
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
=======================================
=======================================
getLeaseRecheckIntervalMs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long leaseRecheckIntervalMs>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getMaxLockHoldToReleaseLeaseMs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxLockHoldToReleaseLeaseMs>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getMaxListOpenFilesResponses
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int maxListOpenFilesResponses>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
lockRetryCache
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.ipc.RetryCache}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.ipc.RetryCache: void lock()>()
Live in: {$r2: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
unlockRetryCache
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.ipc.RetryCache}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.ipc.RetryCache: void unlock()>()
Live in: {$r2: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
hasRetryCache
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {$r1: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
$z0 = 1
Live in: {}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {$z0: boolean}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
$z0 = 0
Live in: {}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
addCacheEntryWithPayload
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: byte[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i0 := @parameter1: int
Live in: {r1: byte[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.Object
Live in: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, r2: java.lang.Object, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r1: byte[], i0: int, r2: java.lang.Object, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, r2: java.lang.Object, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
if $r3 == null goto label1
Live in: {r1: byte[], i0: int, r2: java.lang.Object, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.ipc.RetryCache}
Live out: {r1: byte[], i0: int, r2: java.lang.Object, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r1: byte[], i0: int, r2: java.lang.Object, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, r2: java.lang.Object, $r4: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.ipc.RetryCache: void addCacheEntryWithPayload(byte[],int,java.lang.Object)>(r1, i0, r2)
Live in: {r1: byte[], i0: int, r2: java.lang.Object, $r4: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
addCacheEntry
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: byte[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i0 := @parameter1: int
Live in: {r1: byte[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
if $r2 == null goto label1
Live in: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.ipc.RetryCache}
Live out: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r1: byte[], i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: byte[], i0: int, $r3: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.ipc.RetryCache: void addCacheEntry(byte[],int)>(r1, i0)
Live in: {r1: byte[], i0: int, $r3: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getProvider
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {}
---------------------------------------
=======================================
=======================================
initRetryCache
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
z0 = virtualinvoke r0.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.namenode.enable.retrycache", 1)
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r1 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r1: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retry cache on namenode is ")
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r1: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
if z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = "enabled"
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r15: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r15: java.lang.String, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r15: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = "disabled"
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r15: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r15: java.lang.String, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r2: org.slf4j.Logger, $r4: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r5: java.lang.String, $r2: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r5)
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r5: java.lang.String, $r2: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label3
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
f0 = virtualinvoke r0.<org.apache.hadoop.conf.Configuration: float getFloat(java.lang.String,float)>("dfs.namenode.retrycache.heap.percent", 0.03F)
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {f0: float, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
l0 = virtualinvoke r0.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.retrycache.expirytime.millis", 600000L)
Live in: {f0: float, r0: org.apache.hadoop.conf.Configuration}
Live out: {f0: float, l0: long}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {f0: float, l0: long}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retry cache will use ")
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0)
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of total heap and retry cache entry expiry time is ")
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" millis")
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r7: org.slf4j.Logger, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {f0: float, l0: long, $r7: org.slf4j.Logger, $r12: java.lang.StringBuilder}
Live out: {f0: float, l0: long, $r13: java.lang.String, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>($r13)
Live in: {f0: float, l0: long, $r13: java.lang.String, $r7: org.slf4j.Logger}
Live out: {f0: float, l0: long}
---------------------------------------
---------------------------------------
$l2 = l0 * 1000L
Live in: {f0: float, l0: long}
Live out: {f0: float, $l2: long}
---------------------------------------
---------------------------------------
l1 = $l2 * 1000L
Live in: {f0: float, $l2: long}
Live out: {f0: float, l1: long}
---------------------------------------
---------------------------------------
$r14 = new org.apache.hadoop.ipc.RetryCache
Live in: {f0: float, l1: long}
Live out: {$r14: org.apache.hadoop.ipc.RetryCache, l1: long, f0: float}
---------------------------------------
---------------------------------------
$d0 = (double) f0
Live in: {$r14: org.apache.hadoop.ipc.RetryCache, l1: long, f0: float}
Live out: {$r14: org.apache.hadoop.ipc.RetryCache, $d0: double, l1: long}
---------------------------------------
---------------------------------------
specialinvoke $r14.<org.apache.hadoop.ipc.RetryCache: void <init>(java.lang.String,double,long)>("NameNodeRetryCache", $d0, l1)
Live in: {$r14: org.apache.hadoop.ipc.RetryCache, $d0: double, l1: long}
Live out: {$r14: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
return $r14
Live in: {$r14: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setCallerContextEnabled
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, $r3: java.util.List}
---------------------------------------
---------------------------------------
r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
Live in: {z0: boolean, $r3: java.util.List}
Live out: {r1: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.Iterator, z0: boolean}
Live out: {r1: java.util.Iterator, z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label3
Live in: {r1: java.util.Iterator, z0: boolean, $z1: boolean}
Live out: {r1: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
$r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.Iterator, z0: boolean}
Live out: {r1: java.util.Iterator, z0: boolean, $r4: java.lang.Object}
---------------------------------------
---------------------------------------
r2 = (org.apache.hadoop.hdfs.server.namenode.AuditLogger) $r4
Live in: {r1: java.util.Iterator, z0: boolean, $r4: java.lang.Object}
Live out: {r1: java.util.Iterator, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
$z2 = r2 instanceof org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger
Live in: {r1: java.util.Iterator, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r1: java.util.Iterator, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label2
Live in: {r1: java.util.Iterator, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, $z2: boolean}
Live out: {r1: java.util.Iterator, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
$r5 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger) r2
Live in: {z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger: void setCallerContextEnabled(boolean)>(z0)
Live in: {z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
Live out: {}
---------------------------------------
---------------------------------------
goto label3
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.Iterator, z0: boolean}
Live out: {r1: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getCallerContextEnabled
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List auditLoggers>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r3: java.util.List}
---------------------------------------
---------------------------------------
r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
Live in: {$r3: java.util.List}
Live out: {r1: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.Iterator}
Live out: {r1: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r1: java.util.Iterator, $z0: boolean}
Live out: {r1: java.util.Iterator}
---------------------------------------
---------------------------------------
$r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.Iterator}
Live out: {r1: java.util.Iterator, $r4: java.lang.Object}
---------------------------------------
---------------------------------------
r2 = (org.apache.hadoop.hdfs.server.namenode.AuditLogger) $r4
Live in: {r1: java.util.Iterator, $r4: java.lang.Object}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, r1: java.util.Iterator}
---------------------------------------
---------------------------------------
$z1 = r2 instanceof org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, r1: java.util.Iterator}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, r1: java.util.Iterator, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, r1: java.util.Iterator, $z1: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger, r1: java.util.Iterator}
---------------------------------------
---------------------------------------
$r5 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger) r2
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {$r5: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger: boolean getCallerContextEnabled()>()
Live in: {$r5: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
return $z2
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.Iterator}
Live out: {r1: java.util.Iterator}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
initAuditLoggers
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: java.util.Collection getTrimmedStringCollection(java.lang.String)>("dfs.namenode.audit.loggers")
Live in: {r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.conf.Configuration, r2: java.util.Collection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
Live in: {r1: org.apache.hadoop.conf.Configuration, r2: java.util.Collection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection}
---------------------------------------
---------------------------------------
if r2 == null goto label09
Live in: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection}
Live out: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection}
---------------------------------------
---------------------------------------
$z3 = interfaceinvoke r2.<java.util.Collection: boolean isEmpty()>()
Live in: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection}
Live out: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label09
Live in: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection, $z3: boolean}
Live out: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection}
---------------------------------------
---------------------------------------
r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Live in: {r1: org.apache.hadoop.conf.Configuration, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Collection}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label09
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z4: boolean}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r18: java.lang.Object}
---------------------------------------
---------------------------------------
r5 = (java.lang.String) $r18
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r18: java.lang.Object}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = "default"
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String, $r19: java.lang.String}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r5)
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String, $r19: java.lang.String}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label03
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String, $z5: boolean}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r22 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
---------------------------------------
---------------------------------------
specialinvoke $r22.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger: void <init>()>()
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
---------------------------------------
---------------------------------------
r26 = $r22
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
goto label04
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
$r20 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r5)
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r5: java.lang.String}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r20: java.lang.Class}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.Class: java.lang.Object newInstance()>()
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r20: java.lang.Class}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r21: java.lang.Object}
---------------------------------------
---------------------------------------
r26 = (org.apache.hadoop.hdfs.server.namenode.AuditLogger) $r21
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r21: java.lang.Object}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
interfaceinvoke r26.<org.apache.hadoop.hdfs.server.namenode.AuditLogger: void initialize(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r26)
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r26: org.apache.hadoop.hdfs.server.namenode.AuditLogger}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
goto label08
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r25 := @caughtexception
Live in: {}
Live out: {$r25: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
r27 = $r25
Live in: {$r25: java.lang.RuntimeException}
Live out: {r27: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
throw r27
Live in: {r27: java.lang.RuntimeException}
Live out: {}
---------------------------------------
---------------------------------------
$r23 := @caughtexception
Live in: {}
Live out: {$r23: java.lang.Exception}
---------------------------------------
---------------------------------------
r28 = $r23
Live in: {$r23: java.lang.Exception}
Live out: {r28: java.lang.Exception}
---------------------------------------
---------------------------------------
$r24 = new java.lang.RuntimeException
Live in: {r28: java.lang.Exception}
Live out: {$r24: java.lang.RuntimeException, r28: java.lang.Exception}
---------------------------------------
---------------------------------------
specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r28)
Live in: {$r24: java.lang.RuntimeException, r28: java.lang.Exception}
Live out: {$r24: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
throw $r24
Live in: {$r24: java.lang.RuntimeException}
Live out: {}
---------------------------------------
---------------------------------------
goto label01
Live in: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r4: java.util.Iterator, r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$z7 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z7: boolean}
---------------------------------------
---------------------------------------
if $z7 == 0 goto label10
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z7: boolean}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r17 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r17: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
---------------------------------------
---------------------------------------
specialinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger: void <init>()>()
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r17: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r17: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r17)
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r17: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$DefaultAuditLogger}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.TopConf topConf>
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r6: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
---------------------------------------
---------------------------------------
$z0 = $r6.<org.apache.hadoop.hdfs.server.namenode.top.TopConf: boolean isEnabled>
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r6: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label12
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z0: boolean}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r7 = new org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.TopConf topConf>
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, r1: org.apache.hadoop.conf.Configuration}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, r1: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
---------------------------------------
---------------------------------------
$r9 = $r8.<org.apache.hadoop.hdfs.server.namenode.top.TopConf: int[] nntopReportingPeriodsMs>
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, r1: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, r1: org.apache.hadoop.conf.Configuration, $r9: int[]}
---------------------------------------
---------------------------------------
specialinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics: void <init>(org.apache.hadoop.conf.Configuration,int[])>(r1, $r9)
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, r1: org.apache.hadoop.conf.Configuration, $r9: int[]}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics topMetrics> = $r7
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = staticinvoke <org.apache.hadoop.metrics2.lib.DefaultMetricsSystem: org.apache.hadoop.metrics2.MetricsSystem instance()>()
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.metrics2.MetricsSystem}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<org.apache.hadoop.metrics2.MetricsSystem: org.apache.hadoop.metrics2.MetricsSource getSource(java.lang.String)>("NNTopUserOpCounts")
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.metrics2.MetricsSystem}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.metrics2.MetricsSource}
---------------------------------------
---------------------------------------
if $r11 != null goto label11
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.metrics2.MetricsSource}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = staticinvoke <org.apache.hadoop.metrics2.lib.DefaultMetricsSystem: org.apache.hadoop.metrics2.MetricsSystem instance()>()
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.metrics2.MetricsSystem}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics topMetrics>
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.metrics2.MetricsSystem}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, $r14: org.apache.hadoop.metrics2.MetricsSystem}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.metrics2.MetricsSystem: java.lang.Object register(java.lang.String,java.lang.String,java.lang.Object)>("NNTopUserOpCounts", "Top N operations by user", $r15)
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics, $r14: org.apache.hadoop.metrics2.MetricsSystem}
Live out: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = new org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger
Live in: {r3: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.ArrayList, $r12: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics topMetrics>
Live in: {r3: java.util.ArrayList, $r12: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.ArrayList, $r12: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger, $r13: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics}
---------------------------------------
---------------------------------------
specialinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger: void <init>(org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics)>($r13)
Live in: {r3: java.util.ArrayList, $r12: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger, $r13: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics}
Live out: {r3: java.util.ArrayList, $r12: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r12)
Live in: {r3: java.util.ArrayList, $r12: org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger}
Live out: {r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r29 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r3)
Live in: {r3: java.util.ArrayList}
Live out: {$r29: java.util.List}
---------------------------------------
---------------------------------------
return $r29
Live in: {$r29: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
loadFSImage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r14 := @parameter0: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption FORMAT>
Live in: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r5: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
if r14 != $r5 goto label01
Live in: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r5: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.lang.String determineClusterId()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void format(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String)>(r0, $r12)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r14 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption REGULAR>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
z8 = 0
Live in: {r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r14.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext createRecoveryContext()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r2: org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext}
---------------------------------------
---------------------------------------
z0 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: boolean recoverTransitionRead(org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext)>(r14, r0, r2)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r2: org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption ROLLBACK>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption: boolean matches(org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption)>(r14)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label03
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z2: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo> = null
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label04
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
---------------------------------------
---------------------------------------
$z6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 != 0 goto label04
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z6: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
---------------------------------------
---------------------------------------
$z7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z7: boolean}
---------------------------------------
---------------------------------------
if $z7 != 0 goto label04
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z7: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
---------------------------------------
---------------------------------------
$z9 = 1
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z9: boolean}
---------------------------------------
---------------------------------------
goto label05
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z9: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z9: boolean}
---------------------------------------
---------------------------------------
$z9 = 0
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z9: boolean}
---------------------------------------
---------------------------------------
z1 = $z9
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z0: boolean, $z9: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r15 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean}
---------------------------------------
---------------------------------------
$r16 = new java.lang.StringBuilder
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r16: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to save fs image? ")
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r16: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r17: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (staleImage=")
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r18: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, z0: boolean, $r19: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", haEnabled=")
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r20: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$z10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r21: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $z10: boolean, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $z10: boolean, $r21: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isRollingUpgrade=")
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r22: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$z11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r23: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $z11: boolean, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $z11: boolean, $r23: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r24: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r15: org.slf4j.Logger, $r25: java.lang.StringBuilder}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r26: java.lang.String, $r15: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>($r26)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean, $r26: java.lang.String, $r15: org.slf4j.Logger}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean}
---------------------------------------
---------------------------------------
if z1 == 0 goto label06
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, z1: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void saveNamespace(org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(r0)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
goto label07
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress getStartupProgress()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase SAVING_CHECKPOINT>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress, $r7: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase}
---------------------------------------
---------------------------------------
virtualinvoke r3.<org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress: void beginPhase(org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase)>($r7)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress, $r7: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase SAVING_CHECKPOINT>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r8: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
virtualinvoke r3.<org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress: void endPhase(org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase)>($r8)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r8: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase, r3: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$z3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label09
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $z3: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$z4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label08
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $z4: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption UPGRADE>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r10: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
if r14 == $r10 goto label09
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r10: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$z5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label10
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $z5: boolean}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption UPGRADEONLY>
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r9: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
if r14 != $r9 goto label10
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, r14: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r9: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $i0: int}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void openEditLogForWrite(int)>($i0)
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $i0: int}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
z12 = 1
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, z12: boolean}
---------------------------------------
---------------------------------------
if z12 != 0 goto label12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, z12: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void close()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String,boolean)>("loadFSImage", 1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r13
Live in: {z8: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, $r13: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, z8: boolean}
---------------------------------------
---------------------------------------
if z8 != 0 goto label15
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage, z8: boolean}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void close()>()
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String,boolean)>("loadFSImage", 1)
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void imageLoadComplete()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
startSecretManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
if $r2 == null goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r3: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void startThreads()>()
Live in: {$r3: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r4 := @caughtexception
Live in: {}
Live out: {$r4: java.io.IOException}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {$r4: java.io.IOException}
Live out: {r1: java.io.IOException}
---------------------------------------
---------------------------------------
$r5 = new java.lang.RuntimeException
Live in: {r1: java.io.IOException}
Live out: {$r5: java.lang.RuntimeException, r1: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1)
Live in: {$r5: java.lang.RuntimeException, r1: java.io.IOException}
Live out: {$r5: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
throw $r5
Live in: {$r5: java.lang.RuntimeException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
startSecretManagerIfNecessary
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z6: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new java.lang.AssertionError
Live in: {}
Live out: {$r2: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>("Starting secret manager needs write lock")
Live in: {$r2: java.lang.AssertionError}
Live out: {$r2: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r2
Live in: {$r2: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$z3 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean shouldUseDelegationTokens()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z4: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isOpenForWrite()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z5: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z7 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z7: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z7: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z7: boolean}
---------------------------------------
---------------------------------------
$z7 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z7: boolean}
---------------------------------------
---------------------------------------
z0 = $z7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z7: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r3: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
z1 = virtualinvoke $r3.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: boolean isRunning()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r3: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean}
---------------------------------------
---------------------------------------
if z1 != 0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void startSecretManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
stopSecretManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void stopThreads()>()
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
startCommonServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void registerMBean()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext> = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r4 = new org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
---------------------------------------
---------------------------------------
specialinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker: void <init>(org.apache.hadoop.conf.Configuration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker nnResourceChecker> = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkAvailableResources()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r17: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke $r17.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isPopulatingReplQueues()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r17: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r18 = new java.lang.AssertionError
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r18.<java.lang.AssertionError: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.AssertionError}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.AssertionError}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r20 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress getStartupProgress()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase SAFEMODE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress, $r5: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase}
---------------------------------------
---------------------------------------
virtualinvoke r20.<org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress: void beginPhase(org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress, $r5: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCompleteBlocksTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase SAFEMODE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step STEP_AWAITING_REPORTED_BLOCKS>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase, $r6: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
---------------------------------------
---------------------------------------
virtualinvoke r20.<org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress: void setTotal(org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase,org.apache.hadoop.hdfs.server.namenode.startupprogress.Step,long)>($r7, $r6, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase, $r6: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step, r20: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void activate(org.apache.hadoop.conf.Configuration,long)>(r1, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, l0: long, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startCommonServices")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r19 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startCommonServices")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void registerMXBean()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r9 = staticinvoke <org.apache.hadoop.metrics2.lib.DefaultMetricsSystem: org.apache.hadoop.metrics2.MetricsSystem instance()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r9: org.apache.hadoop.metrics2.MetricsSystem}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.metrics2.MetricsSystem: java.lang.Object register(java.lang.Object)>(r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r9: org.apache.hadoop.metrics2.MetricsSystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider inodeAttributeProvider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r11: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
---------------------------------------
---------------------------------------
if $r11 == null goto label7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r11: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider inodeAttributeProvider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r14: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider: void start()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r14: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider inodeAttributeProvider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r15: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void setINodeAttributeProvider(org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r15: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: void registerMXBean()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r21 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: java.net.InetSocketAddress getServiceAddress(org.apache.hadoop.conf.Configuration,boolean)>(r1, 1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r21: java.net.InetSocketAddress}
---------------------------------------
---------------------------------------
if r21 == null goto label8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r21: java.net.InetSocketAddress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r21: java.net.InetSocketAddress}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r21.<java.net.InetSocketAddress: java.lang.String getHostName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r21: java.net.InetSocketAddress}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.String}
---------------------------------------
---------------------------------------
goto label9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.String}
---------------------------------------
---------------------------------------
$r22 = ""
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.String}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameNodeHostName> = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.String}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
stopCommonServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider inodeAttributeProvider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
---------------------------------------
---------------------------------------
if $r2 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void setINodeAttributeProvider(org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider)>(null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider inodeAttributeProvider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider: void stop()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.INodeAttributeProvider}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
if $r3 == null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void close()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("stopCommonServices")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("stopCommonServices")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ipc.RetryCache retryCache>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r4: org.apache.hadoop.ipc.RetryCache}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.ipc.RetryCache: void clear(org.apache.hadoop.ipc.RetryCache)>($r4)
Live in: {$r4: org.apache.hadoop.ipc.RetryCache}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
startActiveServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean startingActiveService> = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Starting services required for active state")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r1 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isOpenForWrite()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void initJournalsForWrite()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void recoverUnclosedStreams()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r29 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r29: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String)>("Catching up to latest edits from old active before taking over writer role in edits logs")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r29: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r30 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r30: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
virtualinvoke $r30.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: void catchupDuringFailover()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r30: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r31 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r31.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void setPostponeBlocksFromFuture(boolean)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r32 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r32: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r32.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r32: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r33: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r33.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void markAllDatanodesStale()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r33: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r34 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r34: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r34.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void clearQueues()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r34: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r35 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r35: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r35.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processAllPendingDNMessages()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r35: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r51 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r51: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r51.<org.slf4j.Logger: void info(java.lang.String)>("Reprocessing replication and invalidation queues")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r51: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r52 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r52: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r52.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void initializeReplQueues()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r52: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r36 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r36: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke $r36.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r36: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r46 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r45 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r45: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r45: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r45: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNode metadata after re-processing replication and invalidation queues during failover:\n")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r45: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r48 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String metaSaveAsString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r47: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r48: java.lang.String, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r48: java.lang.String, $r47: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r46: org.slf4j.Logger, $r49: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r50: java.lang.String, $r46: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>($r50)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r50: java.lang.String, $r46: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r37 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r37: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$l7 = virtualinvoke $r37.<org.apache.hadoop.hdfs.server.namenode.FSImage: long getLastAppliedTxId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r37: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $l7: long}
---------------------------------------
---------------------------------------
l0 = $l7 + 1L
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $l7: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r39 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r38 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will take over writing edit logs at txnid ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r40: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r41: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r39: org.slf4j.Logger, $r41: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r42: java.lang.String, $r39: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String)>($r42)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r42: java.lang.String, $r39: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void setNextTxId(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r43 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r44 = $r43.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r44: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$i8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r44: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i8: int, $r44: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r44.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void openForWrite(int)>($i8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i8: int, $r44: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r55 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r55: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r55.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void updateCountForQuota()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r55: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r56 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r56: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r56.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void enableQuotaChecks()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r56: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r57 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r57: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r58 = $r57.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager ezManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r57: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r58: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager}
---------------------------------------
---------------------------------------
virtualinvoke $r58.<org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager: void startReencryptThreads()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r58: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r28 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r28: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r28.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void renewAllLeases()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r28: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void startMonitor()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void startSecretManagerIfNecessary()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new org.apache.hadoop.util.Daemon
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
$r7 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon, $r7: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor}
---------------------------------------
---------------------------------------
specialinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon, $r7: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon, $r7: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor}
---------------------------------------
---------------------------------------
specialinvoke $r6.<org.apache.hadoop.util.Daemon: void <init>(java.lang.Runnable)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon, $r7: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnrmthread> = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnrmthread>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
virtualinvoke $r8.<org.apache.hadoop.util.Daemon: void start()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = new org.apache.hadoop.util.Daemon
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
$r10 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller}
---------------------------------------
---------------------------------------
$l2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long editLogRollerThreshold>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller, $l2: long}
---------------------------------------
---------------------------------------
$i1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int editLogRollerInterval>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller, $l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller, $l2: long, $i1: int}
---------------------------------------
---------------------------------------
specialinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,long,int)>(r0, $l2, $i1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller, $l2: long, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller}
---------------------------------------
---------------------------------------
specialinvoke $r9.<org.apache.hadoop.util.Daemon: void <init>(java.lang.Runnable)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon, $r10: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnEditLogRoller> = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnEditLogRoller>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.util.Daemon: void start()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int lazyPersistFileScrubIntervalSec>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i3: int}
---------------------------------------
---------------------------------------
if $i3 <= 0 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r25 = new org.apache.hadoop.util.Daemon
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
$r26 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon, $r26: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber}
---------------------------------------
---------------------------------------
$i6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int lazyPersistFileScrubIntervalSec>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon, $r26: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon, $r26: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber, $i6: int}
---------------------------------------
---------------------------------------
specialinvoke $r26.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,int)>(r0, $i6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon, $r26: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber, $i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon, $r26: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber}
---------------------------------------
---------------------------------------
specialinvoke $r25.<org.apache.hadoop.util.Daemon: void <init>(java.lang.Runnable)>($r26)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon, $r26: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon lazyPersistFileScrubber> = $r25
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r27 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon lazyPersistFileScrubber>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
virtualinvoke $r27.<org.apache.hadoop.util.Daemon: void start()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>("Lazy persist file scrubber is disabled, configured scrub interval is zero.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void startMonitorThread()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void setShouldSendCachingCommands(boolean)>(1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
if $r16 == null goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 = new com.google.common.util.concurrent.ThreadFactoryBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.util.concurrent.ThreadFactoryBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r18.<com.google.common.util.concurrent.ThreadFactoryBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.util.concurrent.ThreadFactoryBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.util.concurrent.ThreadFactoryBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean)>(1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.util.concurrent.ThreadFactoryBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: com.google.common.util.concurrent.ThreadFactoryBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)>("Warm Up EDEK Cache Thread #%d")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: com.google.common.util.concurrent.ThreadFactoryBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: com.google.common.util.concurrent.ThreadFactoryBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: com.google.common.util.concurrent.ThreadFactoryBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r21: java.util.concurrent.ThreadFactory}
---------------------------------------
---------------------------------------
$r22 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>($r21)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r21: java.util.concurrent.ThreadFactory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.util.concurrent.ExecutorService}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.ExecutorService edekCacheLoader> = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.util.concurrent.ExecutorService}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r24 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.ExecutorService edekCacheLoader>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService}
---------------------------------------
---------------------------------------
$r23 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$i5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int edekCacheLoaderDelay>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $i5: int}
---------------------------------------
---------------------------------------
$i4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int edekCacheLoaderInterval>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $i5: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $i5: int, $i4: int}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: void warmUpEdekCache(java.util.concurrent.ExecutorService,org.apache.hadoop.hdfs.server.namenode.FSDirectory,int,int)>($r24, $r23, $i5, $i4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.util.concurrent.ExecutorService, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $i5: int, $i4: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean startingActiveService> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void checkSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startActiveServices")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label11
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r53 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r53: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r53
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r53: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean startingActiveService> = 0
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r54 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r54: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r54.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void checkSafeMode()>()
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r54: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startActiveServices")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
inActiveState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r3 = interfaceinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState()>()
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.ha.HAServiceProtocol$HAServiceState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState ACTIVE>
Live in: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
if $r4 != $r5 goto label1
Live in: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {}
---------------------------------------
---------------------------------------
$z0 = 1
Live in: {}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {$z0: boolean}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
$z0 = 0
Live in: {}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
inTransitionToActive
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean inActiveState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean startingActiveService>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label1
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z3 = 1
Live in: {}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {$z3: boolean}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
$z3 = 0
Live in: {}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
return $z3
Live in: {$z3: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
shouldUseDelegationTokens
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean alwaysUseDelegationTokensForTests>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {$z2: boolean}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
return $z2
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
stopActiveServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Stopping services started for active state")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopSecretManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void stopMonitor()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnrmthread>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
if $r4 == null goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r37 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnrmthread>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r37: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<org.apache.hadoop.util.Daemon: java.lang.Runnable getRunnable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r37: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r38: java.lang.Runnable}
---------------------------------------
---------------------------------------
$r39 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor) $r38
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r38: java.lang.Runnable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor}
---------------------------------------
---------------------------------------
virtualinvoke $r39.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor: void stopMonitor()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeResourceMonitor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r40 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnrmthread>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r40: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
virtualinvoke $r40.<org.apache.hadoop.util.Daemon: void interrupt()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r40: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.ExecutorService edekCacheLoader>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.concurrent.ExecutorService}
---------------------------------------
---------------------------------------
if $r5 == null goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.concurrent.ExecutorService}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r35 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.ExecutorService edekCacheLoader>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r35: java.util.concurrent.ExecutorService}
---------------------------------------
---------------------------------------
interfaceinvoke $r35.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r35: java.util.concurrent.ExecutorService}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnEditLogRoller>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
if $r6 == null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r31 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnEditLogRoller>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r31: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<org.apache.hadoop.util.Daemon: java.lang.Runnable getRunnable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r31: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.lang.Runnable}
---------------------------------------
---------------------------------------
$r33 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller) $r32
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.lang.Runnable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller}
---------------------------------------
---------------------------------------
virtualinvoke $r33.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller: void stop()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$NameNodeEditLogRoller}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r34 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon nnEditLogRoller>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r34: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
virtualinvoke $r34.<org.apache.hadoop.util.Daemon: void interrupt()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r34: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon lazyPersistFileScrubber>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
if $r7 == null goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r27 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon lazyPersistFileScrubber>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<org.apache.hadoop.util.Daemon: java.lang.Runnable getRunnable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r28: java.lang.Runnable}
---------------------------------------
---------------------------------------
$r29 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber) $r28
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r28: java.lang.Runnable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber}
---------------------------------------
---------------------------------------
virtualinvoke $r29.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber: void stop()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r30 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.util.Daemon lazyPersistFileScrubber>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: org.apache.hadoop.util.Daemon}
---------------------------------------
---------------------------------------
virtualinvoke $r30.<org.apache.hadoop.util.Daemon: void interrupt()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: org.apache.hadoop.util.Daemon}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
if $r8 == null goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r21: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
if $r21 == null goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r21: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r23 = $r22.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r23: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
if $r23 == null goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r23: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r26 = $r25.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r26.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void close()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r24.<org.apache.hadoop.hdfs.server.namenode.FSImage: void updateLastAppliedTxIdFromWritten()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r42 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r42: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
if $r42 == null goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r42: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r19 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r20 = $r19.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager ezManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager}
---------------------------------------
---------------------------------------
virtualinvoke $r20.<org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager: void stopReencryptThread()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
if $r9 == null goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void stopMonitorThread()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void clearDirectiveStats()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
if $r10 == null goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void clearPendingCachingCommands()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void setShouldSendCachingCommands(boolean)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void clearQueues()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void setInitializedReplQueues(boolean)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("stopActiveServices")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label12
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r41 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r41: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r41
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r41: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("stopActiveServices")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
startStandbyServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r2: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Starting services required for standby state")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r2: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r3: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r4 = $r3.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r3: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isOpenForRead()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r11: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r12 = $r11.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r11: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void initSharedJournalsForRead()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void setPostponeBlocksFromFuture(boolean)>(1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void disableQuotaChecks()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r7 = new org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r7: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
specialinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.conf.Configuration)>(r0, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r7: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r7: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer> = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r7: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
virtualinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: void start()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $r8: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean standbyShouldCheckpoint>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r9 = new org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
specialinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(r1, r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer, r1: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer> = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r10: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer: void start()>()
Live in: {$r10: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
triggerRollbackCheckpoint
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setNeedRollbackFsImage(boolean)>(1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer: void triggerRollbackCheckpoint()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
prepareToStopStandbyServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer: void cancelAndPreventCheckpoints(java.lang.String)>("About to leave standby state")
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
stopStandbyServices
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping services started for standby state")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
if $r2 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer standbyCheckpointer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer: void stop()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.ha.StandbyCheckpointer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
if $r3 == null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: void stop()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
if $r4 == null goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
if $r5 == null goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r7 = $r6.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
if $r7 == null goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r9 = $r8.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void close()>()
Live in: {$r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkOperation
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
if $r2 == null goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, $r3: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
interfaceinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>(r1)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory, $r3: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkNameNodeSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.SafeModeException newSafemodeException(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label1
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
if $r3 == null goto label1
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r5 = interfaceinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.ha.HAServiceProtocol$HAServiceState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState ACTIVE>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r7: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
if $r6 != $r7 goto label1
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r7: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInStartupSafeMode()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label1
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $z2: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
---------------------------------------
---------------------------------------
$r8 = new org.apache.hadoop.ipc.RetriableException
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
Live out: {$r8: org.apache.hadoop.ipc.RetriableException, r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
---------------------------------------
---------------------------------------
specialinvoke $r8.<org.apache.hadoop.ipc.RetriableException: void <init>(java.lang.Exception)>(r2)
Live in: {$r8: org.apache.hadoop.ipc.RetriableException, r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
Live out: {$r8: org.apache.hadoop.ipc.RetriableException}
---------------------------------------
---------------------------------------
throw $r8
Live in: {$r8: org.apache.hadoop.ipc.RetriableException}
Live out: {}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
newSafemodeException
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.hdfs.server.namenode.SafeModeException
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r3 = new java.lang.StringBuilder
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Name node is in safe mode.\n")
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getSafeModeTip()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NamenodeHostName:")
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r8: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String nameNodeHostName>
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r8: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r9: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r9: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r10: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r11: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.SafeModeException: void <init>(java.lang.String)>($r11)
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException, $r11: java.lang.String}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
Live out: {}
---------------------------------------
=======================================
=======================================
isPermissionEnabled
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getNamespaceDirs
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getStorageDirs(org.apache.hadoop.conf.Configuration,java.lang.String)>(r0, "dfs.namenode.name.dir")
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {$r1: java.util.Collection}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.util.Collection}
Live out: {}
---------------------------------------
=======================================
=======================================
getRequiredNamespaceEditsDirs
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r2 = new java.util.HashSet
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration, $r2: java.util.HashSet}
---------------------------------------
---------------------------------------
specialinvoke $r2.<java.util.HashSet: void <init>()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, $r2: java.util.HashSet}
Live out: {r0: org.apache.hadoop.conf.Configuration, $r2: java.util.HashSet}
---------------------------------------
---------------------------------------
r1 = $r2
Live in: {r0: org.apache.hadoop.conf.Configuration, $r2: java.util.HashSet}
Live out: {r1: java.util.HashSet, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getStorageDirs(org.apache.hadoop.conf.Configuration,java.lang.String)>(r0, "dfs.namenode.edits.dir.required")
Live in: {r1: java.util.HashSet, r0: org.apache.hadoop.conf.Configuration}
Live out: {r1: java.util.HashSet, r0: org.apache.hadoop.conf.Configuration, $r3: java.util.Collection}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r3)
Live in: {r1: java.util.HashSet, r0: org.apache.hadoop.conf.Configuration, $r3: java.util.Collection}
Live out: {r1: java.util.HashSet, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List getSharedEditsDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r1: java.util.HashSet, r0: org.apache.hadoop.conf.Configuration}
Live out: {r1: java.util.HashSet, $r4: java.util.List}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>($r4)
Live in: {r1: java.util.HashSet, $r4: java.util.List}
Live out: {r1: java.util.HashSet}
---------------------------------------
---------------------------------------
return r1
Live in: {r1: java.util.HashSet}
Live out: {}
---------------------------------------
=======================================
=======================================
getStorageDirs
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.lang.String}
---------------------------------------
---------------------------------------
r13 = virtualinvoke r0.<org.apache.hadoop.conf.Configuration: java.util.Collection getTrimmedStringCollection(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.lang.String}
Live out: {r13: java.util.Collection, r1: java.lang.String, r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r2 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption getStartupOption(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r13: java.util.Collection, r1: java.lang.String, r0: org.apache.hadoop.conf.Configuration}
Live out: {r13: java.util.Collection, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption IMPORT>
Live in: {r13: java.util.Collection, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r13: java.util.Collection, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r5: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
---------------------------------------
---------------------------------------
if r2 != $r5 goto label2
Live in: {r13: java.util.Collection, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption, $r5: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption}
Live out: {r13: java.util.Collection, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = new org.apache.hadoop.hdfs.HdfsConfiguration
Live in: {r13: java.util.Collection, r1: java.lang.String}
Live out: {r13: java.util.Collection, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.HdfsConfiguration}
---------------------------------------
---------------------------------------
specialinvoke $r6.<org.apache.hadoop.hdfs.HdfsConfiguration: void <init>(boolean)>(0)
Live in: {r13: java.util.Collection, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.HdfsConfiguration}
Live out: {r13: java.util.Collection, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.HdfsConfiguration}
---------------------------------------
---------------------------------------
r3 = $r6
Live in: {r13: java.util.Collection, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.HdfsConfiguration}
Live out: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
---------------------------------------
---------------------------------------
virtualinvoke r3.<org.apache.hadoop.conf.Configuration: void addResource(java.lang.String)>("core-default.xml")
Live in: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
Live out: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
---------------------------------------
---------------------------------------
virtualinvoke r3.<org.apache.hadoop.conf.Configuration: void addResource(java.lang.String)>("core-site.xml")
Live in: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
Live out: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
---------------------------------------
---------------------------------------
virtualinvoke r3.<org.apache.hadoop.conf.Configuration: void addResource(java.lang.String)>("hdfs-default.xml")
Live in: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
Live out: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r3.<org.apache.hadoop.conf.Configuration: java.util.Collection getTrimmedStringCollection(java.lang.String)>(r1)
Live in: {r13: java.util.Collection, r1: java.lang.String, r3: org.apache.hadoop.hdfs.HdfsConfiguration}
Live out: {r13: java.util.Collection, r1: java.lang.String, r4: java.util.Collection}
---------------------------------------
---------------------------------------
interfaceinvoke r13.<java.util.Collection: boolean removeAll(java.util.Collection)>(r4)
Live in: {r13: java.util.Collection, r1: java.lang.String, r4: java.util.Collection}
Live out: {r13: java.util.Collection, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke r13.<java.util.Collection: boolean isEmpty()>()
Live in: {r13: java.util.Collection, r1: java.lang.String}
Live out: {r13: java.util.Collection, r1: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label1
Live in: {r13: java.util.Collection, r1: java.lang.String, $z2: boolean}
Live out: {r13: java.util.Collection, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r13: java.util.Collection, r1: java.lang.String}
Live out: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String}
Live out: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!!! WARNING !!!\n\tThe NameNode currently runs without persistent storage.\n\tAny changes to the file system meta-data may be lost.\n\tRecommended actions:\n\t\t- shutdown and restart NameNode with configured \"")
Live in: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r13: java.util.Collection, $r8: org.slf4j.Logger, r1: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {r13: java.util.Collection, $r8: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" in hdfs-site.xml;\n\t\t- use Backup Node as a persistent and up-to-date storage of the file system meta-data.")
Live in: {r13: java.util.Collection, $r8: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r13: java.util.Collection, $r8: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r13: java.util.Collection, $r8: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {r13: java.util.Collection, $r12: java.lang.String, $r8: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r12)
Live in: {r13: java.util.Collection, $r12: java.lang.String, $r8: org.slf4j.Logger}
Live out: {r13: java.util.Collection}
---------------------------------------
---------------------------------------
goto label3
Live in: {r13: java.util.Collection}
Live out: {r13: java.util.Collection}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r13.<java.util.Collection: boolean isEmpty()>()
Live in: {r13: java.util.Collection}
Live out: {r13: java.util.Collection, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r13: java.util.Collection, $z0: boolean}
Live out: {r13: java.util.Collection}
---------------------------------------
---------------------------------------
r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("file:///tmp/hadoop/dfs/name")
Live in: {}
Live out: {r13: java.util.Collection}
---------------------------------------
---------------------------------------
$r14 = staticinvoke <org.apache.hadoop.hdfs.server.common.Util: java.util.List stringCollectionAsURIs(java.util.Collection)>(r13)
Live in: {r13: java.util.Collection}
Live out: {$r14: java.util.List}
---------------------------------------
---------------------------------------
return $r14
Live in: {$r14: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
getNamespaceEditsDirs
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$r1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List getNamespaceEditsDirs(org.apache.hadoop.conf.Configuration,boolean)>(r0, 1)
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {$r1: java.util.List}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
getNamespaceEditsDirs
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean}
---------------------------------------
---------------------------------------
$r3 = new java.util.LinkedHashSet
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r3: java.util.LinkedHashSet}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r3: java.util.LinkedHashSet}
Live out: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r3: java.util.LinkedHashSet}
---------------------------------------
---------------------------------------
r1 = $r3
Live in: {r0: org.apache.hadoop.conf.Configuration, z0: boolean, $r3: java.util.LinkedHashSet}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label4
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, z0: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet}
---------------------------------------
---------------------------------------
r29 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.List getSharedEditsDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r29: java.util.List}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke r29.<java.util.List: int size()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r29: java.util.List}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r29: java.util.List, $i0: int}
---------------------------------------
---------------------------------------
if $i0 <= 1 goto label1
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r29: java.util.List, $i0: int}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r29: java.util.List}
---------------------------------------
---------------------------------------
$r28 = new java.io.IOException
Live in: {}
Live out: {$r28: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Multiple shared edits directories are not yet supported")
Live in: {$r28: java.io.IOException}
Live out: {$r28: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r28
Live in: {$r28: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
r30 = interfaceinvoke r29.<java.util.List: java.util.Iterator iterator()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r29: java.util.List}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
$z3 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label4
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $z3: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
$r19 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r19: java.lang.Object}
---------------------------------------
---------------------------------------
r2 = (java.net.URI) $r19
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r19: java.lang.Object}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, r2: java.net.URI}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r1.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r2)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, r2: java.net.URI}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, r2: java.net.URI, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label3
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, r2: java.net.URI, $z4: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, r2: java.net.URI}
---------------------------------------
---------------------------------------
$r21 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, r2: java.net.URI}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI}
---------------------------------------
---------------------------------------
$r20 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI, $r20: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Edits URI ")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI, $r20: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, r2: java.net.URI, $r22: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" listed multiple times in ")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r23: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.shared.edits.dir")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r24: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Ignoring duplicates.")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r25: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r21: org.slf4j.Logger, $r26: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r27: java.lang.String, $r21: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String)>($r27)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator, $r27: java.lang.String, $r21: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
$r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getStorageDirs(org.apache.hadoop.conf.Configuration,java.lang.String)>(r0, "dfs.namenode.edits.dir")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, $r4: java.util.Collection}
---------------------------------------
---------------------------------------
r31 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, $r4: java.util.Collection}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
---------------------------------------
---------------------------------------
$z5 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label7
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $z5: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
---------------------------------------
---------------------------------------
$r8 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r8: java.lang.Object}
---------------------------------------
---------------------------------------
r32 = (java.net.URI) $r8
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r8: java.lang.Object}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, r32: java.net.URI}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r1.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r32)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, r32: java.net.URI}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, r32: java.net.URI, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label6
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, r32: java.net.URI, $z2: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, r32: java.net.URI}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, r32: java.net.URI}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Edits URI ")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, r32: java.net.URI, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" listed multiple times in ")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.shared.edits.dir")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dfs.namenode.edits.dir")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Ignoring duplicates.")
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r10: org.slf4j.Logger, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r18: java.lang.String, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r18)
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator, $r18: java.lang.String, $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, r31: java.util.Iterator}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r1.<java.util.LinkedHashSet: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label8
Live in: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet, $z1: boolean}
Live out: {r0: org.apache.hadoop.conf.Configuration, r1: java.util.LinkedHashSet}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection getNamespaceDirs(org.apache.hadoop.conf.Configuration)>(r0)
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {$r6: java.util.Collection}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r6)
Live in: {$r6: java.util.Collection}
Live out: {$r7: java.util.ArrayList}
---------------------------------------
---------------------------------------
return $r7
Live in: {$r7: java.util.ArrayList}
Live out: {}
---------------------------------------
---------------------------------------
$r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(r1)
Live in: {r1: java.util.LinkedHashSet}
Live out: {$r5: java.util.ArrayList}
---------------------------------------
---------------------------------------
return $r5
Live in: {$r5: java.util.ArrayList}
Live out: {}
---------------------------------------
=======================================
=======================================
getSharedEditsDirs
---------------------------------------
r0 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {}
Live out: {r0: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
r1 = virtualinvoke r0.<org.apache.hadoop.conf.Configuration: java.util.Collection getTrimmedStringCollection(java.lang.String)>("dfs.namenode.shared.edits.dir")
Live in: {r0: org.apache.hadoop.conf.Configuration}
Live out: {r1: java.util.Collection}
---------------------------------------
---------------------------------------
$r2 = staticinvoke <org.apache.hadoop.hdfs.server.common.Util: java.util.List stringCollectionAsURIs(java.util.Collection)>(r1)
Live in: {r1: java.util.Collection}
Live out: {$r2: java.util.List}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
readLock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void readLock()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
readLockInterruptibly
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void readLockInterruptibly()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
readUnlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void readUnlock()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
readUnlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, $r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void readUnlock(java.lang.String)>(r1)
Live in: {r1: java.lang.String, $r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
writeLock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void writeLock()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
writeLockInterruptibly
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void writeLockInterruptibly()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
writeUnlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void writeUnlock()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
writeUnlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, $r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void writeUnlock(java.lang.String)>(r1)
Live in: {r1: java.lang.String, $r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
writeUnlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r1: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, z0: boolean, $r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: void writeUnlock(java.lang.String,boolean)>(r1, z0)
Live in: {r1: java.lang.String, z0: boolean, $r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
hasWriteLock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: boolean isWriteLockedByCurrentThread()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
hasReadLock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: int getReadHoldCount()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i0: int}
---------------------------------------
---------------------------------------
if $i0 > 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = 1
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {$z1: boolean}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
$z1 = 0
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
return $z1
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getReadHoldCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: int getReadHoldCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getWriteHoldCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: int getWriteHoldCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
cpLock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.ReentrantLock cpLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.concurrent.locks.ReentrantLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>()
Live in: {$r1: java.util.concurrent.locks.ReentrantLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
cpLockInterruptibly
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.ReentrantLock cpLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.concurrent.locks.ReentrantLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>()
Live in: {$r1: java.util.concurrent.locks.ReentrantLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
cpUnlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.ReentrantLock cpLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.concurrent.locks.ReentrantLock}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
Live in: {$r1: java.util.concurrent.locks.ReentrantLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getNamespaceInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo unprotectedGetNamespaceInfo()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getNamespaceInfo")
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo}
---------------------------------------
---------------------------------------
return r1
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo}
Live out: {}
---------------------------------------
---------------------------------------
$r3 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getNamespaceInfo")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
getCTime
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
if $r1 != null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = 0L
Live in: {}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
goto label2
Live in: {$l0: long}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.NNStorage: long getCTime()>()
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
unprotectedGetNamespaceInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = new org.apache.hadoop.hdfs.server.protocol.NamespaceInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.NNStorage: int getNamespaceID()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getClusterId()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getBlockPoolId()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.NNStorage: long getCTime()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getState()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, $l1: long, $r8: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
specialinvoke $r1.<org.apache.hadoop.hdfs.server.protocol.NamespaceInfo: void <init>(int,java.lang.String,java.lang.String,long,org.apache.hadoop.ha.HAServiceProtocol$HAServiceState)>($i0, $r4, $r5, $l1, $r8)
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo, $i0: int, $r4: java.lang.String, $r5: java.lang.String, $l1: long, $r8: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo}
Live out: {}
---------------------------------------
=======================================
=======================================
close
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean fsRunning> = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopCommonServices()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopActiveServices()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopStandbyServices()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r6 = newarray (java.io.Closeable)[1]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger, $r6: java.io.Closeable[]}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger, $r6: java.io.Closeable[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger, $r6: java.io.Closeable[], $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r6[0] = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger, $r6: java.io.Closeable[], $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger, $r6: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r8, $r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.slf4j.Logger, $r6: java.io.Closeable[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r11: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = newarray (java.io.Closeable)[1]
Live in: {$r11: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r11: org.slf4j.Logger, $r9: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {$r11: org.slf4j.Logger, $r9: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r11: org.slf4j.Logger, $r9: java.io.Closeable[], $r10: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r9[0] = $r10
Live in: {$r11: org.slf4j.Logger, $r9: java.io.Closeable[], $r10: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r11: org.slf4j.Logger, $r9: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r11, $r9)
Live in: {$r11: org.slf4j.Logger, $r9: java.io.Closeable[]}
Live out: {}
---------------------------------------
---------------------------------------
goto label06
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r40 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r40: java.io.IOException}
---------------------------------------
---------------------------------------
r1 = $r40
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r40: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r43 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r41 = newarray (java.io.Closeable)[1]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger, $r41: java.io.Closeable[]}
---------------------------------------
---------------------------------------
$r42 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger, $r41: java.io.Closeable[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger, $r41: java.io.Closeable[], $r42: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r41[0] = $r42
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger, $r41: java.io.Closeable[], $r42: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger, $r41: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r43, $r41)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: org.slf4j.Logger, $r41: java.io.Closeable[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r46 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r46: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r44 = newarray (java.io.Closeable)[1]
Live in: {$r46: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r46: org.slf4j.Logger, $r44: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r45 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {$r46: org.slf4j.Logger, $r44: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r46: org.slf4j.Logger, $r44: java.io.Closeable[], $r45: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r44[0] = $r45
Live in: {$r46: org.slf4j.Logger, $r44: java.io.Closeable[], $r45: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r46: org.slf4j.Logger, $r44: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r46, $r44)
Live in: {$r46: org.slf4j.Logger, $r44: java.io.Closeable[]}
Live out: {}
---------------------------------------
---------------------------------------
goto label06
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r26 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r29 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r27 = newarray (java.io.Closeable)[1]
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger, $r27: java.io.Closeable[]}
---------------------------------------
---------------------------------------
$r28 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger, $r27: java.io.Closeable[]}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger, $r27: java.io.Closeable[], $r28: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r27[0] = $r28
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger, $r27: java.io.Closeable[], $r28: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger, $r27: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r29, $r27)
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: org.slf4j.Logger, $r27: java.io.Closeable[]}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r32 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r30 = newarray (java.io.Closeable)[1]
Live in: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, $r30: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r31 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, $r30: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, $r30: java.io.Closeable[], $r31: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r30[0] = $r31
Live in: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, $r30: java.io.Closeable[], $r31: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, $r30: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r32, $r30)
Live in: {r2: java.lang.Throwable, $r32: org.slf4j.Logger, $r30: java.io.Closeable[]}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
goto label15
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r33 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r33
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopActiveServices()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopStandbyServices()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r36 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r34 = newarray (java.io.Closeable)[1]
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger, $r34: java.io.Closeable[]}
---------------------------------------
---------------------------------------
$r35 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger, $r34: java.io.Closeable[]}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger, $r34: java.io.Closeable[], $r35: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r34[0] = $r35
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger, $r34: java.io.Closeable[], $r35: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger, $r34: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r36, $r34)
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: org.slf4j.Logger, $r34: java.io.Closeable[]}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r39 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r37 = newarray (java.io.Closeable)[1]
Live in: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, $r37: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r38 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, $r37: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, $r37: java.io.Closeable[], $r38: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r37[0] = $r38
Live in: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, $r37: java.io.Closeable[], $r38: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, $r37: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r39, $r37)
Live in: {r3: java.lang.Throwable, $r39: org.slf4j.Logger, $r37: java.io.Closeable[]}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
goto label14
Live in: {r3: java.lang.Throwable}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable, $r12: java.io.IOException}
---------------------------------------
---------------------------------------
r4 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable, $r12: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r15 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r13 = newarray (java.io.Closeable)[1]
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger, $r13: java.io.Closeable[]}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger, $r13: java.io.Closeable[]}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger, $r13: java.io.Closeable[], $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r13[0] = $r14
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger, $r13: java.io.Closeable[], $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger, $r13: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r15, $r13)
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.slf4j.Logger, $r13: java.io.Closeable[]}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = newarray (java.io.Closeable)[1]
Live in: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, $r16: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, $r16: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, $r16: java.io.Closeable[], $r17: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r16[0] = $r17
Live in: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, $r16: java.io.Closeable[], $r17: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, $r16: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r18, $r16)
Live in: {r3: java.lang.Throwable, $r18: org.slf4j.Logger, $r16: java.io.Closeable[]}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
goto label14
Live in: {r3: java.lang.Throwable}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r19 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r22 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r20 = newarray (java.io.Closeable)[1]
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger, $r20: java.io.Closeable[]}
---------------------------------------
---------------------------------------
$r21 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger, $r20: java.io.Closeable[]}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger, $r20: java.io.Closeable[], $r21: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r20[0] = $r21
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger, $r20: java.io.Closeable[], $r21: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger, $r20: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r22, $r20)
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.slf4j.Logger, $r20: java.io.Closeable[]}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r25 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r23 = newarray (java.io.Closeable)[1]
Live in: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, $r23: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r24 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, $r23: java.io.Closeable[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, $r23: java.io.Closeable[], $r24: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r23[0] = $r24
Live in: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, $r23: java.io.Closeable[], $r24: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, $r23: java.io.Closeable[]}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>($r25, $r23)
Live in: {r5: java.lang.Throwable, $r25: org.slf4j.Logger, $r23: java.io.Closeable[]}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
isRunning
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean fsRunning>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
isInStandbyState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r3 = interfaceinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
if $r3 != null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.ha.HAServiceProtocol$HAServiceState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState STANDBY>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r4: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r6 = interfaceinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r4: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r6: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState()>()
Live in: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r6: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r7: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
if $r5 != $r7 goto label3
Live in: {$r5: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r7: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = 1
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
goto label4
Live in: {$z1: boolean}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
$z1 = 0
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
return $z1
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.DatanodeID
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long}
---------------------------------------
---------------------------------------
l1 := @parameter2: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations getBlocksWithLocations(org.apache.hadoop.hdfs.protocol.DatanodeID,long,long)>(r1, l0, l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, l0: long, l1: long, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r2: org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getBlocks")
Live in: {r2: org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations}
---------------------------------------
---------------------------------------
return r2
Live in: {r2: org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations}
Live out: {}
---------------------------------------
---------------------------------------
$r7 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getBlocks")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
metaSave
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "metaSave"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = new java.io.File
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.io.File, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("hadoop.log.dir")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.io.File, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.io.File, $r9: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r9, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.io.File, $r9: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.io.File}
---------------------------------------
---------------------------------------
r3 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.io.File}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: java.io.File}
---------------------------------------
---------------------------------------
$r10 = new java.io.PrintWriter
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: java.io.File}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, r3: java.io.File}
---------------------------------------
---------------------------------------
$r11 = new java.io.BufferedWriter
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, r3: java.io.File}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, r3: java.io.File}
---------------------------------------
---------------------------------------
$r12 = new java.io.OutputStreamWriter
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, r3: java.io.File}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, r3: java.io.File}
---------------------------------------
---------------------------------------
$r13 = new java.io.FileOutputStream
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, r3: java.io.File}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, $r13: java.io.FileOutputStream, r3: java.io.File}
---------------------------------------
---------------------------------------
specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, $r13: java.io.FileOutputStream, r3: java.io.File}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, $r13: java.io.FileOutputStream}
---------------------------------------
---------------------------------------
$r14 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, $r13: java.io.FileOutputStream}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, $r13: java.io.FileOutputStream, $r14: java.nio.charset.Charset}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r13, $r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter, $r13: java.io.FileOutputStream, $r14: java.nio.charset.Charset}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter, $r12: java.io.OutputStreamWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.io.PrintWriter: void <init>(java.io.Writer)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter, $r11: java.io.BufferedWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter}
---------------------------------------
---------------------------------------
r4 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r10: java.io.PrintWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: java.io.PrintWriter}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void metaSave(java.io.PrintWriter)>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: java.io.PrintWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: java.io.PrintWriter}
---------------------------------------
---------------------------------------
virtualinvoke r4.<java.io.PrintWriter: void flush()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: java.io.PrintWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: java.io.PrintWriter}
---------------------------------------
---------------------------------------
virtualinvoke r4.<java.io.PrintWriter: void close()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: java.io.PrintWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r2)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r15: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r2)
Live in: {r5: java.lang.Throwable, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r2, null)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
metaSave
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.io.PrintWriter
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = new java.lang.AssertionError
Live in: {}
Live out: {$r12: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.AssertionError: void <init>()>()
Live in: {$r12: java.lang.AssertionError}
Live out: {$r12: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r12
Live in: {$r12: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
l0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: long totalInodes()>()
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBlocksTotal()>()
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long}
---------------------------------------
---------------------------------------
$r3 = new java.lang.StringBuilder
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r3: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r3: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files and directories, ")
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r4: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r5: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocks = ")
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, $r6: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.StringBuilder, l0: long, l1: long}
---------------------------------------
---------------------------------------
$l2 = l0 + l1
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.StringBuilder, l0: long, l1: long}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $r7: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total filesystem objects")
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.StringBuilder}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10)
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.String}
Live out: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.PrintWriter, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void metaSave(java.io.PrintWriter)>(r1)
Live in: {r1: java.io.PrintWriter, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
listOpenFiles
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.util.EnumSet
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
r3 = "listOpenFiles"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType: org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType ALL_OPEN_FILES>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r8: org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r1.<java.util.EnumSet: boolean contains(java.lang.Object)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r8: org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
r18 = virtualinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries getUnderConstructionFiles(long,java.lang.String)>(l0, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType: org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType BLOCKING_DECOMMISSION>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r9: org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r1.<java.util.EnumSet: boolean contains(java.lang.Object)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $r9: org.apache.hadoop.hdfs.protocol.OpenFilesIterator$OpenFilesType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
r18 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries getFilesBlockingDecom(long,java.lang.String)>(l0, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
$r10 = new java.lang.IllegalArgumentException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r11 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown OpenFileType: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, r1: java.util.EnumSet, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, $r14: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException, $r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException}
---------------------------------------
---------------------------------------
throw $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.IllegalArgumentException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listOpenFiles")
Live in: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label8
Live in: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "listOpenFiles", null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listOpenFiles")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "listOpenFiles", null)
Live in: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return r18
Live in: {r18: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
=======================================
=======================================
getFilesBlockingDecom
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$z7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z7: boolean}
---------------------------------------
---------------------------------------
if $z7 != 0 goto label1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z7: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$r30 = new java.lang.AssertionError
Live in: {}
Live out: {$r30: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r30.<java.lang.AssertionError: void <init>()>()
Live in: {$r30: java.lang.AssertionError}
Live out: {$r30: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r30
Live in: {$r30: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = new org.apache.hadoop.hdfs.util.LightWeightHashSet
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.util.LightWeightHashSet}
---------------------------------------
---------------------------------------
specialinvoke $r10.<org.apache.hadoop.hdfs.util.LightWeightHashSet: void <init>()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.util.LightWeightHashSet}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.util.LightWeightHashSet}
---------------------------------------
---------------------------------------
r3 = $r10
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.util.LightWeightHashSet}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.Set getDatanodes()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, $r13: java.util.Set}
---------------------------------------
---------------------------------------
r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, $r13: java.util.Set}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$z8 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $z8: boolean}
---------------------------------------
---------------------------------------
if $z8 == 0 goto label9
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $z8: boolean}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $r15: java.lang.Object}
---------------------------------------
---------------------------------------
r5 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r15
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $r15: java.lang.Object}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, r5: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, r5: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $r16: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: org.apache.hadoop.hdfs.util.LightWeightHashSet getOpenFiles()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $r16: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $r17: org.apache.hadoop.hdfs.util.LightWeightHashSet}
---------------------------------------
---------------------------------------
r6 = virtualinvoke $r17.<org.apache.hadoop.hdfs.util.LightWeightHashSet: java.util.Iterator iterator()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator, $r17: org.apache.hadoop.hdfs.util.LightWeightHashSet}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $z9: boolean}
---------------------------------------
---------------------------------------
if $z9 == 0 goto label8
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $z9: boolean}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r18: java.lang.Object}
---------------------------------------
---------------------------------------
$r19 = (java.lang.Long) $r18
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r18: java.lang.Object}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r19: java.lang.Long}
---------------------------------------
---------------------------------------
l1 = virtualinvoke $r19.<java.lang.Long: long longValue()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r19: java.lang.Long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, l1: long}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory getFSDirectory()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, l1: long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, l1: long, $r20: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r7 = virtualinvoke $r20.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INode getInode(long)>(l1)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, l1: long, $r20: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
if r7 == null goto label3
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$b2 = l1 cmp l0
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, r4: java.util.Iterator, $b2: byte}
---------------------------------------
---------------------------------------
if $b2 <= 0 goto label3
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, r4: java.util.Iterator, $b2: byte}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long}
---------------------------------------
---------------------------------------
$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, $r21: java.lang.Long}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r3.<org.apache.hadoop.hdfs.util.LightWeightHashSet: boolean contains(java.lang.Object)>($r21)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, $r21: java.lang.Long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label4
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, $z1: boolean}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$z2 = r7 instanceof org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, $z2: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z2)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long, $z2: boolean}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long}
---------------------------------------
---------------------------------------
$r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, l1: long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, $r22: java.lang.Long}
---------------------------------------
---------------------------------------
virtualinvoke r3.<org.apache.hadoop.hdfs.util.LightWeightHashSet: boolean add(java.lang.Object)>($r22)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode, $r22: java.lang.Long}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r7.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeFile asFile()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r7: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r9 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: java.lang.String}
---------------------------------------
---------------------------------------
$z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: java.lang.String}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: java.lang.String, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label5
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: java.lang.String, $z4: boolean}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: java.lang.String}
---------------------------------------
---------------------------------------
$z6 = virtualinvoke r9.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: java.lang.String}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 == 0 goto label6
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z6: boolean}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r23 = new org.apache.hadoop.hdfs.protocol.OpenFileEntry
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.namenode.INodeFile: long getId()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r25: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientName()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r25: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, $r26: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, $r26: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, $r26: java.lang.String, $r27: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientMachine()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, $r26: java.lang.String, $r27: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, $r26: java.lang.String, $r28: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r23.<org.apache.hadoop.hdfs.protocol.OpenFileEntry: void <init>(long,java.lang.String,java.lang.String,java.lang.String)>($l3, $r24, $r26, $r28)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry, $l3: long, $r24: java.lang.String, $r26: java.lang.String, $r28: java.lang.String}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry}
---------------------------------------
---------------------------------------
interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r23)
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $r23: org.apache.hadoop.hdfs.protocol.OpenFileEntry}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$i4 = virtualinvoke r3.<org.apache.hadoop.hdfs.util.LightWeightHashSet: int size()>()
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $i4: int}
---------------------------------------
---------------------------------------
$i5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int maxListOpenFilesResponses>
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $i4: int}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $i4: int, $i5: int}
---------------------------------------
---------------------------------------
if $i4 < $i5 goto label7
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator, $i4: int, $i5: int}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$r29 = new org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries
Live in: {r2: java.util.ArrayList}
Live out: {$r29: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r29.<org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries: void <init>(java.util.List,boolean)>(r2, 1)
Live in: {$r29: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r2: java.util.ArrayList}
Live out: {$r29: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return $r29
Live in: {$r29: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r6: java.util.Iterator, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label2
Live in: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator}
Live out: {r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.util.LightWeightHashSet, r1: java.lang.String, l0: long, r4: java.util.Iterator}
---------------------------------------
---------------------------------------
$r14 = new org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries
Live in: {r2: java.util.ArrayList}
Live out: {$r14: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r14.<org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries: void <init>(java.util.List,boolean)>(r2, 0)
Live in: {$r14: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r2: java.util.ArrayList}
Live out: {$r14: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return $r14
Live in: {$r14: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
=======================================
=======================================
metaSaveAsString
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = new java.io.StringWriter
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.io.StringWriter}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.io.StringWriter: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.io.StringWriter}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.io.StringWriter}
---------------------------------------
---------------------------------------
r1 = $r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.io.StringWriter}
Live out: {r1: java.io.StringWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.io.PrintWriter
Live in: {r1: java.io.StringWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.StringWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.io.PrintWriter}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1)
Live in: {r1: java.io.StringWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.io.PrintWriter}
Live out: {r1: java.io.StringWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.io.PrintWriter}
---------------------------------------
---------------------------------------
r2 = $r4
Live in: {r1: java.io.StringWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.io.PrintWriter}
Live out: {r1: java.io.StringWriter, r2: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void metaSave(java.io.PrintWriter)>(r2)
Live in: {r1: java.io.StringWriter, r2: java.io.PrintWriter, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.StringWriter, r2: java.io.PrintWriter}
---------------------------------------
---------------------------------------
virtualinvoke r2.<java.io.PrintWriter: void flush()>()
Live in: {r1: java.io.StringWriter, r2: java.io.PrintWriter}
Live out: {r1: java.io.StringWriter}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>()
Live in: {r1: java.io.StringWriter}
Live out: {$r5: java.lang.String}
---------------------------------------
---------------------------------------
return $r5
Live in: {$r5: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getServerDefaults
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.fs.FsServerDefaults serverDefaults>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.fs.FsServerDefaults}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.fs.FsServerDefaults}
Live out: {}
---------------------------------------
=======================================
=======================================
setPermission
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.fs.permission.FsPermission
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission}
---------------------------------------
---------------------------------------
r3 = "setPermission"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set permission for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.FsPermission, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.FsPermission}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.fs.FileStatus setPermission(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>($r14, r5, r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.FsPermission}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setPermission")
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r6 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setPermission", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
Live out: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setPermission")
Live in: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r7: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "setPermission", r1, null, r4)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setOwner
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 = "setOwner"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set owner for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r14: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r5 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.fs.FileStatus setOwner(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,java.lang.String)>($r15, r6, r1, r2, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setOwner")
Live in: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r7 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setOwner", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.Throwable}
---------------------------------------
---------------------------------------
r8 = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.Throwable}
Live out: {r8: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setOwner")
Live in: {r8: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r8
Live in: {r8: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "setOwner", r1, null, r5)
Live in: {r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockLocations
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
l0 := @parameter2: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String}
---------------------------------------
---------------------------------------
l1 := @parameter3: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String, l1: long}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String, l1: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String, l1: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String, l1: long}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, l0: long, r1: java.lang.String, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, l0: long, l1: long}
---------------------------------------
---------------------------------------
r41 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult getBlockLocations(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,long,long,boolean)>($r9, r3, r2, l0, l1, 1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
$r17 = r41.<org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult: org.apache.hadoop.hdfs.protocol.LocatedBlocks blocks>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r17: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: java.util.List getLocatedBlocks()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r17: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r18: java.util.List}
---------------------------------------
---------------------------------------
r42 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r18: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$z5 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z5: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r19 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r19: java.lang.Object}
---------------------------------------
---------------------------------------
r43 = (org.apache.hadoop.hdfs.protocol.LocatedBlock) $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r19: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r43: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r43.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] getLocations()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r43: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r43: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r20: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
if $r20 == null goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r43: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r20: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r43: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke r43.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] getLocations()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r43: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r31: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
$i6 = lengthof $r31
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r31: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $i6: int}
---------------------------------------
---------------------------------------
if $i6 != 0 goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r21 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r21: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zero blocklocations for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r21: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r22: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r23: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r24: java.lang.String}
---------------------------------------
---------------------------------------
r4 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.SafeModeException newSafemodeException(java.lang.String)>($r24)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 == 0 goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $z6: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r25 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r25: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
if $r25 == null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r25: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r26 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r26: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r27 = interfaceinvoke $r26.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r26: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r27: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r27: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r28: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
$r29 = <org.apache.hadoop.ha.HAServiceProtocol$HAServiceState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState ACTIVE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r28: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r28: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r29: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
if $r28 != $r29 goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String, $r28: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r29: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r30 = new org.apache.hadoop.ipc.RetriableException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: org.apache.hadoop.ipc.RetriableException, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
---------------------------------------
---------------------------------------
specialinvoke $r30.<org.apache.hadoop.ipc.RetriableException: void <init>(java.lang.Exception)>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: org.apache.hadoop.ipc.RetriableException, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: org.apache.hadoop.ipc.RetriableException, r2: java.lang.String}
---------------------------------------
---------------------------------------
throw $r30
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: org.apache.hadoop.ipc.RetriableException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.SafeModeException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r42: java.util.Iterator, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("open")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r33 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r33: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r44 = $r33
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r33: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r44: org.apache.hadoop.security.AccessControlException, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "open", r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r44: org.apache.hadoop.security.AccessControlException, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r44: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r44
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r44: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r32 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.lang.Throwable}
---------------------------------------
---------------------------------------
r45 = $r32
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.lang.Throwable}
Live out: {r45: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("open")
Live in: {r45: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r45: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r45
Live in: {r45: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "open", r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r41.<org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult: boolean updateAccessTime()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $z4: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
r46 = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
l7 = staticinvoke <org.apache.hadoop.util.Time: long now()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r47 = virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePath(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp)>(r3, r2, $r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, l7: long}
---------------------------------------
---------------------------------------
r46 = virtualinvoke r47.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, l7: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r47.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r5: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
if r5 == null goto label12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r5: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r5: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.namenode.INode: long getAccessTime()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r5: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l2: long}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l2: long, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: long getAccessTimePrecision()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l2: long, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l2: long, $l3: long}
---------------------------------------
---------------------------------------
$l4 = $l2 + $l3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l2: long, $l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l4: long}
---------------------------------------
---------------------------------------
$b5 = l7 cmp $l4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $l4: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $b5: byte}
---------------------------------------
---------------------------------------
if $b5 <= 0 goto label12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $b5: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$z7 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
---------------------------------------
---------------------------------------
goto label13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
---------------------------------------
---------------------------------------
$z7 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
---------------------------------------
---------------------------------------
z0 = $z7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, z0: boolean}
---------------------------------------
---------------------------------------
$z8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, z0: boolean, $z8: boolean}
---------------------------------------
---------------------------------------
if $z8 != 0 goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, z0: boolean, $z8: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
z1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: boolean setTimes(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,long,long,boolean)>($r14, r47, -1L, l7, 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r47: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, z1: boolean}
---------------------------------------
---------------------------------------
if z1 == 0 goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logTimes(java.lang.String,long,long)>(r46, -1L, l7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, l7: long, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("open")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
goto label19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
$r35 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, $r35: java.lang.Throwable}
---------------------------------------
---------------------------------------
r48 = $r35
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, $r35: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r48: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r37 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, r46: java.lang.String, r48: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String}
---------------------------------------
---------------------------------------
$r36 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String, $r36: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String, $r36: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String, $r36: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to update the access time of ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String, $r36: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, r46: java.lang.String, $r38: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, $r39: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r37: org.slf4j.Logger, r48: java.lang.Throwable, $r39: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r40: java.lang.String, r48: java.lang.Throwable, $r37: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r40, r48)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult, $r40: java.lang.String, r48: java.lang.Throwable, $r37: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("open")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
goto label19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
---------------------------------------
---------------------------------------
$r34 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r34: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r34
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r34: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("open")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
r49 = r41.<org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult: org.apache.hadoop.hdfs.protocol.LocatedBlocks blocks>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r41: org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp$GetBlockLocationsResult}
Live out: {r49: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void sortLocatedBlocks(java.lang.String,org.apache.hadoop.hdfs.protocol.LocatedBlocks)>(r1, r49)
Live in: {r49: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r49: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
---------------------------------------
---------------------------------------
return r49
Live in: {r49: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
Live out: {}
---------------------------------------
=======================================
=======================================
sortLocatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.protocol.LocatedBlocks
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
---------------------------------------
---------------------------------------
if r2 == null goto label3
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: java.util.List getLocatedBlocks()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List}
---------------------------------------
---------------------------------------
if r3 == null goto label1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke r3.<java.util.List: int size()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List, $i0: int}
---------------------------------------
---------------------------------------
if $i0 != 0 goto label2
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List, $i0: int}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List, $r7: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void sortLocatedBlocks(java.lang.String,java.util.List)>(r1, r3)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks, r3: java.util.List, $r7: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: org.apache.hadoop.hdfs.protocol.LocatedBlock getLastLocatedBlock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.LocatedBlocks}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
if r4 == null goto label3
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
$r8 = newarray (org.apache.hadoop.hdfs.protocol.LocatedBlock)[1]
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r4: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
$r8[0] = r4
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r4: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r8)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r1: java.lang.String, r5: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, r5: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r5: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.lang.String, r5: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r5: java.util.ArrayList, $r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void sortLocatedBlocks(java.lang.String,java.util.List)>(r1, r5)
Live in: {r1: java.lang.String, r5: java.util.ArrayList, $r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
concat
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot concat ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
r19 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirConcatOp: org.apache.hadoop.fs.FileStatus concat(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String[],boolean)>($r12, r3, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("concat")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
---------------------------------------
---------------------------------------
if 1 == 0 goto label7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[], $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[], $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
---------------------------------------
---------------------------------------
goto label7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String[], r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r2: java.lang.String[]}
---------------------------------------
---------------------------------------
$r18 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r2: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, $r18: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "concat", $r18, r1, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, $r18: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("concat")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if 0 == 0 goto label6
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r5: java.lang.Throwable, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r2: java.lang.String[]}
Live out: {$r13: java.lang.String, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "concat", $r13, r1, r19)
Live in: {$r13: java.lang.String, r1: java.lang.String, r19: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setTimes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
l1 := @parameter2: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long}
---------------------------------------
---------------------------------------
r2 = "setTimes"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set times ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r12: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, $r12: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.fs.FileStatus setTimes(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,long,long)>($r13, r4, r1, l0, l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setTimes")
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setTimes", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setTimes")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "setTimes", r1, null, r3)
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
truncate
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter3: java.lang.String
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
l1 := @parameter4: long
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r4 = "truncate"
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature TRUNCATE>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void requireEffectiveLayoutVersionForFeature(org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature)>($r8)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $r9: org.slf4j.Logger}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $r10: java.lang.Long, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("DIR* NameSystem.truncate: src={} newLength={}", r1, $r10)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $r10: java.lang.Long, $r9: org.slf4j.Logger}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$b2 = l0 cmp 0L
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $b2: byte}
---------------------------------------
---------------------------------------
if $b2 >= 0 goto label02
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String, $b2: byte}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r21 = new org.apache.hadoop.HadoopIllegalArgumentException
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
$r22 = new java.lang.StringBuilder
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, $r22: java.lang.StringBuilder}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot truncate to a negative file size: ")
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, $r22: java.lang.StringBuilder}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, $r23: java.lang.StringBuilder}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r24: java.lang.StringBuilder}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r25: java.lang.StringBuilder}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r26: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r21.<org.apache.hadoop.HadoopIllegalArgumentException: void <init>(java.lang.String)>($r26)
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r26: java.lang.String}
Live out: {$r21: org.apache.hadoop.HadoopIllegalArgumentException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
throw $r21
Live in: {$r21: org.apache.hadoop.HadoopIllegalArgumentException}
Live out: {}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, r2: java.lang.String, r3: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, r2: java.lang.String, r3: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r29 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l1: long, l0: long, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long}
---------------------------------------
---------------------------------------
$r12 = new org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, $r12: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
specialinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, $r12: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, $r12: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
r6 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, $r12: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r13 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r14 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot truncate for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r17)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r5 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult truncate(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,long,java.lang.String,java.lang.String,long,org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r0, r1, l0, r2, r3, l1, r6, r29)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, l0: long, r2: java.lang.String, r3: java.lang.String, l1: long, r29: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("truncate")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
$r27 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r27: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r27
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r27: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("truncate")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: java.util.List getToDeleteList()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r19: java.util.List}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke $r19.<java.util.List: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r19: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void removeBlocks(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)>(r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void clear()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, r6: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult: org.apache.hadoop.fs.FileStatus getFileStatus()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, $r20: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "truncate", r1, null, $r20)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult, $r20: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult}
---------------------------------------
---------------------------------------
goto label11
Live in: {r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult}
Live out: {r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult}
---------------------------------------
---------------------------------------
$r28 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r28: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r30 = $r28
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r28: org.apache.hadoop.security.AccessControlException}
Live out: {r30: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "truncate", r1)
Live in: {r30: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r30: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r30
Live in: {r30: org.apache.hadoop.security.AccessControlException}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult: boolean getResult()>()
Live in: {r5: org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp$TruncateResult}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
return $z1
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
createSymlink
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.fs.permission.PermissionStatus
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
z0 := @parameter3: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
---------------------------------------
---------------------------------------
z1 := @parameter4: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$z2 = staticinvoke <org.apache.hadoop.fs.FileSystem: boolean areSymlinksEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r13 = new java.lang.UnsupportedOperationException
Live in: {}
Live out: {$r13: java.lang.UnsupportedOperationException}
---------------------------------------
---------------------------------------
specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Symlinks not supported")
Live in: {$r13: java.lang.UnsupportedOperationException}
Live out: {$r13: java.lang.UnsupportedOperationException}
---------------------------------------
---------------------------------------
throw $r13
Live in: {$r13: java.lang.UnsupportedOperationException}
Live out: {}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create symlink ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSymlinkOp: org.apache.hadoop.fs.FileStatus createSymlinkInt(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,boolean,boolean)>(r0, r1, r2, r3, z0, z1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r16: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("createSymlink")
Live in: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label7
Live in: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "createSymlink", r2, r1, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("createSymlink")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "createSymlink", r2, r1, r16)
Live in: {r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setReplication
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
s0 := @parameter1: short
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
---------------------------------------
---------------------------------------
r2 = "setReplication"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set replication for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, s0: short, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, s0: short}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, s0: short}
---------------------------------------
---------------------------------------
z1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: boolean setReplication(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.blockmanagement.BlockManager,java.lang.String,short)>($r13, r3, $r12, r1, s0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setReplication")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setReplication", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setReplication")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
if z1 == 0 goto label7
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "setReplication", r1)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
return z1
Live in: {z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
setStoragePolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 = "setStoragePolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set storage policy for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.fs.FileStatus setStoragePolicy(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.blockmanagement.BlockManager,java.lang.String,java.lang.String)>($r15, r5, $r14, r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setStoragePolicy")
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r6 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setStoragePolicy", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.Throwable}
Live out: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setStoragePolicy")
Live in: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r7: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "setStoragePolicy", r1, null, r4)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
unsetStoragePolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "unsetStoragePolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot unset storage policy for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.fs.FileStatus unsetStoragePolicy(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.blockmanagement.BlockManager,java.lang.String)>($r14, r4, $r13, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("unsetStoragePolicy")
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "unsetStoragePolicy", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("unsetStoragePolicy")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "unsetStoragePolicy", r1, null, r3)
Live in: {r1: java.lang.String, r3: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getStoragePolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy getStoragePolicy(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.blockmanagement.BlockManager,java.lang.String)>($r8, r2, $r7, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r1: java.lang.String}
Live out: {r3: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getStoragePolicy")
Live in: {r3: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy}
Live out: {}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getStoragePolicy")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
getStoragePolicies
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy[] getStoragePolicies(org.apache.hadoop.hdfs.server.blockmanagement.BlockManager)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getStoragePolicies")
Live in: {r1: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy[]}
---------------------------------------
---------------------------------------
return r1
Live in: {r1: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy[]}
Live out: {}
---------------------------------------
---------------------------------------
$r6 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getStoragePolicies")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
getPreferredBlockSize
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
l0 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: long getPreferredBlockSize(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r6, r2, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getPreferredBlockSize")
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long}
---------------------------------------
---------------------------------------
return l0
Live in: {l0: long}
Live out: {}
---------------------------------------
---------------------------------------
$r7 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getPreferredBlockSize")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
chooseProtocolVersion
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.EncryptionZone
Live in: {}
Live out: {r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.crypto.CryptoProtocolVersion[]
Live in: {r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
Live out: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1)
Live in: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
Live out: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2)
Live in: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
Live out: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.EncryptionZone: org.apache.hadoop.crypto.CryptoProtocolVersion getVersion()>()
Live in: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], r1: org.apache.hadoop.hdfs.protocol.EncryptionZone}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
r4 = r2
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
i0 = lengthof r4
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
i2 = 0
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int}
---------------------------------------
---------------------------------------
if i2 >= i0 goto label4
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int}
Live out: {i2: int, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
r5 = r4[i2]
Live in: {i2: int, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
---------------------------------------
---------------------------------------
$r18 = <org.apache.hadoop.crypto.CryptoProtocolVersion: org.apache.hadoop.crypto.CryptoProtocolVersion UNKNOWN>
Live in: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
Live out: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r18: org.apache.hadoop.crypto.CryptoProtocolVersion}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r5.<org.apache.hadoop.crypto.CryptoProtocolVersion: boolean equals(java.lang.Object)>($r18)
Live in: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r18: org.apache.hadoop.crypto.CryptoProtocolVersion}
Live out: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $z0: boolean}
Live out: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
---------------------------------------
---------------------------------------
$r19 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $r19: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $r19: org.slf4j.Logger}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label3
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $z2: boolean}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
---------------------------------------
---------------------------------------
$r21 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
---------------------------------------
---------------------------------------
$r20 = new java.lang.StringBuilder
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $r20: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unknown CryptoProtocolVersion provided by client: ")
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, r5: org.apache.hadoop.crypto.CryptoProtocolVersion, $r20: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, $r22: java.lang.StringBuilder, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke r5.<org.apache.hadoop.crypto.CryptoProtocolVersion: int getUnknownValue()>()
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, $r22: java.lang.StringBuilder, r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, $i1: int, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, $i1: int, $r22: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r21: org.slf4j.Logger, $r23: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r24: java.lang.String, $r21: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String)>($r24)
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $r24: java.lang.String, $r21: org.slf4j.Logger}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
---------------------------------------
---------------------------------------
goto label3
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r5.<org.apache.hadoop.crypto.CryptoProtocolVersion: boolean equals(java.lang.Object)>(r3)
Live in: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
Live out: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label3
Live in: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, $z1: boolean}
Live out: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion, r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
---------------------------------------
---------------------------------------
return r5
Live in: {r5: org.apache.hadoop.crypto.CryptoProtocolVersion}
Live out: {}
---------------------------------------
---------------------------------------
i2 = i2 + 1
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int}
---------------------------------------
---------------------------------------
goto label1
Live in: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int}
Live out: {r3: org.apache.hadoop.crypto.CryptoProtocolVersion, r4: org.apache.hadoop.crypto.CryptoProtocolVersion[], i2: int, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], i0: int}
---------------------------------------
---------------------------------------
$r8 = new org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException
Live in: {r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], $r9: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No crypto protocol versions provided by the client are supported. Client provided: ")
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[], $r9: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r10: java.lang.StringBuilder, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
$r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2)
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r10: java.lang.StringBuilder, r2: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r11: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r11: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NameNode supports: ")
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r12: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = staticinvoke <org.apache.hadoop.crypto.CryptoProtocolVersion: org.apache.hadoop.crypto.CryptoProtocolVersion[] values()>()
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r13: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r13: java.lang.StringBuilder, $r14: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r14)
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r13: java.lang.StringBuilder, $r14: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r15: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r15: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r16: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r17: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r8.<org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException: void <init>(java.lang.String)>($r17)
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException, $r17: java.lang.String}
Live out: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException}
---------------------------------------
---------------------------------------
throw $r8
Live in: {$r8: org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException}
Live out: {}
---------------------------------------
=======================================
=======================================
startFile
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.fs.permission.PermissionStatus
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter3: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String}
---------------------------------------
---------------------------------------
r5 := @parameter4: java.util.EnumSet
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet}
---------------------------------------
---------------------------------------
z0 := @parameter5: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
s0 := @parameter6: short
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
---------------------------------------
---------------------------------------
l1 := @parameter7: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long}
---------------------------------------
---------------------------------------
r6 := @parameter8: org.apache.hadoop.crypto.CryptoProtocolVersion[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
r7 := @parameter9: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r7: java.lang.String}
---------------------------------------
---------------------------------------
z1 := @parameter10: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r7: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r7: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
r8 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.HdfsFileStatus startFileInt(java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,java.lang.String,java.lang.String,java.util.EnumSet,boolean,short,long,org.apache.hadoop.crypto.CryptoProtocolVersion[],java.lang.String,boolean)>(r1, r2, r3, r4, r5, z0, s0, l1, r6, r7, z1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r7: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r8: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
goto label4
Live in: {r8: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r9 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
Live out: {r9: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "create", r1)
Live in: {r9: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r9: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r9
Live in: {r9: org.apache.hadoop.security.AccessControlException}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.protocol.HdfsFileStatus)>(1, "create", r1, r8)
Live in: {r8: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
return r8
Live in: {r8: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {}
---------------------------------------
=======================================
=======================================
startFileInt
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.fs.permission.PermissionStatus
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter3: java.lang.String
Live in: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String}
---------------------------------------
---------------------------------------
r5 := @parameter4: java.util.EnumSet
Live in: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r5: java.util.EnumSet, r4: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter5: boolean
Live in: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r5: java.util.EnumSet, r4: java.lang.String}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r5: java.util.EnumSet, z0: boolean, r4: java.lang.String}
---------------------------------------
---------------------------------------
s0 := @parameter6: short
Live in: {r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r5: java.util.EnumSet, z0: boolean, r4: java.lang.String}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r5: java.util.EnumSet, z0: boolean, r4: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
l1 := @parameter7: long
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r5: java.util.EnumSet, z0: boolean, r4: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r5: java.util.EnumSet, z0: boolean, r4: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String}
---------------------------------------
---------------------------------------
r6 := @parameter8: org.apache.hadoop.crypto.CryptoProtocolVersion[]
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r5: java.util.EnumSet, z0: boolean, r4: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r5: java.util.EnumSet, z0: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String}
---------------------------------------
---------------------------------------
r7 := @parameter9: java.lang.String
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r5: java.util.EnumSet, z0: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z0: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet}
---------------------------------------
---------------------------------------
z1 := @parameter10: boolean
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z0: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r11: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r11: org.slf4j.Logger}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label01
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z2: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$r34 = new java.lang.StringBuilder
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r34: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r58 = $r34
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r34: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.startFile: src=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r35: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r35: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r36: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", holder=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r36: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r37: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientMachine=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r38: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r39: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r39: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", createParent=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r40: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r41: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r41: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r42: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", replication=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r42: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r43: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r43: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", createFlag=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r44: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r45: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r45: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r46: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blockSize=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r46: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r47: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r48: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedVersions=")
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r48: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r50 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r6)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r49: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r50: java.lang.String, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder, $r50: java.lang.String, $r49: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r51 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, r58: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r51: org.slf4j.Logger, r58: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r52 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r51: org.slf4j.Logger, r58: java.lang.StringBuilder}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r52: java.lang.String, $r51: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r51.<org.slf4j.Logger: void debug(java.lang.String)>($r52)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r52: java.lang.String, $r51: org.slf4j.Logger}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$z3 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: boolean isValidName(java.lang.String)>(r1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label02
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z3: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$z4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isExactReservedName(java.lang.String)>(r1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label02
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z4: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$z5 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isReservedName(java.lang.String)>(r1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label03
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z5: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$z10 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isReservedRawName(java.lang.String)>(r1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z10: boolean}
---------------------------------------
---------------------------------------
if $z10 != 0 goto label03
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z10: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$z11 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isReservedInodesName(java.lang.String)>(r1)
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z11: boolean}
---------------------------------------
---------------------------------------
if $z11 != 0 goto label03
Live in: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $z11: boolean}
Live out: {r1: java.lang.String, s0: short, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$r59 = new org.apache.hadoop.fs.InvalidPathException
Live in: {r1: java.lang.String}
Live out: {$r59: org.apache.hadoop.fs.InvalidPathException, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r59.<org.apache.hadoop.fs.InvalidPathException: void <init>(java.lang.String)>(r1)
Live in: {$r59: org.apache.hadoop.fs.InvalidPathException, r1: java.lang.String}
Live out: {$r59: org.apache.hadoop.fs.InvalidPathException}
---------------------------------------
---------------------------------------
throw $r59
Live in: {$r59: org.apache.hadoop.fs.InvalidPathException}
Live out: {}
---------------------------------------
---------------------------------------
$r60 = <org.apache.hadoop.fs.CreateFlag: org.apache.hadoop.fs.CreateFlag SHOULD_REPLICATE>
Live in: {s0: short, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean}
Live out: {s0: short, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r60: org.apache.hadoop.fs.CreateFlag}
---------------------------------------
---------------------------------------
z12 = virtualinvoke r5.<java.util.EnumSet: boolean contains(java.lang.Object)>($r60)
Live in: {s0: short, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, $r60: org.apache.hadoop.fs.CreateFlag}
Live out: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
---------------------------------------
---------------------------------------
if z12 == 0 goto label04
Live in: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
Live out: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
---------------------------------------
---------------------------------------
$z9 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7)
Live in: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
Live out: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, $z9: boolean}
---------------------------------------
---------------------------------------
if $z9 != 0 goto label04
Live in: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, $z9: boolean}
Live out: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
---------------------------------------
---------------------------------------
$r33 = new org.apache.hadoop.HadoopIllegalArgumentException
Live in: {}
Live out: {$r33: org.apache.hadoop.HadoopIllegalArgumentException}
---------------------------------------
---------------------------------------
specialinvoke $r33.<org.apache.hadoop.HadoopIllegalArgumentException: void <init>(java.lang.String)>("SHOULD_REPLICATE flag and ecPolicyName are exclusive parameters. Set both is not allowed!")
Live in: {$r33: org.apache.hadoop.HadoopIllegalArgumentException}
Live out: {$r33: org.apache.hadoop.HadoopIllegalArgumentException}
---------------------------------------
---------------------------------------
throw $r33
Live in: {$r33: org.apache.hadoop.HadoopIllegalArgumentException}
Live out: {}
---------------------------------------
---------------------------------------
z13 = 1
Live in: {z12: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short}
Live out: {z13: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean}
---------------------------------------
---------------------------------------
r61 = null
Live in: {z13: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r12)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r13 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r13)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r14 = new java.lang.StringBuilder
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create file")
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r17)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r62 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePathForStartFile(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.util.EnumSet,boolean)>($r18, r8, r1, r5, z0)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r1: java.lang.String, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
if z12 != 0 goto label06
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z7 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $z7: boolean}
---------------------------------------
---------------------------------------
if $z7 == 0 goto label07
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $z7: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z8 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: boolean hasErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath)>(r0, r62)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $z8: boolean}
---------------------------------------
---------------------------------------
if $z8 != 0 goto label07
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $z8: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $r19: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r19.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void verifyReplication(java.lang.String,short,java.lang.String)>(r1, s0, r4)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String, $r19: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$l3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long minBlockSize>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $l3: long}
---------------------------------------
---------------------------------------
$b4 = l1 cmp $l3
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $l3: long}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $b4: byte}
---------------------------------------
---------------------------------------
if $b4 >= 0 goto label08
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $b4: byte}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r26 = new java.io.IOException
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long}
---------------------------------------
---------------------------------------
$r27 = new java.lang.StringBuilder
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long, $r27: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified block size is less than configured minimum value (dfs.namenode.fs-limits.min-block-size): ")
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long, $r27: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, l1: long, $r28: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < ")
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r29: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$l2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long minBlockSize>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r30: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $l2: long, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $l2: long, $r30: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r31: java.lang.StringBuilder}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r32: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r32)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r32: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r26
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r63 = null
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
$z6 = virtualinvoke r62.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: boolean isRaw()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 != 0 goto label09
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], $z6: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
$r21 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], $r21: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
if $r21 == null goto label09
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[], $r21: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
---------------------------------------
---------------------------------------
r64 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo getEncryptionKeyInfo(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.crypto.CryptoProtocolVersion[])>(r0, r62, r6)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r63: org.apache.hadoop.fs.FileEncryptionInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r6: org.apache.hadoop.crypto.CryptoProtocolVersion[]}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r63: org.apache.hadoop.fs.FileEncryptionInfo}
---------------------------------------
---------------------------------------
if r64 == null goto label09
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r63: org.apache.hadoop.fs.FileEncryptionInfo}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r63: org.apache.hadoop.fs.FileEncryptionInfo}
---------------------------------------
---------------------------------------
$r22 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r22: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r22)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r22: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r23 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke r62.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r24: java.lang.String}
---------------------------------------
---------------------------------------
r62 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePathForStartFile(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.util.EnumSet,boolean)>($r23, r8, $r24, r5, z0)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, $r23: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r8: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r24: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo}
---------------------------------------
---------------------------------------
$r25 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo}
---------------------------------------
---------------------------------------
r63 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.fs.FileEncryptionInfo getFileEncryptionInfo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo)>($r25, r62, r64)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, z12: boolean, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r64: org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EncryptionKeyInfo}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean}
---------------------------------------
---------------------------------------
z13 = 0
Live in: {r7: java.lang.String, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String}
---------------------------------------
---------------------------------------
$r65 = new org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, $r65: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
specialinvoke $r65.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void <init>()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, $r65: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, $r65: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
r61 = $r65
Live in: {z13: boolean, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, $r65: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
$r66 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, z1: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, z1: boolean, $r66: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r66.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeLock()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, z1: boolean, $r66: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
r67 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.protocol.HdfsFileStatus startFile(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.fs.permission.PermissionStatus,java.lang.String,java.lang.String,java.util.EnumSet,boolean,short,long,org.apache.hadoop.fs.FileEncryptionInfo,org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo,boolean,java.lang.String,boolean)>(r0, r62, r2, r3, r4, r5, z0, s0, l1, r63, r61, z12, r7, z1)
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r62: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r2: org.apache.hadoop.fs.permission.PermissionStatus, r3: java.lang.String, r4: java.lang.String, r5: java.util.EnumSet, z0: boolean, s0: short, l1: long, r63: org.apache.hadoop.fs.FileEncryptionInfo, z12: boolean, r7: java.lang.String, z1: boolean}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$r68 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r68: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r68.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeUnlock()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, $r68: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
goto label15
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$r57 := @caughtexception
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r57: java.io.IOException}
---------------------------------------
---------------------------------------
r69 = $r57
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r57: java.io.IOException}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r69: java.io.IOException}
---------------------------------------
---------------------------------------
z13 = r69 instanceof org.apache.hadoop.ipc.StandbyException
Live in: {r69: java.io.IOException, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r69: java.io.IOException}
---------------------------------------
---------------------------------------
throw r69
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r69: java.io.IOException}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r53 := @caughtexception
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r53: java.lang.Throwable}
---------------------------------------
---------------------------------------
r9 = $r53
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r53: java.lang.Throwable}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r54 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r9: java.lang.Throwable}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r9: java.lang.Throwable, $r54: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r54.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeUnlock()>()
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r9: java.lang.Throwable, $r54: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r9
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r9: java.lang.Throwable}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("create")
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if 0 != 0 goto label19
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r20.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r61 == null goto label19
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void removeBlocks(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)>(r61)
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r61.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void clear()>()
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
goto label19
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
$r55 := @caughtexception
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r55: java.lang.Throwable}
---------------------------------------
---------------------------------------
r10 = $r55
Live in: {z13: boolean, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r55: java.lang.Throwable}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z13: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("create")
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z13: boolean}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z13: boolean}
---------------------------------------
---------------------------------------
if z13 != 0 goto label18
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z13: boolean}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r56 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r56: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r56.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r56: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r61 == null goto label18
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void removeBlocks(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)>(r61)
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r61.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void clear()>()
Live in: {r10: java.lang.Throwable, r61: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r10
Live in: {r10: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return r67
Live in: {r67: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {}
---------------------------------------
=======================================
=======================================
recoverLease
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r23 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r23: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {r23: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r23: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {r23: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r23: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
z2 = 0
Live in: {r23: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r23: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r23: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r23: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r23: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r23: java.lang.String}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r23: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot recover the lease of ")
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r11: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp WRITE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r24 = virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePath(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp)>(r3, r23, $r12)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r23: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
---------------------------------------
---------------------------------------
r25 = virtualinvoke r24.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r1: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r24.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.INodeFile valueOf(org.apache.hadoop.hdfs.server.namenode.INode,java.lang.String)>($r14, r25)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label04
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z0: boolean}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
z3 = 1
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z3: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("recoverLease")
Live in: {z3: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {z3: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
if z2 != 0 goto label03
Live in: {z3: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {z3: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z3: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z3: boolean, $r19: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r19.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z3: boolean, $r19: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z3: boolean}
---------------------------------------
---------------------------------------
return z3
Live in: {z3: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label05
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z1: boolean}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r17 = <org.apache.hadoop.fs.permission.FsAction: org.apache.hadoop.fs.permission.FsAction WRITE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: org.apache.hadoop.fs.permission.FsAction, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void checkPathAccess(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.fs.permission.FsAction)>(r3, r24, $r17)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: org.apache.hadoop.fs.permission.FsAction, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp RECOVER_LEASE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
z4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean recoverLeaseInternal(org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String,java.lang.String,java.lang.String,boolean)>($r15, r24, r25, r1, r2, 1)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r24: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r25: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("recoverLease")
Live in: {z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
if z2 != 0 goto label07
Live in: {z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z4: boolean, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z4: boolean, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z4: boolean}
---------------------------------------
---------------------------------------
return z4
Live in: {z4: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r22 := @caughtexception
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
r26 = $r22
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: org.apache.hadoop.ipc.StandbyException}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r26: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r26: org.apache.hadoop.ipc.StandbyException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r26: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
throw r26
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r26: org.apache.hadoop.ipc.StandbyException}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 := @caughtexception
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r20
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("recoverLease")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
if z2 != 0 goto label11
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, $r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r21.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r5: java.lang.Throwable, $r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
recoverLeaseInternal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.INodesInPath
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r4 := @parameter3: java.lang.String
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r5 := @parameter4: java.lang.String
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
z0 := @parameter5: boolean
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z9: boolean}
---------------------------------------
---------------------------------------
if $z9 != 0 goto label1
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z9: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r69 = new java.lang.AssertionError
Live in: {}
Live out: {$r69: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r69.<java.lang.AssertionError: void <init>()>()
Live in: {$r69: java.lang.AssertionError}
Live out: {$r69: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r69
Live in: {$r69: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
r6 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeFile asFile()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label9
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r10: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
r70 = virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease getLease(java.lang.String)>(r4)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r10: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
if z0 != 0 goto label2
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
if r70 == null goto label2
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
$r62 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r62: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
r71 = virtualinvoke $r62.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease getLease(org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r6)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r62: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r71: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
if r71 == null goto label2
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r71: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r71: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
$z8 = virtualinvoke r71.<java.lang.Object: boolean equals(java.lang.Object)>(r70)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r70: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r71: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z8: boolean}
---------------------------------------
---------------------------------------
if $z8 == 0 goto label2
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z8: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r63 = new org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r64 = new java.lang.StringBuilder
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r64: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r64.<java.lang.StringBuilder: void <init>()>()
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r64: java.lang.StringBuilder}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r64: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r64: java.lang.StringBuilder}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r65: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already the current lease holder.")
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r65: java.lang.StringBuilder}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r66: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r66: java.lang.StringBuilder}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r67: java.lang.String}
---------------------------------------
---------------------------------------
$r68 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: java.lang.String access$000(org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5, $r67)
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r67: java.lang.String}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, $r68: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r63.<org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException: void <init>(java.lang.String)>($r68)
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, $r68: java.lang.String}
Live out: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
---------------------------------------
---------------------------------------
throw $r63
Live in: {$r63: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
Live out: {}
---------------------------------------
---------------------------------------
r72 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r72.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientName()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r73 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
r74 = virtualinvoke $r73.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease getLease(java.lang.String)>(r7)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
---------------------------------------
---------------------------------------
if r74 != null goto label3
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
---------------------------------------
---------------------------------------
$r60 = new org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String}
Live out: {$r60: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r61 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: java.lang.String access$000(org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5, "the file is under construction but no leases found.")
Live in: {$r60: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
Live out: {$r60: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, $r61: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r60.<org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException: void <init>(java.lang.String)>($r61)
Live in: {$r60: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, $r61: java.lang.String}
Live out: {$r60: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
---------------------------------------
---------------------------------------
throw $r60
Live in: {$r60: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
Live out: {}
---------------------------------------
---------------------------------------
if z0 == 0 goto label4
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r52 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String}
---------------------------------------
---------------------------------------
$r51 = new java.lang.StringBuilder
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r51: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r51.<java.lang.StringBuilder: void <init>()>()
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r51: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r51: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("recoverLease: ")
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r51: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r53: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74)
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r53: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r54: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", src=")
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r54: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r55: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r55: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r56: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ")
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r56: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r57: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, r7: java.lang.String, $r57: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, $r58: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r52: org.slf4j.Logger, $r58: java.lang.StringBuilder}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r59: java.lang.String, $r52: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r52.<org.slf4j.Logger: void info(java.lang.String)>($r59)
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r59: java.lang.String, $r52: org.slf4j.Logger}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean internalReleaseLease(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String)>(r74, r3, r2, r4)
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z7: boolean}
---------------------------------------
---------------------------------------
return $z7
Live in: {$z7: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z3 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label5
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke r74.<org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease: java.lang.String getHolder()>()
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r42: java.lang.String}
---------------------------------------
---------------------------------------
$z6 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>(r7)
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r42: java.lang.String}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 != 0 goto label5
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z6: boolean}
Live out: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String, r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r43 = new java.lang.AssertionError
Live in: {r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r7: java.lang.String}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
$r44 = new java.lang.StringBuilder
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r44.<java.lang.StringBuilder: void <init>()>()
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r44: java.lang.StringBuilder}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current lease holder ")
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r44: java.lang.StringBuilder}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, $r45: java.lang.StringBuilder, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
$r46 = virtualinvoke r74.<org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease: java.lang.String getHolder()>()
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, $r45: java.lang.StringBuilder, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, $r46: java.lang.String, $r45: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, $r46: java.lang.String, $r45: java.lang.StringBuilder}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match file creator ")
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, $r47: java.lang.StringBuilder}
Live out: {$r43: java.lang.AssertionError, r7: java.lang.String, $r48: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
Live in: {$r43: java.lang.AssertionError, r7: java.lang.String, $r48: java.lang.StringBuilder}
Live out: {$r43: java.lang.AssertionError, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r43: java.lang.AssertionError, $r49: java.lang.StringBuilder}
Live out: {$r43: java.lang.AssertionError, $r50: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r43.<java.lang.AssertionError: void <init>(java.lang.Object)>($r50)
Live in: {$r43: java.lang.AssertionError, $r50: java.lang.String}
Live out: {$r43: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r43
Live in: {$r43: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r74.<org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease: boolean expiredSoftLimit()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label7
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z4: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r32 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: java.lang.String}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String}
---------------------------------------
---------------------------------------
$r31 = new java.lang.StringBuilder
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r31: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startFile: recover ")
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r31: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r33: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", src=")
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r34: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r35: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r35: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r36: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client ")
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r36: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, r7: java.lang.String, $r37: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: org.slf4j.Logger, $r38: java.lang.StringBuilder}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: java.lang.String, $r32: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String)>($r39)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: java.lang.String, $r32: org.slf4j.Logger}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean internalReleaseLease(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String)>(r74, r3, r2, null)
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r74: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label6
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, $z5: boolean}
Live out: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r40 = new org.apache.hadoop.hdfs.protocol.RecoveryInProgressException
Live in: {r5: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String}
Live out: {$r40: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r41 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: java.lang.String access$000(org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5, "lease recovery is in progress. Try again later.")
Live in: {$r40: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String}
Live out: {$r40: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, $r41: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r40.<org.apache.hadoop.hdfs.protocol.RecoveryInProgressException: void <init>(java.lang.String)>($r41)
Live in: {$r40: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, $r41: java.lang.String}
Live out: {$r40: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException}
---------------------------------------
---------------------------------------
throw $r40
Live in: {$r40: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException}
Live out: {}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>()
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if r8 == null goto label8
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>()
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r20: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
$r21 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState UNDER_RECOVERY>
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r20: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r20: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r21: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
if $r20 != $r21 goto label8
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r20: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r21: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r22 = new org.apache.hadoop.hdfs.protocol.RecoveryInProgressException
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String}
---------------------------------------
---------------------------------------
$r23 = new java.lang.StringBuilder
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r23: java.lang.StringBuilder}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("another recovery is in progress by ")
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r23: java.lang.StringBuilder}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r24: java.lang.StringBuilder}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ")
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r25: java.lang.StringBuilder}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r26: java.lang.StringBuilder, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke r72.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientMachine()>()
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r26: java.lang.StringBuilder, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r27: java.lang.String, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r27: java.lang.String, $r26: java.lang.StringBuilder}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r28: java.lang.StringBuilder}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r29: java.lang.String}
---------------------------------------
---------------------------------------
$r30 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: java.lang.String access$000(org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5, $r29)
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r29: java.lang.String}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, $r30: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r22.<org.apache.hadoop.hdfs.protocol.RecoveryInProgressException: void <init>(java.lang.String)>($r30)
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException, $r30: java.lang.String}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException}
---------------------------------------
---------------------------------------
throw $r22
Live in: {$r22: org.apache.hadoop.hdfs.protocol.RecoveryInProgressException}
Live out: {}
---------------------------------------
---------------------------------------
$r11 = new org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException
Live in: {r7: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = new java.lang.StringBuilder
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this file lease is currently owned by ")
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, r7: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ")
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $r14: java.lang.StringBuilder}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r15: java.lang.StringBuilder, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r72.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientMachine()>()
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r15: java.lang.StringBuilder, r72: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r16: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r16: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r17: java.lang.StringBuilder}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r18: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: java.lang.String access$000(org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r3, r4, r5, $r18)
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp, r3: java.lang.String, r4: java.lang.String, r5: java.lang.String, $r18: java.lang.String}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, $r19: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r11.<org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException: void <init>(java.lang.String)>($r19)
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, $r19: java.lang.String}
Live out: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
---------------------------------------
---------------------------------------
throw $r11
Live in: {$r11: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
appendFile
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter3: java.util.EnumSet
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r4: java.util.EnumSet, r2: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter4: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r4: java.util.EnumSet, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, z0: boolean, r2: java.lang.String, r4: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.fs.CreateFlag: org.apache.hadoop.fs.CreateFlag NEW_BLOCK>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, z0: boolean, r2: java.lang.String, r4: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, z0: boolean, r2: java.lang.String, $r8: org.apache.hadoop.fs.CreateFlag, r4: java.util.EnumSet}
---------------------------------------
---------------------------------------
z1 = virtualinvoke r4.<java.util.EnumSet: boolean contains(java.lang.Object)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, z0: boolean, r2: java.lang.String, $r8: org.apache.hadoop.fs.CreateFlag, r4: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
if z1 == 0 goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = <org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature APPEND_NEW_BLOCK>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r19: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void requireEffectiveLayoutVersionForFeature(org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature)>($r19)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r19: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r9 = newarray (java.lang.Object)[3]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r9[0] = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r9[1] = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r9[2] = r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("DIR* NameSystem.appendFile: src={}, holder={}, clientMachine={}", $r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r9: java.lang.Object[], $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
z2 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, z1: boolean, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, z1: boolean, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, z0: boolean, r2: java.lang.String, r3: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r12: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r12: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r13 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot append to file")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r16: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r16)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean, $r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
r24 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAppendOp: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus appendFile(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,boolean,boolean)>(r0, r1, r5, r2, r3, z1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.lang.String, r3: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("append")
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
if 0 != 0 goto label09
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
goto label09
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r22 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, $r22: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
r6 = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, $r22: org.apache.hadoop.ipc.StandbyException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r6: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: org.apache.hadoop.ipc.StandbyException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r6: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
throw r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, r6: org.apache.hadoop.ipc.StandbyException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean}
---------------------------------------
---------------------------------------
$r20 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, $r20: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r20
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean, $r20: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("append")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable, z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable, z2: boolean}
---------------------------------------
---------------------------------------
if z2 != 0 goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable, z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable, $r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r21.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable, $r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r7: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "append", r1)
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
return r24
Live in: {r24: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus}
Live out: {}
---------------------------------------
---------------------------------------
$r23 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r23: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r25 = $r23
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r23: org.apache.hadoop.security.AccessControlException}
Live out: {r25: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "append", r1)
Live in: {r25: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r25: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r25
Live in: {r25: org.apache.hadoop.security.AccessControlException}
Live out: {}
---------------------------------------
=======================================
=======================================
getExtendedBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.Block
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.Block}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: org.apache.hadoop.hdfs.protocol.Block, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getBlockPoolId()>()
Live in: {$r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: org.apache.hadoop.hdfs.protocol.Block, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: void <init>(java.lang.String,org.apache.hadoop.hdfs.protocol.Block)>($r3, r1)
Live in: {$r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.Block}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {}
---------------------------------------
=======================================
=======================================
setBlockPoolId
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void setBlockPoolId(java.lang.String)>(r1)
Live in: {r1: java.lang.String, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getAdditionalBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
r3 := @parameter3: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
r5 := @parameter5: java.lang.String[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
r6 := @parameter6: java.util.EnumSet
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
r7 = "getAdditionalBlock"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r13 = newarray (java.lang.Object)[3]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r14: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r13[0] = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger, $r15: java.lang.Long}
---------------------------------------
---------------------------------------
$r13[1] = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger, $r15: java.lang.Long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r13[2] = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* getAdditionalBlock: {}  inodeId {} for {}", $r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: java.lang.Object[], $r14: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
r8 = newarray (org.apache.hadoop.hdfs.protocol.LocatedBlock)[1]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[]}
---------------------------------------
---------------------------------------
$r16 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], $r16: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r16)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], $r16: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[]}
---------------------------------------
---------------------------------------
r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r17 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r17)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r9 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult validateAddBlock(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,long,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.LocatedBlock[])>(r0, r10, r1, l0, r2, r3, r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: java.util.EnumSet, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r10: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getAdditionalBlock")
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
---------------------------------------
---------------------------------------
goto label05
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r26 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.lang.Throwable}
---------------------------------------
---------------------------------------
r27 = $r26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.lang.Throwable}
Live out: {r27: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getAdditionalBlock")
Live in: {r27: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r27: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r27
Live in: {r27: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
if r9 != null goto label07
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label06
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $z0: boolean}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$r23 = r8[0]
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r23: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
if $r23 != null goto label06
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r23: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$r24 = new java.lang.AssertionError
Live in: {}
Live out: {$r24: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>("Retry block is null")
Live in: {$r24: java.lang.AssertionError}
Live out: {$r24: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r24
Live in: {$r24: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r22 = r8[0]
Live in: {r8: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {$r22: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
return $r22
Live in: {$r22: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r18: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult}
---------------------------------------
---------------------------------------
r28 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] chooseTargetForNewBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockManager,java.lang.String,org.apache.hadoop.hdfs.protocol.DatanodeInfo[],java.lang.String[],java.util.EnumSet,org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult)>($r18, r1, r4, r5, r6, r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r18: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r4: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.lang.String[], r6: java.util.EnumSet, r9: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$ValidateAddBlockResult}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
$r19 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r19: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r19)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r19: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
$r20 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r20: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r20)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r20: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
r11 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.protocol.LocatedBlock storeAllocatedBlock(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,long,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[])>(r0, r1, l0, r2, r3, r28)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r11: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("getAdditionalBlock")
Live in: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label12
Live in: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r25 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: java.lang.Throwable}
---------------------------------------
---------------------------------------
r12 = $r25
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: java.lang.Throwable}
Live out: {r12: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("getAdditionalBlock")
Live in: {r12: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r12
Live in: {r12: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r21.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
return r11
Live in: {r11: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {}
---------------------------------------
=======================================
=======================================
getAdditionalDatanode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r34 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r34: java.lang.String}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r34: java.lang.String}
---------------------------------------
---------------------------------------
r1 := @parameter2: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
r2 := @parameter3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
r3 := @parameter4: java.lang.String[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
r4 := @parameter5: java.util.Set
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set}
---------------------------------------
---------------------------------------
i1 := @parameter6: int
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long}
---------------------------------------
---------------------------------------
r5 := @parameter7: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r34: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure dtpReplaceDatanodeOnFailure>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String, $r12: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure: void checkEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String, $r12: org.apache.hadoop.hdfs.protocol.datatransfer.ReplaceDatanodeOnFailure}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String}
---------------------------------------
---------------------------------------
r9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add datanode; src=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blk=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r18: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r19: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r20: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r20)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r20: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
---------------------------------------
---------------------------------------
$r21 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r21: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r35 = virtualinvoke $r21.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePath(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,long)>(r9, r34, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r9: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r34: java.lang.String, $r21: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r35: org.apache.hadoop.hdfs.server.namenode.INodesInPath, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r5: java.lang.String}
---------------------------------------
---------------------------------------
r36 = virtualinvoke r35.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r35: org.apache.hadoop.hdfs.server.namenode.INodesInPath, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r5: java.lang.String, r35: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
r37 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile checkLease(org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String,long)>(r35, r5, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r5: java.lang.String, r35: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r37.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, $r22: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
r6 = virtualinvoke $r22.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientMachine()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, $r22: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
$r23 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r23: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r23: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r24: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r38 = virtualinvoke $r24.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getDatanodeByHost(java.lang.String)>(r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r3: java.lang.String[], r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r24: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[]}
---------------------------------------
---------------------------------------
l2 = virtualinvoke r37.<org.apache.hadoop.hdfs.server.namenode.INodeFile: long getPreferredBlockSize()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long}
---------------------------------------
---------------------------------------
b3 = virtualinvoke r37.<org.apache.hadoop.hdfs.server.namenode.INodeFile: byte getStoragePolicyID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r37.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.protocol.BlockType getBlockType()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r5: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r37: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r25 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r5: java.lang.String, $r25: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r10 = virtualinvoke $r25.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r5: java.lang.String, $r25: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r26 = newarray (java.lang.Object)[5]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], l0: long, r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
$r26[0] = r36
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
$r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String, $r27: java.lang.Long}
---------------------------------------
---------------------------------------
$r26[1] = $r27
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String, $r27: java.lang.Long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r26[2] = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r26[3] = r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r26[4] = r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke r10.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] getDatanodeStorageInfos(org.apache.hadoop.hdfs.protocol.DatanodeID[],java.lang.String[],java.lang.String,java.lang.Object[])>(r2, r3, "src=%s, fileId=%d, blk=%s, clientName=%s, clientMachine=%s", $r26)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r2: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r3: java.lang.String[], $r26: java.lang.Object[], r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, $r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r28)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r6: java.lang.String, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, $r28: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getAdditionalDatanode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
---------------------------------------
---------------------------------------
$r33 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: java.lang.Throwable}
---------------------------------------
---------------------------------------
r11 = $r33
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: java.lang.Throwable}
Live out: {r11: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getAdditionalDatanode")
Live in: {r11: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r11
Live in: {r11: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
if r38 != null goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, r6: java.lang.String}
---------------------------------------
---------------------------------------
$r32 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r8: org.apache.hadoop.hdfs.protocol.BlockType, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r8: org.apache.hadoop.hdfs.protocol.BlockType, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, $r32: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r6: java.lang.String}
---------------------------------------
---------------------------------------
r38 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.net.Node getClientNode(org.apache.hadoop.hdfs.server.blockmanagement.BlockManager,java.lang.String)>($r32, r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r8: org.apache.hadoop.hdfs.protocol.BlockType, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, $r32: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$r29 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, $r29: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r39 = virtualinvoke $r29.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] chooseTarget4AdditionalDatanode(java.lang.String,int,org.apache.hadoop.net.Node,java.util.List,java.util.Set,long,byte,org.apache.hadoop.hdfs.protocol.BlockType)>(r36, i1, r38, r7, r4, l2, b3, r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r36: java.lang.String, i1: int, r38: org.apache.hadoop.net.Node, r7: java.util.List, r4: java.util.Set, l2: long, b3: byte, r8: org.apache.hadoop.hdfs.protocol.BlockType, $r29: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r39: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
r40 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.protocol.LocatedBlock newLocatedBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[],long,boolean)>(r1, r39, -1L, 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r39: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r31 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r30 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode: org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode COPY>
Live in: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r30: org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode, $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r31.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void setBlockToken(org.apache.hadoop.hdfs.protocol.LocatedBlock,org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode)>(r40, $r30)
Live in: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r30: org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode, $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
return r40
Live in: {r40: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {}
---------------------------------------
=======================================
=======================================
abandonBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter3: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long, $r6: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* NameSystem.abandonBlock: {} of file {}", r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long, $r6: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r2: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot abandon block ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for file")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r14: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, $r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: void abandonBlock(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.protocol.ExtendedBlock,long,java.lang.String,java.lang.String)>($r15, r4, r1, l0, r2, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r16 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r16: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* NameSystem.abandonBlock: {} is removed from pendingCreates", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r16: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("abandonBlock")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("abandonBlock")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
leaseExceptionString
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
r2 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, l0: long}
Live out: {r2: java.lang.String, r1: java.lang.String, l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r2: java.lang.String, r1: java.lang.String, l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: java.lang.String, l0: long, $r4: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease getLease(java.lang.String)>(r2)
Live in: {r2: java.lang.String, r1: java.lang.String, l0: long, $r4: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = new java.lang.StringBuilder
Live in: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, r1: java.lang.String}
Live out: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, r1: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Live in: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, r1: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, r1: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, r1: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (inode ")
Live in: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, $r6: java.lang.StringBuilder}
Live out: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, l0: long, $r7: java.lang.StringBuilder}
Live out: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ")
Live in: {r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r8: java.lang.StringBuilder}
Live out: {$r9: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: java.lang.String}
---------------------------------------
---------------------------------------
if r3 == null goto label1
Live in: {$r9: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: java.lang.String}
Live out: {$r9: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease: java.lang.String toString()>()
Live in: {$r9: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {$r16: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label2
Live in: {$r16: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r16: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {$r9: java.lang.StringBuilder, r2: java.lang.String}
Live out: {$r9: java.lang.StringBuilder, r2: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {$r9: java.lang.StringBuilder, r2: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {$r9: java.lang.StringBuilder, r2: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Holder ")
Live in: {$r9: java.lang.StringBuilder, r2: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {$r9: java.lang.StringBuilder, r2: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {$r9: java.lang.StringBuilder, r2: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {$r9: java.lang.StringBuilder, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have any open files.")
Live in: {$r9: java.lang.StringBuilder, $r12: java.lang.StringBuilder}
Live out: {$r9: java.lang.StringBuilder, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r9: java.lang.StringBuilder, $r13: java.lang.StringBuilder}
Live out: {$r16: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
Live in: {$r16: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r14: java.lang.StringBuilder}
Live out: {$r15: java.lang.String}
---------------------------------------
---------------------------------------
return $r15
Live in: {$r15: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
checkLease
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.INodesInPath
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
l0 := @parameter2: long
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath, l0: long}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath, l0: long}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r1: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode, $z0: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 != 0 goto label1
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode, $z5: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$r42 = new java.lang.AssertionError
Live in: {}
Live out: {$r42: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r42.<java.lang.AssertionError: void <init>()>()
Live in: {$r42: java.lang.AssertionError}
Live out: {$r42: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r42
Live in: {$r42: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
if r4 != null goto label2
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$r36 = new java.io.FileNotFoundException
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long}
Live out: {$r36: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r37 = new java.lang.StringBuilder
Live in: {$r36: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
Live out: {$r36: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
Live in: {$r36: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r37: java.lang.StringBuilder}
Live out: {$r36: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File does not exist: ")
Live in: {$r36: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r37: java.lang.StringBuilder}
Live out: {$r36: java.io.FileNotFoundException, $r38: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r39 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String leaseExceptionString(java.lang.String,long,java.lang.String)>(r3, l0, r2)
Live in: {$r36: java.io.FileNotFoundException, $r38: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r36: java.io.FileNotFoundException, $r39: java.lang.String, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)
Live in: {$r36: java.io.FileNotFoundException, $r39: java.lang.String, $r38: java.lang.StringBuilder}
Live out: {$r36: java.io.FileNotFoundException, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r36: java.io.FileNotFoundException, $r40: java.lang.StringBuilder}
Live out: {$r36: java.io.FileNotFoundException, $r41: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r36.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r41)
Live in: {$r36: java.io.FileNotFoundException, $r41: java.lang.String}
Live out: {$r36: java.io.FileNotFoundException}
---------------------------------------
---------------------------------------
throw $r36
Live in: {$r36: java.io.FileNotFoundException}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INode: boolean isFile()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label3
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode, $z1: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$r30 = new org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r31 = new java.lang.StringBuilder
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r31: java.lang.StringBuilder}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INode is not a regular file: ")
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r31: java.lang.StringBuilder}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r32: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r33 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String leaseExceptionString(java.lang.String,long,java.lang.String)>(r3, l0, r2)
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r32: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r33: java.lang.String, $r32: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r33: java.lang.String, $r32: java.lang.StringBuilder}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r34: java.lang.StringBuilder}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r35: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r30.<org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException: void <init>(java.lang.String)>($r35)
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r35: java.lang.String}
Live out: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
---------------------------------------
---------------------------------------
throw $r30
Live in: {$r30: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
Live out: {}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeFile asFile()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label4
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r24 = new org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r25 = new java.lang.StringBuilder
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r25: java.lang.StringBuilder}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is not open for writing: ")
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r25: java.lang.StringBuilder}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r26: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r27 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String leaseExceptionString(java.lang.String,long,java.lang.String)>(r3, l0, r2)
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r26: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r27: java.lang.String, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r27: java.lang.String, $r26: java.lang.StringBuilder}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r28: java.lang.StringBuilder}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r29: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r24.<org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException: void <init>(java.lang.String)>($r29)
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r29: java.lang.String}
Live out: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
---------------------------------------
---------------------------------------
throw $r24
Live in: {$r24: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
Live out: {}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isFileDeleted(org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r5)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label5
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r18 = new java.io.FileNotFoundException
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long}
Live out: {$r18: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = new java.lang.StringBuilder
Live in: {$r18: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
Live out: {$r18: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
Live in: {$r18: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r19: java.lang.StringBuilder}
Live out: {$r18: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is deleted: ")
Live in: {$r18: java.io.FileNotFoundException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r19: java.lang.StringBuilder}
Live out: {$r18: java.io.FileNotFoundException, $r20: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r21 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String leaseExceptionString(java.lang.String,long,java.lang.String)>(r3, l0, r2)
Live in: {$r18: java.io.FileNotFoundException, $r20: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r18: java.io.FileNotFoundException, $r21: java.lang.String, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
Live in: {$r18: java.io.FileNotFoundException, $r21: java.lang.String, $r20: java.lang.StringBuilder}
Live out: {$r18: java.io.FileNotFoundException, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r18: java.io.FileNotFoundException, $r22: java.lang.StringBuilder}
Live out: {$r18: java.io.FileNotFoundException, $r23: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r18.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r23)
Live in: {$r18: java.io.FileNotFoundException, $r23: java.lang.String}
Live out: {$r18: java.io.FileNotFoundException}
---------------------------------------
---------------------------------------
throw $r18
Live in: {$r18: java.io.FileNotFoundException}
Live out: {}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
Live out: {r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
r6 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientName()>()
Live in: {r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
if r2 == null goto label6
Live in: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r2)
Live in: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label6
Live in: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z4: boolean}
Live out: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r8 = new org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException
Live in: {r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client (=")
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not the lease owner (=")
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, r6: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ")
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, l0: long, r2: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r14: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String leaseExceptionString(java.lang.String,long,java.lang.String)>(r3, l0, r2)
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r14: java.lang.StringBuilder, r3: java.lang.String, l0: long, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r15: java.lang.String, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r15: java.lang.String, $r14: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r16: java.lang.StringBuilder}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r17: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException: void <init>(java.lang.String)>($r17)
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r17: java.lang.String}
Live out: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
---------------------------------------
---------------------------------------
throw $r8
Live in: {$r8: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
Live out: {}
---------------------------------------
---------------------------------------
return r5
Live in: {r5: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {}
---------------------------------------
=======================================
=======================================
completeFile
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
l0 := @parameter3: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, l0: long, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot complete file ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
---------------------------------------
---------------------------------------
z1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: boolean completeFile(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,long)>(r0, r4, r1, r2, r3, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("completeFile")
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r20
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("completeFile")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
if z1 == 0 goto label6
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = new java.lang.StringBuilder
Live in: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String}
Live out: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
Live in: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* completeFile: ")
Live in: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, r1: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is closed by ")
Live in: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {z1: boolean, $r14: org.slf4j.Logger, r2: java.lang.String, $r17: java.lang.StringBuilder}
Live out: {z1: boolean, $r14: org.slf4j.Logger, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z1: boolean, $r14: org.slf4j.Logger, $r18: java.lang.StringBuilder}
Live out: {z1: boolean, $r19: java.lang.String, $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>($r19)
Live in: {z1: boolean, $r19: java.lang.String, $r14: org.slf4j.Logger}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
return z1
Live in: {z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
createNewBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.BlockType
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$r4 = new java.lang.AssertionError
Live in: {}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
Live in: {$r4: java.lang.AssertionError}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r4
Live in: {$r4: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r3 = new org.apache.hadoop.hdfs.protocol.Block
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.protocol.Block, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$l0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long nextBlockId(org.apache.hadoop.hdfs.protocol.BlockType)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.protocol.Block, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.protocol.Block, $l0: long}
---------------------------------------
---------------------------------------
specialinvoke $r3.<org.apache.hadoop.hdfs.protocol.Block: void <init>(long,long,long)>($l0, 0L, 0L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.protocol.Block, $l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
r2 = $r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r2: org.apache.hadoop.hdfs.protocol.Block, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long nextGenerationStamp(boolean)>(0)
Live in: {r2: org.apache.hadoop.hdfs.protocol.Block, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.protocol.Block, $l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.Block: void setGenerationStamp(long)>($l1)
Live in: {r2: org.apache.hadoop.hdfs.protocol.Block, $l1: long}
Live out: {r2: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
return r2
Live in: {r2: org.apache.hadoop.hdfs.protocol.Block}
Live out: {}
---------------------------------------
=======================================
=======================================
checkFileProgress
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean, $z1: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean, $z4: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
---------------------------------------
---------------------------------------
$r8 = new java.lang.AssertionError
Live in: {}
Live out: {$r8: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.AssertionError: void <init>()>()
Live in: {$r8: java.lang.AssertionError}
Live out: {$r8: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r8
Live in: {$r8: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
if z0 == 0 goto label2
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z3 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean checkBlocksComplete(java.lang.String,boolean,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[])>(r1, 1, $r7)
Live in: {r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z3: boolean}
---------------------------------------
---------------------------------------
return $z3
Live in: {$z3: boolean}
Live out: {}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i2 = lengthof r3
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i2: int}
---------------------------------------
---------------------------------------
$i1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int numCommittedAllowed>
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i2: int}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i2: int, $i1: int}
---------------------------------------
---------------------------------------
$i3 = $i2 - $i1
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i2: int, $i1: int}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i3: int}
---------------------------------------
---------------------------------------
i0 = $i3 - 2
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i3: int}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
if i0 < 0 goto label3
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
$r4 = r3[i0]
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if $r4 == null goto label3
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
$r5 = newarray (org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)[1]
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i0: int}
---------------------------------------
---------------------------------------
$r6 = r3[i0]
Live in: {r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i0: int}
Live out: {r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r5[0] = $r6
Live in: {r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean checkBlocksComplete(java.lang.String,boolean,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[])>(r1, 0, $r5)
Live in: {r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label4
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z5 = 1
Live in: {}
Live out: {$z5: boolean}
---------------------------------------
---------------------------------------
goto label5
Live in: {$z5: boolean}
Live out: {$z5: boolean}
---------------------------------------
---------------------------------------
$z5 = 0
Live in: {}
Live out: {$z5: boolean}
---------------------------------------
---------------------------------------
return $z5
Live in: {$z5: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
checkBlocksComplete
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r2 := @parameter2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
$i3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int numCommittedAllowed>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $i3: int}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $i3: int}
---------------------------------------
---------------------------------------
$i3 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $i3: int}
---------------------------------------
---------------------------------------
i0 = $i3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], $i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
i4 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i5 = lengthof r2
Live in: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i5: int}
---------------------------------------
---------------------------------------
if i4 >= $i5 goto label7
Live in: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i5: int}
Live out: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {i0: int, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r4 = r2[i4]
Live in: {i0: int, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {i0: int, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
s1 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: short getMinStorageNum(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>($r4)
Live in: {i0: int, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {i0: int, r1: java.lang.String, s1: short, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String checkBlockComplete(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[],int,int,short)>(r2, i4, i0, s1)
Live in: {i0: int, r1: java.lang.String, s1: short, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.String, r1: java.lang.String, s1: short, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int}
---------------------------------------
---------------------------------------
if r3 == null goto label6
Live in: {r3: java.lang.String, r1: java.lang.String, s1: short, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int}
Live out: {r3: java.lang.String, r1: java.lang.String, s1: short, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int}
---------------------------------------
---------------------------------------
$r6 = r2[i4]
Live in: {r3: java.lang.String, r1: java.lang.String, s1: short, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int}
Live out: {r3: java.lang.String, r1: java.lang.String, s1: short, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
i2 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: int numNodes()>()
Live in: {r3: java.lang.String, r1: java.lang.String, s1: short, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r3: java.lang.String, r1: java.lang.String, s1: short, i2: int}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r3: java.lang.String, r1: java.lang.String, s1: short, i2: int}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* ")
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, r3: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(numNodes= ")
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, $r10: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2)
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, i2: int, $r11: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r12: java.lang.StringBuilder, i2: int}
---------------------------------------
---------------------------------------
if i2 >= s1 goto label4
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r12: java.lang.StringBuilder, i2: int}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = " < "
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r12: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r19: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label5
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r19: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r19: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = " >= "
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r12: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r19: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r19: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minimum = ")
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r13: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s1)
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, s1: short, $r14: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in file ")
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, r1: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r8: org.slf4j.Logger, r1: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {$r8: org.slf4j.Logger, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r8: org.slf4j.Logger, $r17: java.lang.StringBuilder}
Live out: {$r18: java.lang.String, $r8: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r18)
Live in: {$r18: java.lang.String, $r8: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
i4 = i4 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i4: int}
Live out: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label3
Live in: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {i4: int, r1: java.lang.String, i0: int, r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
renameTo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot rename ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult renameToInt(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,boolean)>($r11, r3, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("rename")
Live in: {r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r17 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "rename", r1, r2, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("rename")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
z1 = r16.<org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult: boolean success>
Live in: {r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
---------------------------------------
---------------------------------------
if z1 == 0 goto label7
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
---------------------------------------
---------------------------------------
$r13 = r16.<org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult: org.apache.hadoop.fs.FileStatus auditStat>
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
Live out: {z1: boolean, r1: java.lang.String, r2: java.lang.String, $r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "rename", r1, r2, $r13)
Live in: {z1: boolean, r1: java.lang.String, r2: java.lang.String, $r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
return z1
Live in: {z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
renameTo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter3: org.apache.hadoop.fs.Options$Rename[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot rename ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
r30 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult renameToInt(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,boolean,org.apache.hadoop.fs.Options$Rename[])>($r12, r4, r1, r2, z0, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("rename")
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
goto label6
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
$r23 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, $r23: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r31 = $r23
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r2: java.lang.String, r1: java.lang.String, $r23: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
$r24 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.fs.Options$Rename[], $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.fs.Options$Rename[], $r24: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.fs.Options$Rename[], $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rename (options=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, r3: org.apache.hadoop.fs.Options$Rename[], $r24: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r25: java.lang.StringBuilder, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
$r26 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r25: java.lang.StringBuilder, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r26: java.lang.String, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r26: java.lang.String, $r25: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r27: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, r2: java.lang.String, r1: java.lang.String, $r28: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, $r29: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, $r29, r1, r2, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException, $r29: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r31
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r31: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r22 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("rename")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
r32 = r30.<org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo collectedBlocks>
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r32.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: java.util.List getToDeleteList()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r14: java.util.List}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r14: java.util.List}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label7
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $z1: boolean}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void removeBlocks(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)>(r32)
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r32.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void clear()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], r32: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
$r15 = new java.lang.StringBuilder
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], $r15: java.lang.StringBuilder}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rename (options=")
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.Options$Rename[], $r15: java.lang.StringBuilder}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.StringBuilder, r3: org.apache.hadoop.fs.Options$Rename[]}
---------------------------------------
---------------------------------------
$r17 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r3)
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.StringBuilder, r3: org.apache.hadoop.fs.Options$Rename[]}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: java.lang.StringBuilder}
Live out: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.StringBuilder}
Live out: {$r20: java.lang.String, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
---------------------------------------
---------------------------------------
$r21 = r30.<org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult: org.apache.hadoop.fs.FileStatus auditStat>
Live in: {$r20: java.lang.String, r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r30: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult}
Live out: {$r20: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r21: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, $r20, r1, r2, $r21)
Live in: {$r20: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r21: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
delete
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
z1 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot delete ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r10: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
r14 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo delete(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,boolean,boolean)>(r0, r2, r1, z0, z1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String}
---------------------------------------
---------------------------------------
if r14 == null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
z3 = $z2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, r1: java.lang.String, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z3: boolean, r1: java.lang.String, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("delete")
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
goto label8
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r3 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "delete", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("delete")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
if r14 == null goto label9
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void removeBlocks(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)>(r14)
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "delete", r1)
Live in: {z3: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z3: boolean}
---------------------------------------
---------------------------------------
return z3
Live in: {z3: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getPermissionChecker
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {}
---------------------------------------
=======================================
=======================================
removeBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: java.util.List getToDeleteList()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
i1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
---------------------------------------
---------------------------------------
$i0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int blockDeletionIncrement>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $i0: int}
---------------------------------------
---------------------------------------
if i1 >= $i0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, $r6: java.lang.Object}
---------------------------------------
---------------------------------------
$r7 = (org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo) $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, $r6: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
---------------------------------------
---------------------------------------
i1 = i1 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
---------------------------------------
---------------------------------------
goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator, i1: int}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeBlocks")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeBlocks")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeLeasesAndINodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label01
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List, $z1: boolean}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label01
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List, $z2: boolean}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List}
---------------------------------------
---------------------------------------
$r11 = new java.lang.AssertionError
Live in: {}
Live out: {$r11: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.AssertionError: void <init>()>()
Live in: {$r11: java.lang.AssertionError}
Live out: {$r11: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r11
Live in: {$r11: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label03
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, $z3: boolean}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, $r8: java.lang.Object}
---------------------------------------
---------------------------------------
$r9 = (java.lang.Long) $r8
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, $r8: java.lang.Object}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, $r9: java.lang.Long}
---------------------------------------
---------------------------------------
l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, $r9: java.lang.Long}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, l0: long}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, l0: long}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, l0: long, $r10: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void removeLease(long)>(l0)
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator, l0: long, $r10: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label02
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
if r2 == null goto label10
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
---------------------------------------
---------------------------------------
if z0 == 0 goto label04
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeLock()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, $r5: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void removeFromInodeMap(java.util.List)>(r2)
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, $r5: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List}
---------------------------------------
---------------------------------------
if z0 == 0 goto label09
Live in: {r2: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r2: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r2: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeUnlock()>()
Live in: {r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: java.util.List}
---------------------------------------
---------------------------------------
goto label09
Live in: {r2: java.util.List}
Live out: {r2: java.util.List}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r12
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label08
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeUnlock()>()
Live in: {r4: java.lang.Throwable, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
interfaceinvoke r2.<java.util.List: void clear()>()
Live in: {r2: java.util.List}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getFileInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
z2 := @parameter3: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean}
---------------------------------------
---------------------------------------
if z2 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r11 = "open"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = "getfileinfo"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
r2 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, z2: boolean, z1: boolean, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, z1: boolean, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, z1: boolean, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, z2: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, z2: boolean}
---------------------------------------
---------------------------------------
r12 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp: org.apache.hadoop.hdfs.protocol.HdfsFileStatus getFileInfo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,boolean,boolean,boolean)>($r8, r3, r1, z0, z1, z2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, z1: boolean, z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>(r2)
Live in: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r2: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r2: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label8
Live in: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r2: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r2: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, r2, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r9: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>(r2)
Live in: {r5: java.lang.Throwable, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r2, r1)
Live in: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus, r2: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
return r12
Live in: {r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {}
---------------------------------------
=======================================
=======================================
isFileClosed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 = "isFileClosed"
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
z0 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp: boolean isFileClosed(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r7, r3, r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("isFileClosed")
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean}
---------------------------------------
---------------------------------------
return z0
Live in: {z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r10 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r10: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "isFileClosed", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r10: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r10: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r10: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("isFileClosed")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
mkdirs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.fs.permission.PermissionStatus
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.permission.PermissionStatus, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.permission.PermissionStatus, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create directory ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
---------------------------------------
---------------------------------------
r15 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirMkdirOp: org.apache.hadoop.fs.FileStatus mkdirs(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,boolean)>(r0, r3, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.permission.PermissionStatus, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("mkdirs")
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "mkdirs", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("mkdirs")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "mkdirs", r1, null, r15)
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getContentSummary
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "contentSummary"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp: org.apache.hadoop.fs.ContentSummary getContentSummary(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r9, r4, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.fs.ContentSummary, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("contentSummary")
Live in: {r3: org.apache.hadoop.fs.ContentSummary, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.ContentSummary, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.fs.ContentSummary, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.ContentSummary, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z1, "contentSummary", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("contentSummary")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "contentSummary", r1)
Live in: {r3: org.apache.hadoop.fs.ContentSummary, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.ContentSummary}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.fs.ContentSummary}
Live out: {}
---------------------------------------
=======================================
=======================================
getQuotaUsage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "quotaUsage"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp: org.apache.hadoop.fs.QuotaUsage getQuotaUsage(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r9, r4, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.fs.QuotaUsage, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("quotaUsage")
Live in: {r3: org.apache.hadoop.fs.QuotaUsage, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.QuotaUsage, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.fs.QuotaUsage, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.QuotaUsage, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z1, "quotaUsage", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("quotaUsage")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "quotaUsage", r1)
Live in: {r3: org.apache.hadoop.fs.QuotaUsage, z0: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.QuotaUsage}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.fs.QuotaUsage}
Live out: {}
---------------------------------------
=======================================
=======================================
setQuota
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
l1 := @parameter2: long
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter3: org.apache.hadoop.fs.StorageType
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
---------------------------------------
---------------------------------------
if r2 == null goto label1
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
---------------------------------------
---------------------------------------
$r15 = <org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature QUOTA_BY_STORAGE_TYPE>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, $r15: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void requireEffectiveLayoutVersionForFeature(org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature)>($r15)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, $r15: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getQuotaCommand(long,long)>(l0, l1)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, l0: long}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, l0: long}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r9: java.lang.StringBuilder}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set quota on ")
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r9: java.lang.StringBuilder}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r10: java.lang.StringBuilder}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r11: java.lang.StringBuilder}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r12: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r12)
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, $r12: java.lang.String}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: org.apache.hadoop.fs.StorageType, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, r2: org.apache.hadoop.fs.StorageType}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAttrOp: void setQuota(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,long,long,org.apache.hadoop.fs.StorageType)>($r13, r4, r1, l0, l1, r2)
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, l0: long, l1: long, r2: org.apache.hadoop.fs.StorageType}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r3)
Live in: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label8
Live in: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label8
Live in: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r18: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r18
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r18: org.apache.hadoop.security.AccessControlException}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, r3, r1)
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r16: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r16
Live in: {r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r16: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r3: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r3)
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r3: java.lang.String}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label7
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable, $r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r6: java.lang.Throwable, $r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z1, r3, r1)
Live in: {z1: boolean, r3: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
fsync
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r24 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r24: java.lang.String}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r24: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
r1 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r24: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r24: java.lang.String, l0: long, r1: java.lang.String}
---------------------------------------
---------------------------------------
l1 := @parameter3: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r24: java.lang.String, l0: long, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* fsync: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r7: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r12: java.lang.String, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r12: java.lang.String, $r7: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot fsync file ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r18: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r18)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r18: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r19: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r19.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePath(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,long)>(r2, r24, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r24: java.lang.String, $r19: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r3: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: java.lang.String}
---------------------------------------
---------------------------------------
r25 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, l0: long, r3: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r25: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: java.lang.String, l0: long}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile checkLease(org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String,long)>(r3, r1, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l1: long, r25: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: java.lang.String, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long}
---------------------------------------
---------------------------------------
$b2 = l1 cmp 0L
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long, $b2: byte}
---------------------------------------
---------------------------------------
if $b2 <= 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long, $b2: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long, $r22: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
virtualinvoke $r22.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: void updateLengthOfLastBlock(org.apache.hadoop.hdfs.server.namenode.INodeFile,long)>(r4, l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String, l1: long, $r22: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String}
---------------------------------------
---------------------------------------
$r20 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r25: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r25: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: void persistBlocks(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,boolean)>($r20, r25, r4, 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r25: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("fsync")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r23 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r23: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r23
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r23: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("fsync")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r21.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r21: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
internalReleaseLease
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r68 := @parameter0: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
r1 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r1: java.lang.String, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter2: org.apache.hadoop.hdfs.server.namenode.INodesInPath
Live in: {r1: java.lang.String, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
r3 := @parameter3: java.lang.String
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r11 = new java.lang.StringBuilder
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering ")
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68)
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r13: java.lang.StringBuilder}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", src=")
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r14: java.lang.StringBuilder}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r15: java.lang.StringBuilder}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r12: org.slf4j.Logger, $r16: java.lang.StringBuilder}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r17: java.lang.String, $r12: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String)>($r17)
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r17: java.lang.String, $r12: org.slf4j.Logger}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$z3 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label01
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z3: boolean}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$z14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z14: boolean}
---------------------------------------
---------------------------------------
if $z14 == 0 goto label01
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z14: boolean}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$r67 = new java.lang.AssertionError
Live in: {}
Live out: {$r67: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r67.<java.lang.AssertionError: void <init>()>()
Live in: {$r67: java.lang.AssertionError}
Live out: {$r67: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r67
Live in: {$r67: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$z4 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label02
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z4: boolean}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$z13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z13: boolean}
---------------------------------------
---------------------------------------
if $z13 != 0 goto label02
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z13: boolean}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$r66 = new java.lang.AssertionError
Live in: {}
Live out: {$r66: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r66.<java.lang.AssertionError: void <init>()>()
Live in: {$r66: java.lang.AssertionError}
Live out: {$r66: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r66
Live in: {$r66: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r18: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeFile asFile()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r18: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
i0 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: int numBlocks()>()
Live in: {r1: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>()
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
r69 = null
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
i24 = 0
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if i24 >= i0 goto label06
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
r69 = r5[i24]
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
---------------------------------------
---------------------------------------
$z10 = virtualinvoke r69.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isComplete()>()
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $z10: boolean}
---------------------------------------
---------------------------------------
if $z10 != 0 goto label04
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $z10: boolean}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
---------------------------------------
---------------------------------------
goto label06
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
---------------------------------------
---------------------------------------
$z11 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $z11: boolean}
---------------------------------------
---------------------------------------
if $z11 != 0 goto label05
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $z11: boolean}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
---------------------------------------
---------------------------------------
$r60 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $r60: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z12 = virtualinvoke $r60.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean hasMinStorage(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r69)
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $r60: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $z12: boolean}
---------------------------------------
---------------------------------------
if $z12 != 0 goto label05
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int, $z12: boolean}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
---------------------------------------
---------------------------------------
$r61 = new java.lang.AssertionError
Live in: {r1: java.lang.String}
Live out: {$r61: java.lang.AssertionError, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r62 = new java.lang.StringBuilder
Live in: {$r61: java.lang.AssertionError, r1: java.lang.String}
Live out: {$r61: java.lang.AssertionError, r1: java.lang.String, $r62: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r62.<java.lang.StringBuilder: void <init>()>()
Live in: {$r61: java.lang.AssertionError, r1: java.lang.String, $r62: java.lang.StringBuilder}
Live out: {$r61: java.lang.AssertionError, r1: java.lang.String, $r62: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A COMPLETE block is not minimally replicated in ")
Live in: {$r61: java.lang.AssertionError, r1: java.lang.String, $r62: java.lang.StringBuilder}
Live out: {$r61: java.lang.AssertionError, r1: java.lang.String, $r63: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r61: java.lang.AssertionError, r1: java.lang.String, $r63: java.lang.StringBuilder}
Live out: {$r61: java.lang.AssertionError, $r64: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r61: java.lang.AssertionError, $r64: java.lang.StringBuilder}
Live out: {$r61: java.lang.AssertionError, $r65: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r61.<java.lang.AssertionError: void <init>(java.lang.Object)>($r65)
Live in: {$r61: java.lang.AssertionError, $r65: java.lang.String}
Live out: {$r61: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r61
Live in: {$r61: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
i24 = i24 + 1
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i24: int}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
goto label03
Live in: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, i24: int, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if i24 != i0 goto label07
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
---------------------------------------
---------------------------------------
$i23 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int getLatestSnapshotId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $i23: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void finalizeINodeFileUnderConstruction(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,int,boolean)>(r1, r4, $i23, 0)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $i23: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String}
---------------------------------------
---------------------------------------
$r55 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r1: java.lang.String}
Live out: {$r55: org.slf4j.Logger, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r54 = new java.lang.StringBuilder
Live in: {$r55: org.slf4j.Logger, r1: java.lang.String}
Live out: {$r55: org.slf4j.Logger, r1: java.lang.String, $r54: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()
Live in: {$r55: org.slf4j.Logger, r1: java.lang.String, $r54: java.lang.StringBuilder}
Live out: {$r55: org.slf4j.Logger, r1: java.lang.String, $r54: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* internalReleaseLease: All existing blocks are COMPLETE, lease removed, file ")
Live in: {$r55: org.slf4j.Logger, r1: java.lang.String, $r54: java.lang.StringBuilder}
Live out: {$r55: org.slf4j.Logger, r1: java.lang.String, $r56: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r55: org.slf4j.Logger, r1: java.lang.String, $r56: java.lang.StringBuilder}
Live out: {$r55: org.slf4j.Logger, $r57: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" closed.")
Live in: {$r55: org.slf4j.Logger, $r57: java.lang.StringBuilder}
Live out: {$r55: org.slf4j.Logger, $r58: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r55: org.slf4j.Logger, $r58: java.lang.StringBuilder}
Live out: {$r59: java.lang.String, $r55: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r55.<org.slf4j.Logger: void warn(java.lang.String)>($r59)
Live in: {$r59: java.lang.String, $r55: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$i2 = i0 - 2
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int, $i2: int}
---------------------------------------
---------------------------------------
if i24 < $i2 goto label08
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int, $i2: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
---------------------------------------
---------------------------------------
$i3 = i0 - 2
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, i0: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, $i3: int}
---------------------------------------
---------------------------------------
if i24 != $i3 goto label09
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, i24: int, $i3: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if r69 == null goto label09
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r52 = virtualinvoke r69.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r69: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r52: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
$r53 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState COMMITTED>
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r52: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r52: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r53: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
if $r52 == $r53 goto label09
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r52: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r53: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r19 = new java.lang.StringBuilder
Live in: {r1: java.lang.String}
Live out: {r1: java.lang.String, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.lang.String, $r19: java.lang.StringBuilder}
Live out: {r1: java.lang.String, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.internalReleaseLease: attempt to release a create lock on ")
Live in: {r1: java.lang.String, $r19: java.lang.StringBuilder}
Live out: {r1: java.lang.String, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r1: java.lang.String, $r20: java.lang.StringBuilder}
Live out: {$r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but file is already closed.")
Live in: {$r21: java.lang.StringBuilder}
Live out: {$r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r70 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r22: java.lang.StringBuilder}
Live out: {r70: java.lang.String}
---------------------------------------
---------------------------------------
$r23 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r70: java.lang.String}
Live out: {r70: java.lang.String, $r23: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r23.<org.slf4j.Logger: void warn(java.lang.String)>(r70)
Live in: {r70: java.lang.String, $r23: org.slf4j.Logger}
Live out: {r70: java.lang.String}
---------------------------------------
---------------------------------------
$r24 = new java.io.IOException
Live in: {r70: java.lang.String}
Live out: {$r24: java.io.IOException, r70: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>(r70)
Live in: {$r24: java.io.IOException, r70: java.lang.String}
Live out: {$r24: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r24
Live in: {$r24: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
r71 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: java.lang.String, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
r6 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: java.lang.String, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getPenultimateBlock()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if r7 == null goto label10
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r51 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r51: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z9 = virtualinvoke $r51.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean hasMinStorage(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r7)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r51: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z9: boolean}
---------------------------------------
---------------------------------------
if $z9 == 0 goto label11
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z9: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
---------------------------------------
---------------------------------------
$z15 = 1
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z15: boolean}
---------------------------------------
---------------------------------------
goto label12
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z15: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z15: boolean}
---------------------------------------
---------------------------------------
$z15 = 0
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z15: boolean}
---------------------------------------
---------------------------------------
z0 = $z15
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $z15: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
$r25 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$1: int[] $SwitchMap$org$apache$hadoop$hdfs$server$common$HdfsServerConstants$BlockUCState>
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r25: int[], r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
$i4 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState: int ordinal()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r25: int[], r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r25: int[], $i4: int}
---------------------------------------
---------------------------------------
$i5 = $r25[$i4]
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $r25: int[], $i4: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $i5: int}
---------------------------------------
---------------------------------------
tableswitch($i5)
{
    case 1: goto label13;
    case 2: goto label14;
    case 3: goto label16;
    case 4: goto label16;
    default: goto label28;
}
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, $i5: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
---------------------------------------
---------------------------------------
$z8 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {}
Live out: {$z8: boolean}
---------------------------------------
---------------------------------------
if $z8 != 0 goto label28
Live in: {$z8: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r50 = new java.lang.AssertionError
Live in: {}
Live out: {$r50: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r50.<java.lang.AssertionError: void <init>(java.lang.Object)>("Already checked that the last block is incomplete")
Live in: {$r50: java.lang.AssertionError}
Live out: {$r50: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r50
Live in: {$r50: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
if z0 == 0 goto label15
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z0: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r43 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r43: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z7 = virtualinvoke $r43.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean hasMinStorage(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r71)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r43: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
---------------------------------------
---------------------------------------
if $z7 == 0 goto label15
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $z7: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$i22 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int getLatestSnapshotId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $i22: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void finalizeINodeFileUnderConstruction(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,int,boolean)>(r1, r4, $i22, 0)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $i22: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String}
---------------------------------------
---------------------------------------
$r45 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r1: java.lang.String}
Live out: {$r45: org.slf4j.Logger, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r44 = new java.lang.StringBuilder
Live in: {$r45: org.slf4j.Logger, r1: java.lang.String}
Live out: {$r45: org.slf4j.Logger, r1: java.lang.String, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r44.<java.lang.StringBuilder: void <init>()>()
Live in: {$r45: org.slf4j.Logger, r1: java.lang.String, $r44: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r1: java.lang.String, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* internalReleaseLease: Committed blocks are minimally replicated, lease removed, file")
Live in: {$r45: org.slf4j.Logger, r1: java.lang.String, $r44: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r1: java.lang.String, $r46: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r45: org.slf4j.Logger, r1: java.lang.String, $r46: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" closed.")
Live in: {$r45: org.slf4j.Logger, $r47: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, $r48: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r45: org.slf4j.Logger, $r48: java.lang.StringBuilder}
Live out: {$r49: java.lang.String, $r45: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String)>($r49)
Live in: {$r49: java.lang.String, $r45: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r37 = new java.lang.StringBuilder
Live in: {r1: java.lang.String}
Live out: {r1: java.lang.String, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.lang.String, $r37: java.lang.StringBuilder}
Live out: {r1: java.lang.String, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.internalReleaseLease: Failed to release lease for file ")
Live in: {r1: java.lang.String, $r37: java.lang.StringBuilder}
Live out: {r1: java.lang.String, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r1: java.lang.String, $r38: java.lang.StringBuilder}
Live out: {$r39: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Committed blocks are waiting to be minimally replicated. Try again later.")
Live in: {$r39: java.lang.StringBuilder}
Live out: {$r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r8 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r40: java.lang.StringBuilder}
Live out: {r8: java.lang.String}
---------------------------------------
---------------------------------------
$r41 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r8: java.lang.String}
Live out: {r8: java.lang.String, $r41: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r41.<org.slf4j.Logger: void warn(java.lang.String)>(r8)
Live in: {r8: java.lang.String, $r41: org.slf4j.Logger}
Live out: {r8: java.lang.String}
---------------------------------------
---------------------------------------
$r42 = new org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException
Live in: {r8: java.lang.String}
Live out: {$r42: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r8: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r42.<org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException: void <init>(java.lang.String)>(r8)
Live in: {$r42: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException, r8: java.lang.String}
Live out: {$r42: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
---------------------------------------
---------------------------------------
throw $r42
Live in: {$r42: org.apache.hadoop.hdfs.protocol.AlreadyBeingCreatedException}
Live out: {}
---------------------------------------
---------------------------------------
r9 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature getUnderConstructionFeature()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
r10 = virtualinvoke r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getTruncateBlock()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
if r10 == null goto label17
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
$z16 = 1
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, $z16: boolean}
---------------------------------------
---------------------------------------
goto label18
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, $z16: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, $z16: boolean}
---------------------------------------
---------------------------------------
$z16 = 0
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, $z16: boolean}
---------------------------------------
---------------------------------------
z1 = $z16
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, $z16: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if z1 == 0 goto label19
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$l19 = virtualinvoke r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $l19: long}
---------------------------------------
---------------------------------------
$l20 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $l19: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $l19: long, $l20: long}
---------------------------------------
---------------------------------------
$b21 = $l19 cmp $l20
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $l19: long, $l20: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $b21: byte}
---------------------------------------
---------------------------------------
if $b21 == 0 goto label19
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $b21: byte}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$z17 = 1
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z17: boolean}
---------------------------------------
---------------------------------------
goto label20
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z17: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z17: boolean}
---------------------------------------
---------------------------------------
$z17 = 0
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z17: boolean}
---------------------------------------
---------------------------------------
z2 = $z17
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z1: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z17: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$z18 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $z18: boolean}
---------------------------------------
---------------------------------------
if $z18 != 0 goto label22
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $z18: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
if z2 == 0 goto label22
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$l10 = virtualinvoke r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l10: long}
---------------------------------------
---------------------------------------
$l11 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l10: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l10: long, $l11: long}
---------------------------------------
---------------------------------------
$b12 = $l10 cmp $l11
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l10: long, $l11: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b12: byte}
---------------------------------------
---------------------------------------
if $b12 >= 0 goto label21
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b12: byte}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$l13 = virtualinvoke r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getGenerationStamp()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l13: long}
---------------------------------------
---------------------------------------
$l14 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getGenerationStamp()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l13: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l13: long, $l14: long}
---------------------------------------
---------------------------------------
$b15 = $l13 cmp $l14
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l13: long, $l14: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b15: byte}
---------------------------------------
---------------------------------------
if $b15 >= 0 goto label21
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b15: byte}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$l16 = virtualinvoke r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l16: long}
---------------------------------------
---------------------------------------
$l17 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l16: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l16: long, $l17: long}
---------------------------------------
---------------------------------------
$b18 = $l16 cmp $l17
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l16: long, $l17: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b18: byte}
---------------------------------------
---------------------------------------
if $b18 > 0 goto label22
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b18: byte}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$r72 = new java.lang.AssertionError
Live in: {}
Live out: {$r72: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r72.<java.lang.AssertionError: void <init>(java.lang.Object)>("wrong recoveryBlock")
Live in: {$r72: java.lang.AssertionError}
Live out: {$r72: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r72
Live in: {$r72: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$i25 = virtualinvoke r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: int getNumExpectedLocations()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $i25: int}
---------------------------------------
---------------------------------------
if $i25 != 0 goto label23
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $i25: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$r34 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r34: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r34.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] getStorages(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r71)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r34: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r35: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
$r36 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.protocol.BlockType getBlockType()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r35: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r35: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r36: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
virtualinvoke r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: void setExpectedLocations(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[],org.apache.hadoop.hdfs.protocol.BlockType)>(r71, $r35, $r36)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r35: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r36: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$i6 = virtualinvoke r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: int getNumExpectedLocations()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $i6: int}
---------------------------------------
---------------------------------------
if $i6 != 0 goto label24
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $i6: int}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$l7 = virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l7: long}
---------------------------------------
---------------------------------------
$b8 = $l7 cmp 0L
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $l7: long}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b8: byte}
---------------------------------------
---------------------------------------
if $b8 != 0 goto label24
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $b8: byte}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, z2: boolean, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo removeLastBlock(org.apache.hadoop.hdfs.protocol.Block)>(r71)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
$i9 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int getLatestSnapshotId()>()
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $i9: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void finalizeINodeFileUnderConstruction(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,int,boolean)>(r1, r4, $i9, 0)
Live in: {r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $i9: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String}
---------------------------------------
---------------------------------------
$r30 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r1: java.lang.String}
Live out: {$r30: org.slf4j.Logger, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r29 = new java.lang.StringBuilder
Live in: {$r30: org.slf4j.Logger, r1: java.lang.String}
Live out: {$r30: org.slf4j.Logger, r1: java.lang.String, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
Live in: {$r30: org.slf4j.Logger, r1: java.lang.String, $r29: java.lang.StringBuilder}
Live out: {$r30: org.slf4j.Logger, r1: java.lang.String, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* internalReleaseLease: Removed empty last block and closed file ")
Live in: {$r30: org.slf4j.Logger, r1: java.lang.String, $r29: java.lang.StringBuilder}
Live out: {$r30: org.slf4j.Logger, r1: java.lang.String, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r30: org.slf4j.Logger, r1: java.lang.String, $r31: java.lang.StringBuilder}
Live out: {$r30: org.slf4j.Logger, $r32: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r30: org.slf4j.Logger, $r32: java.lang.StringBuilder}
Live out: {$r33: java.lang.String, $r30: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>($r33)
Live in: {$r33: java.lang.String, $r30: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r26 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r26: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke $r26.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean addBlockRecoveryAttempt(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r71)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r26: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label27
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $z5: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
$r27 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r27: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z6 = virtualinvoke $r27.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isLegacyBlock(org.apache.hadoop.hdfs.protocol.Block)>(r71)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $r27: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $z6: boolean}
---------------------------------------
---------------------------------------
l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long nextGenerationStamp(boolean)>($z6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, z2: boolean, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, $z6: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, z2: boolean}
---------------------------------------
---------------------------------------
if z2 == 0 goto label25
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean, z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r71.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: void setGenerationStamp(long)>(l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
goto label26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
if z1 == 0 goto label26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
virtualinvoke r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: void setGenerationStamp(long)>(l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature, r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
virtualinvoke r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: void initializeBlockRecovery(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,long,boolean)>(r71, l1, 1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r73 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, l1: long, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long}
---------------------------------------
---------------------------------------
$r74 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r74: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r74.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r74: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r74: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.internalReleaseLease: File ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r74: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r75: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r75: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r76: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not been closed. Lease recovery is in progress. RecoveryId = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r76: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r77: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l1: long, $r77: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r78: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for block ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r78: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r79: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r71)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r79: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, $r80: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r73: org.slf4j.Logger, $r80: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r81: java.lang.String, $r73: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r73.<org.slf4j.Logger: void warn(java.lang.String)>($r81)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r81: java.lang.String, $r73: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r82 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease reassignLease(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r68, r1, r3, r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r68: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r1: java.lang.String, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r82: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r83 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r82: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r82: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r83: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r83.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void renewLease(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease)>(r82)
Live in: {r82: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, $r83: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
reassignLease
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r4 := @parameter3: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z1: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = new java.lang.AssertionError
Live in: {}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
Live in: {$r7: java.lang.AssertionError}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r7
Live in: {$r7: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
if r3 != null goto label2
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
return r1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease: java.lang.String getHolder()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logReassignLease(java.lang.String,java.lang.String,java.lang.String)>($r5, r2, r3)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.String, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease reassignLeaseInternal(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r1, r3, r4)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r6: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
return $r6
Live in: {$r6: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {}
---------------------------------------
=======================================
=======================================
reassignLeaseInternal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.lang.AssertionError
Live in: {}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
Live in: {$r7: java.lang.AssertionError}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r7
Live in: {$r7: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: void setClientName(java.lang.String)>(r2)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease reassignLease(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease,org.apache.hadoop.hdfs.server.namenode.INodeFile,java.lang.String)>(r1, r3, r2)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease, r3: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {$r6: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
---------------------------------------
---------------------------------------
return $r6
Live in: {$r6: org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease}
Live out: {}
---------------------------------------
=======================================
=======================================
commitOrCompleteLastBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.INodesInPath
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.protocol.Block
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = new java.lang.AssertionError
Live in: {}
Live out: {$r5: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.AssertionError: void <init>()>()
Live in: {$r5: java.lang.AssertionError}
Live out: {$r5: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r5
Live in: {$r5: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z1)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean commitOrCompleteLastBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockCollection,org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.namenode.INodesInPath)>(r1, r3, r2)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: org.apache.hadoop.hdfs.protocol.Block, r2: org.apache.hadoop.hdfs.server.namenode.INodesInPath, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
addCommittedBlocksToPending
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i1 = lengthof r2
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i1: int}
---------------------------------------
---------------------------------------
$i0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int numCommittedAllowed>
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i1: int}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i1: int, $i0: int}
---------------------------------------
---------------------------------------
i2 = $i1 - $i0
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i1: int, $i0: int}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if i2 >= 0 goto label1
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i2 = 0
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i3 = lengthof r2
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i3: int}
---------------------------------------
---------------------------------------
if i2 >= $i3 goto label3
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i3: int}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 = r2[i2]
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r3 == null goto label2
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>()
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState COMMITTED>
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r5: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
if $r4 != $r5 goto label2
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r5: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void addExpectedReplicasToPending(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r3)
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int}
---------------------------------------
---------------------------------------
i2 = i2 + 1
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label1
Live in: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[], i2: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
finalizeINodeFileUnderConstruction
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i0 := @parameter2: int
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int}
---------------------------------------
---------------------------------------
z0 := @parameter3: boolean
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean, $z1: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label1
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean, $z2: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean}
---------------------------------------
---------------------------------------
$r15 = new java.lang.AssertionError
Live in: {}
Live out: {$r15: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r15.<java.lang.AssertionError: void <init>()>()
Live in: {$r15: java.lang.AssertionError}
Live out: {$r15: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r15
Live in: {$r15: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i0: int, z0: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, z0: boolean, i0: int}
---------------------------------------
---------------------------------------
if r3 != null goto label2
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, z0: boolean, i0: int}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, z0: boolean, i0: int}
---------------------------------------
---------------------------------------
$r9 = new java.io.IOException
Live in: {r1: java.lang.String}
Live out: {$r9: java.io.IOException, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {$r9: java.io.IOException, r1: java.lang.String}
Live out: {$r9: java.io.IOException, r1: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {$r9: java.io.IOException, r1: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {$r9: java.io.IOException, r1: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot finalize file ")
Live in: {$r9: java.io.IOException, r1: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {$r9: java.io.IOException, r1: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r9: java.io.IOException, r1: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {$r9: java.io.IOException, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it is not under construction")
Live in: {$r9: java.io.IOException, $r12: java.lang.StringBuilder}
Live out: {$r9: java.io.IOException, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r9: java.io.IOException, $r13: java.lang.StringBuilder}
Live out: {$r9: java.io.IOException, $r14: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14)
Live in: {$r9: java.io.IOException, $r14: java.lang.String}
Live out: {$r9: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r9
Live in: {$r9: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodeFile: void recordModification(int)>(i0)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, z0: boolean, i0: int}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, z0: boolean}
---------------------------------------
---------------------------------------
$l1 = staticinvoke <org.apache.hadoop.util.Time: long now()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label3
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long}
---------------------------------------
---------------------------------------
$i3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int numCommittedAllowed>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int}
---------------------------------------
---------------------------------------
goto label4
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int}
---------------------------------------
---------------------------------------
$i3 = 0
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$s2 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: short getMinReplication()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int, $s2: short}
---------------------------------------
---------------------------------------
virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodeFile: void toCompleteFile(long,int,short)>($l1, $i3, $s2)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature, $l1: long, $i3: int, $s2: short}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientName()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager, r3: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void removeLease(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)>($r6, r2)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void closeFile(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r1, r2)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void checkRedundancy(org.apache.hadoop.hdfs.server.blockmanagement.BlockCollection)>(r2)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getStoredBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.Block
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.Block, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: org.apache.hadoop.hdfs.protocol.Block, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.Block, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getStoredBlock(org.apache.hadoop.hdfs.protocol.Block)>(r1)
Live in: {r1: org.apache.hadoop.hdfs.protocol.Block, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {}
---------------------------------------
=======================================
=======================================
isInSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$r7 = new java.lang.AssertionError
Live in: {}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
Live in: {$r7: java.lang.AssertionError}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r7
Live in: {$r7: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
if r1 == null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r2 == null goto label6
Live in: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("/")
Live in: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label6
Live in: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r5: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp READ>
Live in: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r5: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r4: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r5: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INode getINode(java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp)>(r2, $r4)
Live in: {r2: java.lang.String, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r4: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r5: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {$r6: org.apache.hadoop.hdfs.server.namenode.INode, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r2: java.lang.String}
---------------------------------------
---------------------------------------
if $r6 != r1 goto label6
Live in: {$r6: org.apache.hadoop.hdfs.server.namenode.INode, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
goto label8
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r2: java.lang.String}
Live out: {r2: java.lang.String, $r8: java.io.IOException}
---------------------------------------
---------------------------------------
r3 = $r8
Live in: {r2: java.lang.String, $r8: java.io.IOException}
Live out: {r2: java.lang.String, r3: java.io.IOException}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: java.lang.String, r3: java.io.IOException}
Live out: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String}
Live out: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while resolving the path : ")
Live in: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {$r10: org.slf4j.Logger, r3: java.io.IOException, r2: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {$r10: org.slf4j.Logger, r3: java.io.IOException, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r10: org.slf4j.Logger, r3: java.io.IOException, $r12: java.lang.StringBuilder}
Live out: {$r13: java.lang.String, r3: java.io.IOException, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r13, r3)
Live in: {$r13: java.lang.String, r3: java.io.IOException, $r10: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockCollection
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockCollectionId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(long)>($l0)
Live in: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockCollection
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory getFSDirectory()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r1 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INode getInode(long)>(l0)
Live in: {l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
if r1 != null goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$r3 = null
Live in: {}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
goto label2
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeFile asFile()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {}
---------------------------------------
=======================================
=======================================
commitBlockSynchronization
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
---------------------------------------
---------------------------------------
l1 := @parameter2: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l1: long, l0: long}
---------------------------------------
---------------------------------------
z0 := @parameter3: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l1: long, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
z1 := @parameter4: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l1: long, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, l1: long}
---------------------------------------
---------------------------------------
r2 := @parameter5: org.apache.hadoop.hdfs.protocol.DatanodeID[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, l1: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
---------------------------------------
---------------------------------------
r3 := @parameter6: java.lang.String[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, l1: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("commitBlockSynchronization(oldBlock=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newgenerationstamp=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newlength=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newtargets=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r18: java.util.List, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r18: java.util.List, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", closeFile=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r19: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r20: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deleteBlock=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r21: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r22: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r23: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r10: org.slf4j.Logger, $r24: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r25: java.lang.String, $r10: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r25)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r25: java.lang.String, $r10: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
---------------------------------------
---------------------------------------
$r26 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r26: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r26)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r26: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
---------------------------------------
---------------------------------------
$r27 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r27: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r27)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r27: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot commitBlockSynchronization while in safe mode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
---------------------------------------
---------------------------------------
$r28 = staticinvoke <org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r28: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getStoredBlock(org.apache.hadoop.hdfs.protocol.Block)>($r28)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, z0: boolean, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r28: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z0: boolean}
---------------------------------------
---------------------------------------
if r5 != null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z0: boolean}
---------------------------------------
---------------------------------------
if z1 == 0 goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r110 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r110: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z10 = interfaceinvoke $r110.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r110: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $z10: boolean}
---------------------------------------
---------------------------------------
if $z10 == 0 goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $z10: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r112 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r111 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r111: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r111.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r111: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r111: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block (=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r111: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r113: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r113: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, $r114: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, $r114: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, $r115: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r112: org.slf4j.Logger, $r115: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r116: java.lang.String, $r112: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r112.<org.slf4j.Logger: void debug(java.lang.String)>($r116)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r116: java.lang.String, $r112: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("commitBlockSynchronization")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r104 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r105 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r105: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r105.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r105: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r105: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block (=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r105: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r106: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r106: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, $r107: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, $r107: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, $r108: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, $r108: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, $r109: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r104.<java.io.IOException: void <init>(java.lang.String)>($r109)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException, $r109: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r104
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r104: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l2 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getGenerationStamp()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, z0: boolean}
---------------------------------------
---------------------------------------
l3 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isDeleted()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean}
---------------------------------------
---------------------------------------
$r98 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r99 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r99: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r99.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r99: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r99: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The blockCollection of ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r99: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r100: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r100: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, $r101: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null, likely because the file owning this block was deleted and the block removal is delayed")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, $r101: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, $r102: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, $r102: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, $r103: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r98.<java.io.IOException: void <init>(java.lang.String)>($r103)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException, $r103: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r98
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r98: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, l3: long, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isFileDeleted(org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
---------------------------------------
---------------------------------------
$r92 = new java.io.FileNotFoundException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String}
---------------------------------------
---------------------------------------
$r93 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String, $r93: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r93.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String, $r93: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String, $r93: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not found: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String, $r93: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String, $r94: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, r4: java.lang.String, $r94: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, $r95: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", likely due to delayed block removal")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, $r95: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, $r96: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, $r96: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, $r97: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r92.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r97)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException, $r97: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException}
---------------------------------------
---------------------------------------
throw $r92
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r92: java.io.FileNotFoundException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z4: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
---------------------------------------
---------------------------------------
$z9 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isComplete()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z9: boolean}
---------------------------------------
---------------------------------------
if $z9 == 0 goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z9: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $r29: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke $r29.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isComplete()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $r29: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long, $z5: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l0: long, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l3: long}
---------------------------------------
---------------------------------------
$r82 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r82: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z8 = interfaceinvoke $r82.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r82: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z8: boolean}
---------------------------------------
---------------------------------------
if $z8 == 0 goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z8: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r84 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r83 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r83: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r83.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r83: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r83: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected block (=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r83: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r85: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r85: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r86: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") since the file (=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r86: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r87: java.lang.StringBuilder, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r88 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getLocalName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r87: java.lang.StringBuilder, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r88: java.lang.String, $r87: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r88: java.lang.String, $r87: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r89: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not under construction")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r89: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r90: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r84: org.slf4j.Logger, $r90: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r91: java.lang.String, $r84: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r84.<org.slf4j.Logger: void debug(java.lang.String)>($r91)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r91: java.lang.String, $r84: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("commitBlockSynchronization")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r118 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, l2: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke r118.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature getUnderConstructionFeature()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, $r30: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
l4 = virtualinvoke $r30.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: long getBlockRecoveryId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, $r30: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
$l5 = virtualinvoke r118.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $l5: long}
---------------------------------------
---------------------------------------
$l6 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $l5: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $l5: long, $l6: long}
---------------------------------------
---------------------------------------
$b7 = $l5 cmp $l6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $l5: long, $l6: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $b7: byte}
---------------------------------------
---------------------------------------
if $b7 == 0 goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $b7: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
$z11 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $z11: boolean}
---------------------------------------
---------------------------------------
goto label11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $z11: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $z11: boolean}
---------------------------------------
---------------------------------------
$z11 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $z11: boolean}
---------------------------------------
---------------------------------------
z12 = $z11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z1: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], $z11: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], z1: boolean}
---------------------------------------
---------------------------------------
$b8 = l4 cmp l0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], z1: boolean, $b8: byte}
---------------------------------------
---------------------------------------
if $b8 == 0 goto label12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], z1: boolean, $b8: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], z1: boolean}
---------------------------------------
---------------------------------------
$r73 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long}
---------------------------------------
---------------------------------------
$r74 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long, $r74: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r74.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long, $r74: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long, $r74: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The recovery id ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long, $r74: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long, $r75: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, l0: long, $r75: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, $r76: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not match current recovery id ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, $r76: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, $r77: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, l4: long, $r77: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r78: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for block ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r78: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r79: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r79: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, $r80: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, $r80: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, $r81: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r73.<java.io.IOException: void <init>(java.lang.String)>($r81)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException, $r81: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r73
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r73: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[], z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l3: long, l2: long, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
r119 = staticinvoke <org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r119: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
$r71 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo removeLastBlock(org.apache.hadoop.hdfs.protocol.Block)>(r119)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r119: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
if $r71 == null goto label13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r71: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z13 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z13: boolean}
---------------------------------------
---------------------------------------
goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z13: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z13: boolean}
---------------------------------------
---------------------------------------
$z13 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z13: boolean}
---------------------------------------
---------------------------------------
z14 = $z13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z13: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z14: boolean}
---------------------------------------
---------------------------------------
if z14 == 0 goto label15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z14: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r72 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r72: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r72.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r72: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
goto label24
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
if z12 != 0 goto label17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: void setGenerationStamp(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: void setNumBytes(long)>(l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
$r31 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r31: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r33 = newarray (java.lang.Object)[4]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r33[0] = r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r33[1] = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, $r34: java.lang.Long}
---------------------------------------
---------------------------------------
$r33[2] = $r34
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, $r34: java.lang.Long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, $r35: java.lang.Long}
---------------------------------------
---------------------------------------
$r33[3] = $r35
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, $r35: java.lang.Long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r120 = virtualinvoke $r32.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] getDatanodeStorageInfos(org.apache.hadoop.hdfs.protocol.DatanodeID[],java.lang.String[],java.lang.String,java.lang.Object[])>(r2, r3, "src=%s, oldBlock=%s, newgenerationstamp=%d, newlength=%d", $r33)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l2: long, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.lang.String[], $r33: java.lang.Object[], $r32: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long}
---------------------------------------
---------------------------------------
if z0 == 0 goto label22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long}
---------------------------------------
---------------------------------------
if r120 == null goto label22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long}
---------------------------------------
---------------------------------------
i13 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long}
---------------------------------------
---------------------------------------
$i9 = lengthof r120
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long, $i9: int}
---------------------------------------
---------------------------------------
if i13 >= $i9 goto label22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long, $i9: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
---------------------------------------
---------------------------------------
$r67 = r120[i13]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r67: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo}
---------------------------------------
---------------------------------------
if $r67 == null goto label21
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r67: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
---------------------------------------
---------------------------------------
if z12 == 0 goto label19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
---------------------------------------
---------------------------------------
$r70 = r120[i13]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r70: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo}
---------------------------------------
---------------------------------------
virtualinvoke $r70.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo$AddBlockResult addBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.protocol.Block)>(r118, r118)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r70: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
---------------------------------------
---------------------------------------
goto label21
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
---------------------------------------
---------------------------------------
$r68 = new org.apache.hadoop.hdfs.protocol.Block
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r68: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
specialinvoke $r68.<org.apache.hadoop.hdfs.protocol.Block: void <init>(org.apache.hadoop.hdfs.protocol.Block)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r68: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r68: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
r7 = $r68
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, $r68: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
$z7 = virtualinvoke r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isStriped()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $z7: boolean}
---------------------------------------
---------------------------------------
if $z7 == 0 goto label20
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $z7: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
$l10 = virtualinvoke r7.<org.apache.hadoop.hdfs.protocol.Block: long getBlockId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $l10: long}
---------------------------------------
---------------------------------------
$l11 = (long) i13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $l10: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $l10: long, $l11: long}
---------------------------------------
---------------------------------------
$l12 = $l10 + $l11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $l10: long, $l11: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $l12: long}
---------------------------------------
---------------------------------------
virtualinvoke r7.<org.apache.hadoop.hdfs.protocol.Block: void setBlockId(long)>($l12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $l12: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
$r69 = r120[i13]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $r69: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo}
---------------------------------------
---------------------------------------
virtualinvoke $r69.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo$AddBlockResult addBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.protocol.Block)>(r5, r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int, r7: org.apache.hadoop.hdfs.protocol.Block, $r69: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
---------------------------------------
---------------------------------------
i13 = i13 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, i13: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long}
---------------------------------------
---------------------------------------
goto label18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i13: int, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, z12: boolean, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, l0: long, r4: java.lang.String, z0: boolean, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, l2: long, l3: long}
---------------------------------------
---------------------------------------
if z12 == 0 goto label23
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
---------------------------------------
---------------------------------------
virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: void convertLastBlockToUC(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[])>(r118, r120)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
goto label24
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: void convertLastBlockToUC(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[])>(r5, r120)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
---------------------------------------
---------------------------------------
if z0 == 0 goto label24
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
---------------------------------------
---------------------------------------
$r65 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], l2: long, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r65: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, l2: long, l3: long, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
$r66 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r65: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager, l2: long, l3: long, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r66: org.apache.hadoop.hdfs.protocol.Block, l2: long, l3: long, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r65: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r65.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void markBlockReplicasAsCorrupt(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,long,long,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[])>($r66, r5, l2, l3, r120)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r66: org.apache.hadoop.hdfs.protocol.Block, l2: long, l3: long, r120: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r65: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
if z0 == 0 goto label26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
if z12 == 0 goto label25
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void closeFileCommitBlocks(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r4, r6, r118)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$z6 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isBlockInLatestSnapshot(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 != 0 goto label27
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $z6: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r64 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r64: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r64.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r64: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
goto label27
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void closeFileCommitBlocks(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r4, r6, r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
goto label27
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r36 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r36: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: void persistBlocks(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,boolean)>($r36, r4, r6, 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r36: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r121 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r121: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r121.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void successfulBlockRecovery(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r121: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("commitBlockSynchronization")
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label31
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r117 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r117: java.lang.Throwable}
---------------------------------------
---------------------------------------
r8 = $r117
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r117: java.lang.Throwable}
Live out: {r8: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("commitBlockSynchronization")
Live in: {r8: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r8
Live in: {r8: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r37 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, $r37: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r37.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean, $r37: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label34
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String}
---------------------------------------
---------------------------------------
$r45 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r44 = new java.lang.StringBuilder
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r44.<java.lang.StringBuilder: void <init>()>()
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r44: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r44: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("commitBlockSynchronization(oldBlock=")
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r44: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r46: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r46: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", file=")
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, $r47: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, $r48: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, z12: boolean, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, r4: java.lang.String, $r48: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, z12: boolean}
---------------------------------------
---------------------------------------
if z12 == 0 goto label32
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long, z12: boolean}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, l0: long}
---------------------------------------
---------------------------------------
$r61 = new java.lang.StringBuilder
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r61: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r61: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r61: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newBlock=")
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r61: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r62: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r118)
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, r118: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r62: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, $r63: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r122 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, $r63: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r122: java.lang.String, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label33
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r122: java.lang.String, $r49: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r122: java.lang.String, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r50 = new java.lang.StringBuilder
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long, $r50: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long, $r50: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long, $r50: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newgenerationstamp=")
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long, $r50: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long, $r51: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, l0: long, $r51: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, $r52: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r122 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r49: java.lang.StringBuilder, $r52: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r122: java.lang.String, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r53 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122)
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r122: java.lang.String, $r49: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r53: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newlength=")
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r53: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r54: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], l1: long, $r54: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], $r55: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newtargets=")
Live in: {$r45: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[], $r55: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, $r56: java.lang.StringBuilder, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
---------------------------------------
---------------------------------------
$r57 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2)
Live in: {$r45: org.slf4j.Logger, $r56: java.lang.StringBuilder, r2: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
Live out: {$r45: org.slf4j.Logger, $r57: java.util.List, $r56: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57)
Live in: {$r45: org.slf4j.Logger, $r57: java.util.List, $r56: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, $r58: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") successful")
Live in: {$r45: org.slf4j.Logger, $r58: java.lang.StringBuilder}
Live out: {$r45: org.slf4j.Logger, $r59: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r45: org.slf4j.Logger, $r59: java.lang.StringBuilder}
Live out: {$r60: java.lang.String, $r45: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r45.<org.slf4j.Logger: void info(java.lang.String)>($r60)
Live in: {$r60: java.lang.String, $r45: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
goto label35
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r39 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r38 = new java.lang.StringBuilder
Live in: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
Live in: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r38: java.lang.StringBuilder}
Live out: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("commitBlockSynchronization(")
Live in: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r38: java.lang.StringBuilder}
Live out: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {$r39: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r40: java.lang.StringBuilder}
Live out: {$r39: org.slf4j.Logger, $r41: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") successful")
Live in: {$r39: org.slf4j.Logger, $r41: java.lang.StringBuilder}
Live out: {$r39: org.slf4j.Logger, $r42: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r39: org.slf4j.Logger, $r42: java.lang.StringBuilder}
Live out: {$r43: java.lang.String, $r39: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String)>($r43)
Live in: {$r43: java.lang.String, $r39: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
closeFileCommitBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INodesInPath fromINode(org.apache.hadoop.hdfs.server.namenode.INode)>(r2)
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void commitOrCompleteLastBlock(org.apache.hadoop.hdfs.server.namenode.INodeFile,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.protocol.Block)>(r2, r4, r3)
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i0 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: int findLatestSnapshot(org.apache.hadoop.hdfs.server.namenode.INode,int)>(r2, 2147483646)
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void finalizeINodeFileUnderConstruction(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,int,boolean)>(r1, r2, i0, 0)
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
renewLease
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot renew lease for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: void renewLease(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("renewLease")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("renewLease")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getListing
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: byte[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: byte[]}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: byte[]}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: byte[], $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: byte[], $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: byte[]}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[]}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[], $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[], $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[]}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[], z0: boolean}
---------------------------------------
---------------------------------------
r11 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirStatAndListingOp: org.apache.hadoop.hdfs.protocol.DirectoryListing getListingInt(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,byte[],boolean)>($r8, r3, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: byte[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r11: org.apache.hadoop.hdfs.protocol.DirectoryListing}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listStatus")
Live in: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "listStatus", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listStatus")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "listStatus", r1)
Live in: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing}
---------------------------------------
---------------------------------------
return r11
Live in: {r11: org.apache.hadoop.hdfs.protocol.DirectoryListing}
Live out: {}
---------------------------------------
=======================================
=======================================
registerDatanode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void registerDatanode(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("registerDatanode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r4 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("registerDatanode")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getRegistrationID
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$r3 = staticinvoke <org.apache.hadoop.hdfs.server.common.Storage: java.lang.String getRegistrationID(org.apache.hadoop.hdfs.server.common.StorageInfo)>($r2)
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$r3: java.lang.String}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
handleHeartbeat
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.protocol.StorageReport[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
---------------------------------------
---------------------------------------
l0 := @parameter2: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[]}
---------------------------------------
---------------------------------------
l1 := @parameter3: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], l1: long}
---------------------------------------
---------------------------------------
i2 := @parameter4: int
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], l1: long, l0: long}
---------------------------------------
---------------------------------------
i3 := @parameter5: int
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], l1: long, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long}
---------------------------------------
---------------------------------------
i4 := @parameter6: int
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int}
---------------------------------------
---------------------------------------
r3 := @parameter7: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
z0 := @parameter8: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int}
---------------------------------------
---------------------------------------
r4 := @parameter9: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
r5 := @parameter10: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], i3: int, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i3: int}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i3: int}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i3: int, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$i6 = virtualinvoke $r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int getMaxReplicationStreams()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i3: int, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $i6: int, i3: int}
---------------------------------------
---------------------------------------
i5 = $i6 - i3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $i6: int, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getBlockPoolId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r13: java.lang.String, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r6 = virtualinvoke $r12.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[] handleHeartbeat(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,org.apache.hadoop.hdfs.server.protocol.StorageReport[],java.lang.String,long,long,int,int,int,org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary,org.apache.hadoop.hdfs.server.protocol.SlowPeerReports,org.apache.hadoop.hdfs.server.protocol.SlowDiskReports)>(r1, r2, $r13, l0, l1, i2, i5, i4, r3, r4, r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r13: java.lang.String, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r4: org.apache.hadoop.hdfs.server.protocol.SlowPeerReports, r5: org.apache.hadoop.hdfs.server.protocol.SlowDiskReports, $r12: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
---------------------------------------
---------------------------------------
l8 = 0L
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
---------------------------------------
---------------------------------------
$r21 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, $r21: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
l8 = virtualinvoke $r21.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long requestBlockReportLeaseId(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, $r21: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[]}
---------------------------------------
---------------------------------------
$r14 = new org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r15: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r16 = interfaceinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r15: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r16: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r16: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r17: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r17: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r17: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r18: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$l7 = virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSImage: long getCorrectLastAppliedOrWrittenTxId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r17: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $r18: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r17: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $l7: long}
---------------------------------------
---------------------------------------
specialinvoke $r14.<org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat: void <init>(org.apache.hadoop.ha.HAServiceProtocol$HAServiceState,long)>($r17, $l7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r17: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState, $l7: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat}
---------------------------------------
---------------------------------------
r7 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], $r14: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r7: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat}
---------------------------------------
---------------------------------------
$r19 = new org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l8: long, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r7: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r7: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, l8: long}
---------------------------------------
---------------------------------------
$r20 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r7: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, l8: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r7: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r20: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, l8: long}
---------------------------------------
---------------------------------------
specialinvoke $r19.<org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse: void <init>(org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[],org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat,org.apache.hadoop.hdfs.protocol.RollingUpgradeStatus,long)>(r6, r7, $r20, l8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse, r6: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[], r7: org.apache.hadoop.hdfs.server.protocol.NNHAStatusHeartbeat, $r20: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, l8: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse}
---------------------------------------
---------------------------------------
r8 = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse}
Live out: {r8: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("handleHeartbeat")
Live in: {r8: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse}
---------------------------------------
---------------------------------------
return r8
Live in: {r8: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse}
Live out: {}
---------------------------------------
---------------------------------------
$r22 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
---------------------------------------
---------------------------------------
r9 = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
Live out: {r9: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("handleHeartbeat")
Live in: {r9: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r9
Live in: {r9: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
handleLifeline
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.protocol.StorageReport[]
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter2: long
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
l1 := @parameter3: long
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
i2 := @parameter4: int
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int}
---------------------------------------
---------------------------------------
i3 := @parameter5: int
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i3: int}
---------------------------------------
---------------------------------------
i4 := @parameter6: int
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i3: int}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i3: int, i4: int}
---------------------------------------
---------------------------------------
r3 := @parameter7: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i3: int, i4: int}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int, i3: int}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int, i3: int}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int, i3: int, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$i6 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int getMaxReplicationStreams()>()
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int, i3: int, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int, $i6: int, i3: int}
---------------------------------------
---------------------------------------
i5 = $i6 - i3
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, i4: int, $i6: int, i3: int}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getBlockPoolId()>()
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r7: java.lang.String, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void handleLifeline(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,org.apache.hadoop.hdfs.server.protocol.StorageReport[],java.lang.String,long,long,int,int,int,org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary)>(r1, r2, $r7, l0, l1, i2, i5, i4, r3)
Live in: {r1: org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.StorageReport[], $r7: java.lang.String, l0: long, l1: long, i2: int, i5: int, i4: int, r3: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
nameNodeHasResourcesAvailable
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasResourcesAvailable>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
checkAvailableResources
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l1 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker nnResourceChecker>
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = 1
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
$z1 = 0
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "nnResourceChecker not initialized")
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker nnResourceChecker>
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker: boolean hasAvailableDiskSpace()>()
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasResourcesAvailable> = $z0
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {l1: long}
---------------------------------------
---------------------------------------
$l0 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {l1: long}
Live out: {$l0: long, l1: long}
---------------------------------------
---------------------------------------
l2 = $l0 - l1
Live in: {$l0: long, l1: long}
Live out: {l2: long}
---------------------------------------
---------------------------------------
$r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics getNameNodeMetrics()>()
Live in: {l2: long}
Live out: {l2: long, $r3: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics: void addResourceCheckTime(long)>(l2)
Live in: {l2: long, $r3: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
closeFile
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.lang.AssertionError
Live in: {}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
Live in: {$r7: java.lang.AssertionError}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r7
Live in: {$r7: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logCloseFile(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r1, r2)
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: java.lang.String, $r4: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>()
Live in: {r1: java.lang.String, $r4: org.slf4j.Logger, r2: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: java.lang.String, $r4: org.slf4j.Logger, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
---------------------------------------
---------------------------------------
$i0 = lengthof $r5
Live in: {r1: java.lang.String, $r4: org.slf4j.Logger, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[]}
Live out: {r1: java.lang.String, $r4: org.slf4j.Logger, $i0: int}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Live in: {r1: java.lang.String, $r4: org.slf4j.Logger, $i0: int}
Live out: {r1: java.lang.String, $r6: java.lang.Integer, $r4: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("closeFile: {} with {} blocks is persisted to the file system", r1, $r6)
Live in: {r1: java.lang.String, $r6: java.lang.Integer, $r4: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getFSImage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {}
---------------------------------------
=======================================
=======================================
getEditLog
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
=======================================
=======================================
getMissingBlocksCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getMissingBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getMissingReplOneBlocksCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getMissingReplOneBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getExpiredHeartbeats
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: int getExpiredHeartbeats()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getTransactionsSinceLastCheckpoint
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: long getLastAppliedOrWrittenTxId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.NNStorage: long getMostRecentCheckpointTxId()>()
Live in: {$l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 - $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
return $l2
Live in: {$l2: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTransactionsSinceLastLogRoll
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInStandbyState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isSegmentOpenWithoutLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return 0L
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: long getLastWrittenTxIdWithoutLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: long getCurSegmentTxIdWithoutLock()>()
Live in: {$l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 - $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
$l3 = $l2 + 1L
Live in: {$l2: long}
Live out: {$l3: long}
---------------------------------------
---------------------------------------
return $l3
Live in: {$l3: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCorrectTransactionsSinceLastLogRoll
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInStandbyState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isSegmentOpen()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return 0L
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: long getLastWrittenTxId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: long getCurSegmentTxId()>()
Live in: {$l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 - $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
$l3 = $l2 + 1L
Live in: {$l2: long}
Live out: {$l3: long}
---------------------------------------
---------------------------------------
return $l3
Live in: {$l3: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getLastWrittenTransactionId
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: long getLastWrittenTxIdWithoutLock()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getLastCheckpointTime
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.NNStorage: long getMostRecentCheckpointTime()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getStats
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
r1 = interfaceinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long[] getStats()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getLowRedundancyBlocks()>()
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
---------------------------------------
---------------------------------------
r1[3] = $l0
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCorruptReplicaBlocks()>()
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long}
---------------------------------------
---------------------------------------
r1[4] = $l1
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingBlocksCount()>()
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long}
---------------------------------------
---------------------------------------
r1[5] = $l2
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingReplOneBlocksCount()>()
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l3: long}
---------------------------------------
---------------------------------------
r1[6] = $l3
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l3: long}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getBytesInFuture()>()
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l4: long}
---------------------------------------
---------------------------------------
r1[7] = $l4
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l4: long}
Live out: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: long[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: long[], $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l5 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPendingDeletionBlocksCount()>()
Live in: {r1: long[], $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: long[], $l5: long}
---------------------------------------
---------------------------------------
r1[8] = $l5
Live in: {r1: long[], $l5: long}
Live out: {r1: long[]}
---------------------------------------
---------------------------------------
return r1
Live in: {r1: long[]}
Live out: {}
---------------------------------------
=======================================
=======================================
getReplicatedBlockStats
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = new org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getLowRedundancyReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCorruptReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingReplicationOneBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBytesInFutureReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getPendingDeletionReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getHighestPriorityLowRedundancyReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long, $l6: long}
---------------------------------------
---------------------------------------
$r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long, $l6: long}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long, $r2: java.lang.Long}
---------------------------------------
---------------------------------------
specialinvoke $r1.<org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats: void <init>(long,long,long,long,long,long,java.lang.Long)>($l0, $l1, $l2, $l3, $l4, $l5, $r2)
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long, $r2: java.lang.Long}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ReplicatedBlockStats}
Live out: {}
---------------------------------------
=======================================
=======================================
getECBlockGroupStats
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = new org.apache.hadoop.hdfs.protocol.ECBlockGroupStats
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getLowRedundancyECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCorruptECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBytesInFutureECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getPendingDeletionECBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getHighestPriorityLowRedundancyECBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long}
---------------------------------------
---------------------------------------
$r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $l5: long}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $r2: java.lang.Long}
---------------------------------------
---------------------------------------
specialinvoke $r1.<org.apache.hadoop.hdfs.protocol.ECBlockGroupStats: void <init>(long,long,long,long,long,java.lang.Long)>($l0, $l1, $l2, $l3, $l4, $r2)
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats, $l0: long, $l1: long, $l2: long, $l3: long, $l4: long, $r2: java.lang.Long}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.protocol.ECBlockGroupStats}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCapacityTotal()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityTotalGB
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCapacityTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
$i1 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: int roundBytesToGB(long)>($l0)
Live in: {$l0: long}
Live out: {$i1: int}
---------------------------------------
---------------------------------------
$f0 = (float) $i1
Live in: {$i1: int}
Live out: {$f0: float}
---------------------------------------
---------------------------------------
return $f0
Live in: {$f0: float}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityUsed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCapacityUsed()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityUsedGB
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCapacityUsed()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
$i1 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: int roundBytesToGB(long)>($l0)
Live in: {$l0: long}
Live out: {$i1: int}
---------------------------------------
---------------------------------------
$f0 = (float) $i1
Live in: {$i1: int}
Live out: {$f0: float}
---------------------------------------
---------------------------------------
return $f0
Live in: {$f0: float}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityRemaining
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCapacityRemaining()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getProvidedCapacityTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getProvidedCapacity()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityRemainingGB
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCapacityRemaining()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
$i1 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: int roundBytesToGB(long)>($l0)
Live in: {$l0: long}
Live out: {$i1: int}
---------------------------------------
---------------------------------------
$f0 = (float) $i1
Live in: {$i1: int}
Live out: {$f0: float}
---------------------------------------
---------------------------------------
return $f0
Live in: {$f0: float}
Live out: {}
---------------------------------------
=======================================
=======================================
getCapacityUsedNonDFS
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCapacityUsedNonDFS()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotalLoad
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: int getXceiverCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumSnapshottableDirs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: int getNumSnapshottableDirs()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumSnapshots
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: int getNumSnapshots()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getSnapshotStats
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r2.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getNumSnapshottableDirs()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i0: int}
---------------------------------------
---------------------------------------
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i0: int}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.Integer}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SnapshottableDirectories", $r3)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.Integer}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getNumSnapshots()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, $i1: int}
---------------------------------------
---------------------------------------
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Live in: {r1: java.util.HashMap, $i1: int}
Live out: {r1: java.util.HashMap, $r5: java.lang.Integer}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Snapshots", $r5)
Live in: {r1: java.util.HashMap, $r5: java.lang.Integer}
Live out: {r1: java.util.HashMap}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r7: java.lang.String}
---------------------------------------
---------------------------------------
return $r7
Live in: {$r7: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumEncryptionZones
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r2 = $r1.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager ezManager>
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager: int getNumEncryptionZones()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getFsLockQueueLength
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: int getQueueLength()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumberOfDatanodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getDatanodeListForReport(org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.List}
---------------------------------------
---------------------------------------
i0 = interfaceinvoke $r5.<java.util.List: int size()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.List}
Live out: {i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getNumberOfDatanodes")
Live in: {i0: int, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {i0: int}
---------------------------------------
---------------------------------------
return i0
Live in: {i0: int}
Live out: {}
---------------------------------------
---------------------------------------
$r6 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getNumberOfDatanodes")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
datanodeReport
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
r2 = "datanodeReport"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getDatanodeListForReport(org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke r5.<java.util.List: int size()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List, $i0: int}
---------------------------------------
---------------------------------------
r3 = newarray (org.apache.hadoop.hdfs.protocol.DatanodeInfo)[$i0]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List, $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List}
---------------------------------------
---------------------------------------
i3 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
$i1 = lengthof r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $i1: int}
---------------------------------------
---------------------------------------
if i3 >= $i1 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
$r10 = new org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
$r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder, $r11: java.lang.Object}
---------------------------------------
---------------------------------------
$r12 = (org.apache.hadoop.hdfs.protocol.DatanodeInfo) $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder, $r11: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r12: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r10.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder setFrom(org.apache.hadoop.hdfs.protocol.DatanodeInfo)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r12: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r10: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder: org.apache.hadoop.hdfs.protocol.DatanodeInfo build()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r13: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
---------------------------------------
---------------------------------------
r3[i3] = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
$r15 = r3[i3]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
---------------------------------------
---------------------------------------
$r16 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r16: java.lang.Object}
---------------------------------------
---------------------------------------
$r17 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r16: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r17: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke $r17.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int numBlocks()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r17: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $i2: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.protocol.DatanodeInfo: void setNumBlocks(int)>($i2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int, $i2: int, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int}
---------------------------------------
---------------------------------------
i3 = i3 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r5: java.util.List, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, i3: int, r5: java.util.List, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>(r2)
Live in: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r18: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r18: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>(r2)
Live in: {r6: java.lang.Throwable, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r2, null)
Live in: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[]}
Live out: {}
---------------------------------------
=======================================
=======================================
getDatanodeStorageReport
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
r2 = "getDatanodeStorageReport"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getDatanodeListForReport(org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke r5.<java.util.List: int size()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List, $i0: int}
---------------------------------------
---------------------------------------
r3 = newarray (org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport)[$i0]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.util.List, $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List}
---------------------------------------
---------------------------------------
i2 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String}
---------------------------------------
---------------------------------------
$i1 = lengthof r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String, $i1: int}
---------------------------------------
---------------------------------------
if i2 >= $i1 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int}
---------------------------------------
---------------------------------------
$r11 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r11: java.lang.Object}
---------------------------------------
---------------------------------------
r6 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r11: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r12 = new org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r13 = new org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r13.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder setFrom(org.apache.hadoop.hdfs.protocol.DatanodeInfo)>(r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder: org.apache.hadoop.hdfs.protocol.DatanodeInfo build()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo$DatanodeInfoBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.protocol.StorageReport[] getStorageReports()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r16: org.apache.hadoop.hdfs.server.protocol.StorageReport[]}
---------------------------------------
---------------------------------------
specialinvoke $r12.<org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport: void <init>(org.apache.hadoop.hdfs.protocol.DatanodeInfo,org.apache.hadoop.hdfs.server.protocol.StorageReport[])>($r15, $r16)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport, $r15: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r16: org.apache.hadoop.hdfs.server.protocol.StorageReport[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport}
---------------------------------------
---------------------------------------
r3[i2] = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int, $r12: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int}
---------------------------------------
---------------------------------------
i2 = i2 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, i2: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String}
---------------------------------------
---------------------------------------
goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r5: java.util.List, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getDatanodeStorageReport")
Live in: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
Live out: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getDatanodeStorageReport")
Live in: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r7: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r2, null)
Live in: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[], r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[]}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.hdfs.server.protocol.DatanodeStorageReport[]}
Live out: {}
---------------------------------------
=======================================
=======================================
saveNamespace
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l1 := @parameter1: long
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
r1 = "saveNamespace"
Live in: {l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label2
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
---------------------------------------
---------------------------------------
$r7 = new java.io.IOException
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Safe mode should be turned ON in order to create namespace image.")
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.io.IOException}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r7
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.io.IOException}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
z2 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSImage: boolean saveNamespace(long,long,org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(l0, l1, r0)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, l1: long, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>(r1)
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpUnlock()>()
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r8
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>(r1)
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpUnlock()>()
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
if z2 == 0 goto label7
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("New namespace image has been created")
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r1, null)
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean}
---------------------------------------
---------------------------------------
return z2
Live in: {z2: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
restoreFailedStorage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getFailedStorageCommand(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r2)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpLock()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("check")
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $z0: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
z2 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.NNStorage: boolean getRestoreFailedStorage()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true")
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.NNStorage: void setRestoreFailedStorage(boolean)>(z2)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r2)
Live in: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpUnlock()>()
Live in: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r10
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r2)
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpUnlock()>()
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r2, null)
Live in: {z2: boolean, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean}
---------------------------------------
---------------------------------------
return z2
Live in: {z2: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getStartTime
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = new java.util.Date
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.Date, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long startTime>
Live in: {$r1: java.util.Date, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.Date, $l0: long}
---------------------------------------
---------------------------------------
specialinvoke $r1.<java.util.Date: void <init>(long)>($l0)
Live in: {$r1: java.util.Date, $l0: long}
Live out: {$r1: java.util.Date}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.util.Date}
Live out: {}
---------------------------------------
=======================================
=======================================
finalizeUpgrade
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "finalizeUpgrade"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isHaEnabled()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage, $z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$z1 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean inActiveState()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage, $z1: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
goto label3
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSImage: void finalizeUpgrade(boolean)>($z2)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpUnlock()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 := @caughtexception
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r5
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>(r1)
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void cpUnlock()>()
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r1, null)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
refreshNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "refreshNodes"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory UNCHECKED>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r2)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r5 = new org.apache.hadoop.hdfs.HdfsConfiguration
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.HdfsConfiguration, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
specialinvoke $r5.<org.apache.hadoop.hdfs.HdfsConfiguration: void <init>()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.HdfsConfiguration, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.HdfsConfiguration, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void refreshNodes(org.apache.hadoop.conf.Configuration)>($r5)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.HdfsConfiguration, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r1, null)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setBalancerBandwidth
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "setBalancerBandwidth"
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r2)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r1)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void setBalancerBandwidth(long)>(l0)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, $r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r1, null)
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction, $r3: java.lang.String}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction, $r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction SAFEMODE_GET>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction, $r4: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
if r1 == $r4 goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction, $r4: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$1: int[] $SwitchMap$org$apache$hadoop$hdfs$protocol$HdfsConstants$SafeModeAction>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r5: int[], r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction: int ordinal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r5: int[], r1: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r5: int[], $i0: int}
---------------------------------------
---------------------------------------
$i1 = $r5[$i0]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r5: int[], $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $i1: int}
---------------------------------------
---------------------------------------
tableswitch($i1)
{
    case 1: goto label1;
    case 2: goto label2;
    case 3: goto label3;
    default: goto label4;
}
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void leaveSafeMode(boolean)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void enterSafeMode(boolean)>(0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void leaveSafeMode(boolean)>(1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r6: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String)>("Unexpected safe mode action")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r6: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
if z1 != 0 goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, r2, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlocksTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int getTotalBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
$l1 = (long) $i0
Live in: {$i0: int}
Live out: {$l1: long}
---------------------------------------
---------------------------------------
return $l1
Live in: {$l1: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumFilesUnderConstruction
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: long countPath()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumActiveClients
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: int countLease()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
$l1 = (long) $i0
Live in: {$i0: int}
Live out: {$l1: long}
---------------------------------------
---------------------------------------
return $l1
Live in: {$l1: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCompleteBlocksTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l2 = 0L
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
---------------------------------------
---------------------------------------
l3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: long getNumUnderConstructionBlocks()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.LeaseManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBlocksTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long, l3: long}
---------------------------------------
---------------------------------------
l0 = $l1 - l3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long, l3: long}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getCompleteBlocksTotal")
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long}
---------------------------------------
---------------------------------------
return l0
Live in: {l0: long}
Live out: {}
---------------------------------------
---------------------------------------
$r3 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getCompleteBlocksTotal")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
isInSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInManualOrResourceLowSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isInSafeMode()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {$z2: boolean}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
return $z2
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
isInStartupSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInManualOrResourceLowSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isInSafeMode()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label1
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {$z2: boolean}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
return $z2
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
enterSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void stopSecretManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
z1 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isOpenForWrite()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, z1: boolean}
---------------------------------------
---------------------------------------
if z1 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSyncAll()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
if z0 != 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, z0: boolean}
---------------------------------------
---------------------------------------
goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, z0: boolean}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setManualAndResourceLowSafeMode(boolean,boolean)>($z2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r3 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STATE* Safe mode is ON.\n")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r3: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getSafeModeTip()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r6: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r6: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.String, $r4: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.String, $r4: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("enterSafeMode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label7
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("enterSafeMode")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
leaveSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("STATE* Safe mode is already OFF")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("leaveSafeMode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean leaveSafeMode(boolean)>(z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setManualAndResourceLowSafeMode(boolean,boolean)>(0, 0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void startSecretManagerIfNecessary()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("leaveSafeMode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label6
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r4 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("leaveSafeMode")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getSafeModeTip
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "Use \"hdfs dfsadmin -safemode leave\" to turn safe mode off."
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = r0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
entermonitor r0
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean resourceLowSafeMode>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = new java.lang.StringBuilder
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resources are low on NN. Please add or free up more resourcesthen turn off safe mode manually. NOTE:  If you turn off safe mode before adding resources, the NN will immediately return to safe mode. ")
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.StringBuilder}
Live out: {$r14: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
exitmonitor r2
Live in: {$r14: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r14: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return $r14
Live in: {$r14: java.lang.String}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean manualSafeMode>
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label5
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It was turned on manually. ")
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.StringBuilder}
Live out: {$r10: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
exitmonitor r2
Live in: {$r10: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r10: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return $r10
Live in: {$r10: java.lang.String}
Live out: {}
---------------------------------------
---------------------------------------
exitmonitor r2
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r15
Live in: {r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
exitmonitor r2
Live in: {r3: java.lang.Throwable, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: java.lang.String getSafeModeTip()>()
Live in: {$r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r6: java.lang.String}
---------------------------------------
---------------------------------------
return $r6
Live in: {$r6: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
isInManualOrResourceLowSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean manualSafeMode>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean resourceLowSafeMode>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = 1
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
goto label3
Live in: {$z2: boolean}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
$z2 = 0
Live in: {}
Live out: {$z2: boolean}
---------------------------------------
---------------------------------------
return $z2
Live in: {$z2: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
setManualAndResourceLowSafeMode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
z1 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean manualSafeMode> = z0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean resourceLowSafeMode> = z1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
rollEditLog
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>("rollEditLog")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory JOURNAL>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory JOURNAL>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Log not rolled")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = staticinvoke <org.apache.hadoop.ipc.Server: boolean isRpcInvocation()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r5 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Roll Edit Log from ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = staticinvoke <org.apache.hadoop.ipc.Server: java.lang.String getRemoteAddress()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r8: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r8: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.String, $r6: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.String, $r6: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i0: int, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r12 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature rollEditLog(int)>($i0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i0: int, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("rollEditLog")
Live in: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("rollEditLog")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "rollEditLog", null)
Live in: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature}
---------------------------------------
---------------------------------------
return r12
Live in: {r12: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature}
Live out: {}
---------------------------------------
=======================================
=======================================
startCheckpoint
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory CHECKPOINT>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory CHECKPOINT>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Checkpoint not started")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start checkpoint for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: java.lang.String getAddress()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r11: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r11: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.slf4j.Logger, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r13: java.lang.String, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r13: java.lang.String, $r9: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r14: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r14: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int, $r14: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand startCheckpoint(org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration,org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration,int)>(r1, r2, $i0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int, $r14: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand}
---------------------------------------
---------------------------------------
r4 = r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand}
Live out: {r4: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startCheckpoint")
Live in: {r4: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand}
---------------------------------------
---------------------------------------
return r4
Live in: {r4: org.apache.hadoop.hdfs.server.protocol.NamenodeCommand}
Live out: {}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startCheckpoint")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
processIncrementalBlockReport
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.DatanodeID
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, r2: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, r2: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, r2: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, r2: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, r2: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processIncrementalBlockReport(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.DatanodeID, r2: org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks, $r4: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("processIncrementalBlockReport")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r5 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("processIncrementalBlockReport")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
endCheckpoint
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory CHECKPOINT>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory CHECKPOINT>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Checkpoint not ended")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End checkpoint for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: java.lang.String getAddress()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, $r9: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, $r9: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r7: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r11: java.lang.String, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r11: java.lang.String, $r7: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r12: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSImage: void endCheckpoint(org.apache.hadoop.hdfs.server.namenode.CheckpointSignature)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature, $r12: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("endCheckpoint")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("endCheckpoint")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
createFsOwnerPermissions
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.fs.permission.FsPermission
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.fs.permission.FsPermission, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.fs.permission.PermissionStatus
Live in: {r1: org.apache.hadoop.fs.permission.FsPermission, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsPermission}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation fsOwner>
Live in: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsPermission}
Live out: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsPermission, $r3: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>()
Live in: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsPermission, $r3: org.apache.hadoop.security.UserGroupInformation}
Live out: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, $r4: java.lang.String, r1: org.apache.hadoop.fs.permission.FsPermission, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String supergroup>
Live in: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, $r4: java.lang.String, r1: org.apache.hadoop.fs.permission.FsPermission, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, $r4: java.lang.String, $r5: java.lang.String, r1: org.apache.hadoop.fs.permission.FsPermission}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.fs.permission.PermissionStatus: void <init>(java.lang.String,java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>($r4, $r5, r1)
Live in: {$r2: org.apache.hadoop.fs.permission.PermissionStatus, $r4: java.lang.String, $r5: java.lang.String, r1: org.apache.hadoop.fs.permission.FsPermission}
Live out: {$r2: org.apache.hadoop.fs.permission.PermissionStatus}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.fs.permission.PermissionStatus}
Live out: {}
---------------------------------------
=======================================
=======================================
checkSuperuserPrivilege
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker: void checkSuperuserPrivilege()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkSuperuserPrivilege
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker: void checkSuperuserPrivilege()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkFsObjectLimit
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxFsObjects>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
---------------------------------------
---------------------------------------
$b1 = $l0 cmp 0L
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $b1: byte}
---------------------------------------
---------------------------------------
if $b1 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $b1: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxFsObjects>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: long totalInodes()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $l3: long}
---------------------------------------
---------------------------------------
$l4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBlocksTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $l3: long, $l4: long}
---------------------------------------
---------------------------------------
$l5 = $l3 + $l4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $l3: long, $l4: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $l5: long}
---------------------------------------
---------------------------------------
$b6 = $l2 cmp $l5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l2: long, $l5: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $b6: byte}
---------------------------------------
---------------------------------------
if $b6 > 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $b6: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = new java.lang.StringBuilder
Live in: {$r2: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
Live in: {$r2: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.StringBuilder}
Live out: {$r2: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exceeded the configured number of objects ")
Live in: {$r2: java.io.IOException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: java.lang.StringBuilder}
Live out: {$r2: java.io.IOException, $r4: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxFsObjects>
Live in: {$r2: java.io.IOException, $r4: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: java.io.IOException, $l7: long, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7)
Live in: {$r2: java.io.IOException, $l7: long, $r4: java.lang.StringBuilder}
Live out: {$r2: java.io.IOException, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the filesystem.")
Live in: {$r2: java.io.IOException, $r5: java.lang.StringBuilder}
Live out: {$r2: java.io.IOException, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r2: java.io.IOException, $r6: java.lang.StringBuilder}
Live out: {$r2: java.io.IOException, $r7: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7)
Live in: {$r2: java.io.IOException, $r7: java.lang.String}
Live out: {$r2: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r2
Live in: {$r2: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getMaxObjects
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long maxFsObjects>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getFilesTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: long totalInodes()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPendingReplicationBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPendingReconstructionBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPendingReconstructionBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPendingReconstructionBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getUnderReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getLowRedundancyBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getLowRedundancyBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getLowRedundancyBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCorruptReplicaBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getCorruptReplicaBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getScheduledReplicationBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getScheduledReplicationBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPendingDeletionBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPendingDeletionBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getLowRedundancyReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getLowRedundancyBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCorruptReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getCorruptBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getMissingReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getMissingBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getMissingReplicationOneBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getMissingReplicationOneBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getHighestPriorityLowRedundancyReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getHighestPriorityReplicatedBlockCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getHighestPriorityLowRedundancyECBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getHighestPriorityECBlockCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getBytesInFutureReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getBytesInFutureReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPendingDeletionReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPendingDeletionReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotalReplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getTotalReplicatedBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getLowRedundancyECBlockGroups
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getLowRedundancyECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCorruptECBlockGroups
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getCorruptECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getMissingECBlockGroups
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getMissingECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getBytesInFutureECBlockGroups
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getBytesInFutureECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPendingDeletionECBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPendingDeletionECBlocks()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotalECBlockGroups
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getTotalECBlockGroups()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockDeletionStartTime
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long startTime>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, $r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getStartupDelayBlockDeletionInMs()>()
Live in: {$l0: long, $r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 + $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
return $l2
Live in: {$l2: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getExcessBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getExcessBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumTimedOutPendingReconstructions
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getNumTimedOutPendingReconstructions()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPostponedMisreplicatedBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getPostponedMisreplicatedBlocksCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPendingDataNodeMessageCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int getPendingDataNodeMessageCount()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getHAState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r2 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: java.lang.String toString()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {$r3: java.lang.String}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getMillisSinceLastLoadedEdits
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInStandbyState()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {$l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: long getLastLoadTimeMs()>()
Live in: {$l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 - $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
return $l2
Live in: {$l2: long}
Live out: {}
---------------------------------------
---------------------------------------
return 0L
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockCapacity
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int getCapacity()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
if $r1 != null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = null
Live in: {}
Live out: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
goto label2
Live in: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
$r3 = interfaceinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.ha.HAContext: org.apache.hadoop.hdfs.server.namenode.ha.HAState getState()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.ha.HAState: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getServiceState()>()
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.ha.HAState}
Live out: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
---------------------------------------
---------------------------------------
return $r4
Live in: {$r4: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState}
Live out: {}
---------------------------------------
=======================================
=======================================
getFSState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = "safeMode"
Live in: {}
Live out: {$r1: java.lang.String}
---------------------------------------
---------------------------------------
goto label2
Live in: {$r1: java.lang.String}
Live out: {$r1: java.lang.String}
---------------------------------------
---------------------------------------
$r1 = "Operational"
Live in: {}
Live out: {$r1: java.lang.String}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
registerMBean
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = new javax.management.StandardMBean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
specialinvoke $r3.<javax.management.StandardMBean: void <init>(java.lang.Object,java.lang.Class)>(r0, class "Lorg/apache/hadoop/hdfs/server/namenode/metrics/FSNamesystemMBean;")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
r12 = $r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
$r4 = new javax.management.StandardMBean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, $r4: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
specialinvoke $r4.<javax.management.StandardMBean: void <init>(java.lang.Object,java.lang.Class)>(r0, class "Lorg/apache/hadoop/hdfs/server/namenode/metrics/ReplicatedBlocksMBean;")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, $r4: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, $r4: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, $r4: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, r1: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
$r5 = new javax.management.StandardMBean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, r1: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, r1: javax.management.StandardMBean, $r5: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
specialinvoke $r5.<javax.management.StandardMBean: void <init>(java.lang.Object,java.lang.Class)>(r0, class "Lorg/apache/hadoop/hdfs/server/namenode/metrics/ECBlockGroupsMBean;")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, r1: javax.management.StandardMBean, $r5: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, r1: javax.management.StandardMBean, $r5: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
r2 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r12: javax.management.StandardMBean, r1: javax.management.StandardMBean, $r5: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, r1: javax.management.StandardMBean, r12: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)>("NameNode", "FSNamesystemState", r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, r1: javax.management.StandardMBean, r12: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, r1: javax.management.StandardMBean, $r6: javax.management.ObjectName}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namesystemMBeanName> = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, r1: javax.management.StandardMBean, $r6: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, r1: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)>("NameNode", "ReplicatedBlocksState", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, r1: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, $r7: javax.management.ObjectName}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName replicatedBlocksMBeanName> = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean, $r7: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean}
---------------------------------------
---------------------------------------
$r8 = staticinvoke <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)>("NameNode", "ECBlockGroupsState", r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: javax.management.StandardMBean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: javax.management.ObjectName}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName ecBlockGroupsMBeanName> = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: javax.management.ObjectName}
Live out: {}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {}
Live out: {$r10: javax.management.NotCompliantMBeanException}
---------------------------------------
---------------------------------------
r13 = $r10
Live in: {$r10: javax.management.NotCompliantMBeanException}
Live out: {r13: javax.management.NotCompliantMBeanException}
---------------------------------------
---------------------------------------
$r11 = new java.lang.RuntimeException
Live in: {r13: javax.management.NotCompliantMBeanException}
Live out: {$r11: java.lang.RuntimeException, r13: javax.management.NotCompliantMBeanException}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Bad MBean setup", r13)
Live in: {$r11: java.lang.RuntimeException, r13: javax.management.NotCompliantMBeanException}
Live out: {$r11: java.lang.RuntimeException}
---------------------------------------
---------------------------------------
throw $r11
Live in: {$r11: java.lang.RuntimeException}
Live out: {}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {}
Live out: {$r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Registered FSNamesystemState, ReplicatedBlocksState and ECBlockGroupsState MBeans.")
Live in: {$r9: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
shutdown
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
if $r2 == null goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: void shutdown()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namesystemMBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: javax.management.ObjectName}
---------------------------------------
---------------------------------------
if $r3 == null goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namesystemMBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: javax.management.ObjectName}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)>($r16)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namesystemMBeanName> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName replicatedBlocksMBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: javax.management.ObjectName}
---------------------------------------
---------------------------------------
if $r4 == null goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName replicatedBlocksMBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: javax.management.ObjectName}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName replicatedBlocksMBeanName> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName ecBlockGroupsMBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: javax.management.ObjectName}
---------------------------------------
---------------------------------------
if $r5 == null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName ecBlockGroupsMBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: javax.management.ObjectName}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName ecBlockGroupsMBeanName> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namenodeMXBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: javax.management.ObjectName}
---------------------------------------
---------------------------------------
if $r6 == null goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namenodeMXBeanName>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: javax.management.ObjectName}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: javax.management.ObjectName}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namenodeMXBeanName> = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
if $r7 == null goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void shutdown()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
if $r8 == null goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void shutdown()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
if $r9 == null goto label11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension provider>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r10: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.crypto.key.KeyProviderCryptoExtension: void close()>()
Live in: {$r10: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {}
---------------------------------------
---------------------------------------
goto label11
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {}
Live out: {$r18: java.io.IOException}
---------------------------------------
---------------------------------------
r1 = $r18
Live in: {$r18: java.io.IOException}
Live out: {r1: java.io.IOException}
---------------------------------------
---------------------------------------
$r19 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: java.io.IOException}
Live out: {r1: java.io.IOException, $r19: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to close provider.", r1)
Live in: {r1: java.io.IOException, $r19: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumLiveDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: int getNumLiveDataNodes()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumDeadDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: int getNumDeadDataNodes()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumDecomLiveDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(r1, null, 0)
Live in: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
i1 = 0
Live in: {r1: java.util.ArrayList}
Live out: {i1: int, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {i1: int, r1: java.util.ArrayList}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label4
Live in: {i1: int, r2: java.util.Iterator, $z0: boolean}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.Iterator, i1: int}
Live out: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r7
Live in: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
Live out: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
---------------------------------------
---------------------------------------
$i0 = i1
Live in: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
Live out: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isDecommissioned()>()
Live in: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r2: java.util.Iterator, $i0: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r2: java.util.Iterator, $i0: int, $z1: boolean}
Live out: {r2: java.util.Iterator, $i0: int}
---------------------------------------
---------------------------------------
$b2 = 1
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
$b2 = 0
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
i1 = $i0 + $b2
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
return i1
Live in: {i1: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumDecomDeadDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(null, r1, 0)
Live in: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
i1 = 0
Live in: {r1: java.util.ArrayList}
Live out: {i1: int, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {i1: int, r1: java.util.ArrayList}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label4
Live in: {i1: int, r2: java.util.Iterator, $z0: boolean}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.Iterator, i1: int}
Live out: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r7
Live in: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
Live out: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
---------------------------------------
---------------------------------------
$i0 = i1
Live in: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
Live out: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isDecommissioned()>()
Live in: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r2: java.util.Iterator, $i0: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r2: java.util.Iterator, $i0: int, $z1: boolean}
Live out: {r2: java.util.Iterator, $i0: int}
---------------------------------------
---------------------------------------
$b2 = 1
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
$b2 = 0
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
i1 = $i0 + $b2
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
return i1
Live in: {i1: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getVolumeFailuresTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(r1, null, 0)
Live in: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
i1 = 0
Live in: {r1: java.util.ArrayList}
Live out: {i1: int, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {i1: int, r1: java.util.ArrayList}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {i1: int, r2: java.util.Iterator, $z0: boolean}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.Iterator, i1: int}
Live out: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r7
Live in: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
Live out: {r2: java.util.Iterator, i1: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getVolumeFailures()>()
Live in: {r2: java.util.Iterator, i1: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r2: java.util.Iterator, i1: int, $i0: int}
---------------------------------------
---------------------------------------
i1 = i1 + $i0
Live in: {r2: java.util.Iterator, i1: int, $i0: int}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
return i1
Live in: {i1: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getEstimatedCapacityLostTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.ArrayList, $r7: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(r1, null, 0)
Live in: {r1: java.util.ArrayList, $r7: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
l1 = 0L
Live in: {r1: java.util.ArrayList}
Live out: {l1: long, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {l1: long, r1: java.util.ArrayList}
Live out: {l1: long, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
Live in: {l1: long, r2: java.util.Iterator}
Live out: {l1: long, r2: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {l1: long, r2: java.util.Iterator, $z0: boolean}
Live out: {l1: long, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Live in: {l1: long, r2: java.util.Iterator}
Live out: {l1: long, r2: java.util.Iterator, $r8: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r8
Live in: {l1: long, r2: java.util.Iterator, $r8: java.lang.Object}
Live out: {l1: long, r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary getVolumeFailureSummary()>()
Live in: {l1: long, r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {l1: long, r2: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
if r4 == null goto label2
Live in: {l1: long, r2: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {l1: long, r2: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary: long getEstimatedCapacityLostTotal()>()
Live in: {r2: java.util.Iterator, l1: long, r4: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r2: java.util.Iterator, l1: long, $l0: long}
---------------------------------------
---------------------------------------
l1 = l1 + $l0
Live in: {r2: java.util.Iterator, l1: long, $l0: long}
Live out: {l1: long, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {l1: long, r2: java.util.Iterator}
Live out: {l1: long, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
return l1
Live in: {l1: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumDecommissioningDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getDecommissioningNodes()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$r3: java.util.List}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke $r3.<java.util.List: int size()>()
Live in: {$r3: java.util.List}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumStaleDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: int getNumStaleNodes()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumStaleStorages
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: int getNumStaleStorages()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getTopUserOpCounts
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.TopConf topConf>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
---------------------------------------
---------------------------------------
$z0 = $r5.<org.apache.hadoop.hdfs.server.namenode.top.TopConf: boolean isEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.top.TopConf}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r6 = new java.util.Date
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.Date}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.util.Date: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.Date}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.Date}
---------------------------------------
---------------------------------------
r1 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.Date}
Live out: {r1: java.util.Date, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics topMetrics>
Live in: {r1: java.util.Date, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.Date, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics: java.util.List getTopWindows()>()
Live in: {r1: java.util.Date, $r7: org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics}
Live out: {r2: java.util.List, r1: java.util.Date}
---------------------------------------
---------------------------------------
$r8 = new java.util.TreeMap
Live in: {r2: java.util.List, r1: java.util.Date}
Live out: {r2: java.util.List, r1: java.util.Date, $r8: java.util.TreeMap}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.util.TreeMap: void <init>()>()
Live in: {r2: java.util.List, r1: java.util.Date, $r8: java.util.TreeMap}
Live out: {r2: java.util.List, r1: java.util.Date, $r8: java.util.TreeMap}
---------------------------------------
---------------------------------------
r3 = $r8
Live in: {r2: java.util.List, r1: java.util.Date, $r8: java.util.TreeMap}
Live out: {r3: java.util.TreeMap, r1: java.util.Date, r2: java.util.List}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("windows", r2)
Live in: {r3: java.util.TreeMap, r1: java.util.Date, r2: java.util.List}
Live out: {r3: java.util.TreeMap, r1: java.util.Date}
---------------------------------------
---------------------------------------
$r10 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: java.lang.String dateToIso8601String(java.util.Date)>(r1)
Live in: {r3: java.util.TreeMap, r1: java.util.Date}
Live out: {r3: java.util.TreeMap, $r10: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("timestamp", $r10)
Live in: {r3: java.util.TreeMap, $r10: java.lang.String}
Live out: {r3: java.util.TreeMap}
---------------------------------------
---------------------------------------
$r12 = staticinvoke <org.apache.hadoop.hdfs.web.JsonUtil: java.lang.String toJsonString(java.lang.Object)>(r3)
Live in: {r3: java.util.TreeMap}
Live out: {$r12: java.lang.String}
---------------------------------------
---------------------------------------
return $r12
Live in: {$r12: java.lang.String}
Live out: {}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {}
Live out: {$r13: java.io.IOException}
---------------------------------------
---------------------------------------
r4 = $r13
Live in: {$r13: java.io.IOException}
Live out: {r4: java.io.IOException}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r4: java.io.IOException}
Live out: {r4: java.io.IOException, $r14: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to fetch TopUser metrics", r4)
Live in: {r4: java.io.IOException, $r14: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
nextGenerationStamp
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label1
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.lang.AssertionError
Live in: {}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
Live in: {$r4: java.lang.AssertionError}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r4
Live in: {$r4: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot get next generation stamp")
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long nextGenerationStamp(boolean)>(z0)
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label2
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logLegacyGenerationStamp(long)>(l0)
Live in: {l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {l0: long}
---------------------------------------
---------------------------------------
goto label3
Live in: {l0: long}
Live out: {l0: long}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logGenerationStamp(long)>(l0)
Live in: {l0: long, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {l0: long}
---------------------------------------
---------------------------------------
return l0
Live in: {l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
nextBlockId
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.BlockType
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$r4 = new java.lang.AssertionError
Live in: {}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
Live in: {$r4: java.lang.AssertionError}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r4
Live in: {$r4: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot get next block ID")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
l0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long nextBlockId(org.apache.hadoop.hdfs.protocol.BlockType)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.BlockType, $r2: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logAllocateBlockId(long)>(l0)
Live in: {l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {l0: long}
---------------------------------------
---------------------------------------
return l0
Live in: {l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
isFileDeleted
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.INodeFile
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z5: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.lang.AssertionError
Live in: {}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.AssertionError: void <init>()>()
Live in: {$r7: java.lang.AssertionError}
Live out: {$r7: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r7
Live in: {$r7: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r3: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: long getId()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r3: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INode getInode(long)>($l0)
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $l0: long, $r3: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
if $r4 != null goto label2
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r8 = r1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r9 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.INodeDirectory getParent()>()
Live in: {r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
---------------------------------------
---------------------------------------
if r9 != null goto label4
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.namenode.INode: byte[] getLocalNameBytes()>()
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, $r5: byte[]}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r9.<org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.INode getChild(byte[],int)>($r5, 2147483646)
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, $r5: byte[]}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r2: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
if r2 == null goto label5
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r2: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r2: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.INode: boolean equals(java.lang.Object)>(r8)
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r2: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label6
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z1: boolean}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r9.<org.apache.hadoop.hdfs.server.namenode.INodeDirectory: boolean isRoot()>()
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label7
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
goto label8
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r8 = r9
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory}
---------------------------------------
---------------------------------------
r9 = virtualinvoke r9.<org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.INodeDirectory getParent()>()
Live in: {r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
---------------------------------------
---------------------------------------
goto label3
Live in: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
Live out: {r9: org.apache.hadoop.hdfs.server.namenode.INodeDirectory, r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, r8: org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isWithSnapshot()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label9
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.snapshot.FileWithSnapshotFeature getFileWithSnapshotFeature()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {$r6: org.apache.hadoop.hdfs.server.namenode.snapshot.FileWithSnapshotFeature}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.snapshot.FileWithSnapshotFeature: boolean isCurrentFileDeleted()>()
Live in: {$r6: org.apache.hadoop.hdfs.server.namenode.snapshot.FileWithSnapshotFeature}
Live out: {$z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label9
Live in: {$z4: boolean}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkUCBlock
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $z4: boolean}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r37 = new java.lang.AssertionError
Live in: {}
Live out: {$r37: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r37.<java.lang.AssertionError: void <init>()>()
Live in: {$r37: java.lang.AssertionError}
Live out: {$r37: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r37
Live in: {$r37: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r5 = new java.lang.StringBuilder
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get a new generation stamp and an access token for block ")
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r5: java.lang.StringBuilder}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r8)
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r8: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = staticinvoke <org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock)>(r1)
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getStoredBlock(org.apache.hadoop.hdfs.protocol.Block)>($r9)
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r3 != null goto label2
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r32 = new java.io.IOException
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r32: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r33 = new java.lang.StringBuilder
Live in: {$r32: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r32: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
Live in: {$r32: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r33: java.lang.StringBuilder}
Live out: {$r32: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {$r32: java.io.IOException, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r33: java.lang.StringBuilder}
Live out: {$r32: java.io.IOException, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.")
Live in: {$r32: java.io.IOException, $r34: java.lang.StringBuilder}
Live out: {$r32: java.io.IOException, $r35: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r32: java.io.IOException, $r35: java.lang.StringBuilder}
Live out: {$r32: java.io.IOException, $r36: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r36)
Live in: {$r32: java.io.IOException, $r36: java.lang.String}
Live out: {$r32: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r32
Live in: {$r32: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState UNDER_CONSTRUCTION>
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r11: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
---------------------------------------
---------------------------------------
if $r10 == $r11 goto label3
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r11: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r21 = new java.io.IOException
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r22 = new java.lang.StringBuilder
Live in: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
Live in: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r22: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected BlockUCState: ")
Live in: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r22: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r23: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ")
Live in: {$r21: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r24: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, $r25: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>()
Live in: {$r21: java.io.IOException, $r25: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {$r21: java.io.IOException, $r26: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26)
Live in: {$r21: java.io.IOException, $r26: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r25: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but not ")
Live in: {$r21: java.io.IOException, $r27: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState UNDER_CONSTRUCTION>
Live in: {$r21: java.io.IOException, $r28: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, $r29: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29)
Live in: {$r21: java.io.IOException, $r29: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState, $r28: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r21: java.io.IOException, $r30: java.lang.StringBuilder}
Live out: {$r21: java.io.IOException, $r31: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r31)
Live in: {$r21: java.io.IOException, $r31: java.lang.String}
Live out: {$r21: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r21
Live in: {$r21: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r3)
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r4 == null goto label4
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>()
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label4
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isFileDeleted(org.apache.hadoop.hdfs.server.namenode.INodeFile)>(r4)
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label5
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z2: boolean}
Live out: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r38 = new java.io.IOException
Live in: {r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
$r39 = new java.lang.StringBuilder
Live in: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r39: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
Live in: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r39: java.lang.StringBuilder}
Live out: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r39: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The file ")
Live in: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r39: java.lang.StringBuilder}
Live out: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {$r38: java.io.IOException, r3: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r40: java.lang.StringBuilder}
Live out: {$r38: java.io.IOException, $r41: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" belonged to does not exist or it is not under construction.")
Live in: {$r38: java.io.IOException, $r41: java.lang.StringBuilder}
Live out: {$r38: java.io.IOException, $r42: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r38: java.io.IOException, $r42: java.lang.StringBuilder}
Live out: {$r38: java.io.IOException, $r43: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>($r43)
Live in: {$r38: java.io.IOException, $r43: java.lang.String}
Live out: {$r38: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r38
Live in: {$r38: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
if r2 == null goto label6
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature getFileUnderConstructionFeature()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r19: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature: java.lang.String getClientName()>()
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r19: org.apache.hadoop.hdfs.server.namenode.FileUnderConstructionFeature}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r20: java.lang.String}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r20)
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r20: java.lang.String}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 != 0 goto label7
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z3: boolean}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r12 = new org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException
Live in: {r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r13 = new java.lang.StringBuilder
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r13: java.lang.StringBuilder}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease mismatch: ")
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r13: java.lang.StringBuilder}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r14: java.lang.StringBuilder}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is accessed by a non lease holder ")
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, r2: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r17: java.lang.StringBuilder}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r18: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException: void <init>(java.lang.String)>($r18)
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException, $r18: java.lang.String}
Live out: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
---------------------------------------
---------------------------------------
throw $r12
Live in: {$r12: org.apache.hadoop.hdfs.server.namenode.LeaseExpiredException}
Live out: {}
---------------------------------------
---------------------------------------
return r4
Live in: {r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {}
---------------------------------------
=======================================
=======================================
reportBadBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.LocatedBlock[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
i2 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$i0 = lengthof r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $i0: int}
---------------------------------------
---------------------------------------
if i2 >= $i0 goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$r8 = r1[i2]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r8: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r8.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.ExtendedBlock getBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], $r8: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r9 = r1[i2]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r9: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r9.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] getLocations()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r9: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
$r10 = r1[i2]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r10: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r10.<org.apache.hadoop.hdfs.protocol.LocatedBlock: java.lang.String[] getStorageIDs()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r10: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
i3 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[]}
---------------------------------------
---------------------------------------
$i1 = lengthof r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[], $i1: int}
---------------------------------------
---------------------------------------
if i3 >= $i1 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[], $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r12: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r11 = r3[i3]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r12: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r12: org.slf4j.Logger, $r11: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r11.<org.apache.hadoop.hdfs.protocol.DatanodeInfo: java.lang.String getXferAddr()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r12: org.slf4j.Logger, $r11: org.apache.hadoop.hdfs.protocol.DatanodeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r13: java.lang.String, $r12: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("*DIR* reportBadBlocks for block: {} on datanode: {}", r2, $r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r13: java.lang.String, $r12: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r14 = r3[i3]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
if r4 != null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r18 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r18: java.lang.String, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r18: java.lang.String, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r18: java.lang.String, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r18 = r4[i3]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r18: java.lang.String, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void findAndMarkBlockAsCorrupt(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.DatanodeInfo,java.lang.String,java.lang.String)>(r2, $r14, $r18, "client machine reported it")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int, $r14: org.apache.hadoop.hdfs.protocol.DatanodeInfo, $r18: java.lang.String, $r15: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int}
---------------------------------------
---------------------------------------
i3 = i3 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], r4: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, i3: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[]}
---------------------------------------
---------------------------------------
goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int, r3: org.apache.hadoop.hdfs.protocol.DatanodeInfo[], i3: int, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: java.lang.String[]}
---------------------------------------
---------------------------------------
i2 = i2 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[], i2: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i2: int, r1: org.apache.hadoop.hdfs.protocol.LocatedBlock[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("reportBadBlocks")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label10
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("reportBadBlocks")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
bumpBlockGenerationStamp
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile checkUCBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,java.lang.String)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r9: org.apache.hadoop.hdfs.protocol.Block, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isLegacyBlock(org.apache.hadoop.hdfs.protocol.Block)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $r9: org.apache.hadoop.hdfs.protocol.Block, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z0: boolean}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long nextGenerationStamp(boolean)>($z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: void setGenerationStamp(long)>($l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, $l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.protocol.LocatedBlock newLocatedBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[],long)>(r1, $r10, null, -1L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode: org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r11: org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void setBlockToken(org.apache.hadoop.hdfs.protocol.LocatedBlock,org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode)>(r3, $r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r11: org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("bumpBlockGenerationStamp")
Live in: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("bumpBlockGenerationStamp")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.hdfs.protocol.LocatedBlock}
Live out: {}
---------------------------------------
=======================================
=======================================
updatePipeline
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter3: org.apache.hadoop.hdfs.protocol.DatanodeID[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
---------------------------------------
---------------------------------------
r5 := @parameter4: java.lang.String[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[]}
---------------------------------------
---------------------------------------
z0 := @parameter5: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePipeline(")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r11: org.apache.hadoop.hdfs.protocol.Block, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r11: org.apache.hadoop.hdfs.protocol.Block, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newGS=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getGenerationStamp()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $l0: long, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $l0: long, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newLength=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $l1: long, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $l1: long, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newNodes=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r18: java.util.List, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r18: java.util.List, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", client=")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r19: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r20: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r21: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r9: org.slf4j.Logger, $r22: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r23: java.lang.String, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>($r23)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r23: java.lang.String, $r9: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
$r24 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r24: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r24)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $r24: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Pipeline not updated")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getBlockId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $l2: long}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getBlockId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $l2: long, $l3: long}
---------------------------------------
---------------------------------------
$b4 = $l2 cmp $l3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $l2: long, $l3: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $b4: byte}
---------------------------------------
---------------------------------------
if $b4 == 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean, $b4: byte}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
---------------------------------------
---------------------------------------
$r36 = new java.lang.AssertionError
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r37 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r37: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r37: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r37: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r38: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r39: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r39: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has different block identifier")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, $r40: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, $r41: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, $r41: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, $r42: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>($r42)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError, $r42: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r36
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.AssertionError}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void updatePipelineInternal(java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.DatanodeID[],java.lang.String[],boolean)>(r1, r2, r3, r4, r5, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("updatePipeline")
Live in: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r43 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r43
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("updatePipeline")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r25: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r25.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r25: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r27 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r26 = new java.lang.StringBuilder
Live in: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
Live in: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r26: java.lang.StringBuilder}
Live out: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePipeline(")
Live in: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r26: java.lang.StringBuilder}
Live out: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r28: java.lang.StringBuilder, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock()>()
Live in: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r28: java.lang.StringBuilder, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r29: org.apache.hadoop.hdfs.protocol.Block, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29)
Live in: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r29: org.apache.hadoop.hdfs.protocol.Block, $r28: java.lang.StringBuilder}
Live out: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ")
Live in: {$r27: org.slf4j.Logger, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r30: java.lang.StringBuilder}
Live out: {$r27: org.slf4j.Logger, $r31: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock()>()
Live in: {$r27: org.slf4j.Logger, $r31: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$r27: org.slf4j.Logger, $r32: org.apache.hadoop.hdfs.protocol.Block, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32)
Live in: {$r27: org.slf4j.Logger, $r32: org.apache.hadoop.hdfs.protocol.Block, $r31: java.lang.StringBuilder}
Live out: {$r27: org.slf4j.Logger, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") success")
Live in: {$r27: org.slf4j.Logger, $r33: java.lang.StringBuilder}
Live out: {$r27: org.slf4j.Logger, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r27: org.slf4j.Logger, $r34: java.lang.StringBuilder}
Live out: {$r35: java.lang.String, $r27: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String)>($r35)
Live in: {$r35: java.lang.String, $r27: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
updatePipelineInternal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.protocol.ExtendedBlock
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r4 := @parameter3: org.apache.hadoop.hdfs.protocol.DatanodeID[]
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
---------------------------------------
---------------------------------------
r5 := @parameter4: java.lang.String[]
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
---------------------------------------
---------------------------------------
z0 := @parameter5: boolean
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 != 0 goto label1
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z4: boolean}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r38 = new java.lang.AssertionError
Live in: {}
Live out: {$r38: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r38.<java.lang.AssertionError: void <init>()>()
Live in: {$r38: java.lang.AssertionError}
Live out: {$r38: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r38
Live in: {$r38: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
r6 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile checkUCBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,java.lang.String)>(r2, r1)
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r5: java.lang.String[], r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[]}
Live out: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[]}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>()
Live in: {r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[]}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$z2 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label2
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $z2: boolean}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isComplete()>()
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label2
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $z3: boolean}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$r37 = new java.lang.AssertionError
Live in: {}
Live out: {$r37: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r37.<java.lang.AssertionError: void <init>()>()
Live in: {$r37: java.lang.AssertionError}
Live out: {$r37: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r37
Live in: {$r37: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getGenerationStamp()>()
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l0: long}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getGenerationStamp()>()
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l0: long}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l0: long, $l1: long}
---------------------------------------
---------------------------------------
$b2 = $l0 cmp $l1
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l0: long, $l1: long}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $b2: byte}
---------------------------------------
---------------------------------------
if $b2 > 0 goto label3
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $b2: byte}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$r28 = new java.lang.StringBuilder
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r28: java.lang.StringBuilder}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update ")
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r28: java.lang.StringBuilder}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r29: java.lang.StringBuilder}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the new block ")
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r30: java.lang.StringBuilder}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r31: java.lang.StringBuilder}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r32: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a larger generation stamp than the last block ")
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r32: java.lang.StringBuilder}
Live out: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8)
Live in: {r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, $r33: java.lang.StringBuilder}
Live out: {$r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r34: java.lang.StringBuilder}
Live out: {r39: java.lang.String}
---------------------------------------
---------------------------------------
$r35 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r39: java.lang.String}
Live out: {r39: java.lang.String, $r35: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r35.<org.slf4j.Logger: void warn(java.lang.String)>(r39)
Live in: {r39: java.lang.String, $r35: org.slf4j.Logger}
Live out: {r39: java.lang.String}
---------------------------------------
---------------------------------------
$r36 = new java.io.IOException
Live in: {r39: java.lang.String}
Live out: {$r36: java.io.IOException, r39: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>(r39)
Live in: {$r36: java.io.IOException, r39: java.lang.String}
Live out: {$r36: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r36
Live in: {$r36: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>()
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l3: long}
---------------------------------------
---------------------------------------
$l4 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>()
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l3: long}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l3: long, $l4: long}
---------------------------------------
---------------------------------------
$b5 = $l3 cmp $l4
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $l3: long, $l4: long}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $b5: byte}
---------------------------------------
---------------------------------------
if $b5 >= 0 goto label4
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String, $b5: byte}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = new java.lang.StringBuilder
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r16: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update ")
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r16: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r17: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (size=")
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r18: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r19: java.lang.StringBuilder, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$l6 = virtualinvoke r2.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>()
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r19: java.lang.StringBuilder, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $l6: long, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6)
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $l6: long, $r19: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to a smaller size block ")
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r20: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r21: java.lang.StringBuilder}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (size=")
Live in: {r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r22: java.lang.StringBuilder}
Live out: {$r23: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$l7 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>()
Live in: {$r23: java.lang.StringBuilder, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {$l7: long, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7)
Live in: {$l7: long, $r23: java.lang.StringBuilder}
Live out: {$r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
Live in: {$r24: java.lang.StringBuilder}
Live out: {$r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r40 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r25: java.lang.StringBuilder}
Live out: {r40: java.lang.String}
---------------------------------------
---------------------------------------
$r26 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r40: java.lang.String}
Live out: {r40: java.lang.String, $r26: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r26.<org.slf4j.Logger: void warn(java.lang.String)>(r40)
Live in: {r40: java.lang.String, $r26: org.slf4j.Logger}
Live out: {r40: java.lang.String}
---------------------------------------
---------------------------------------
$r27 = new java.io.IOException
Live in: {r40: java.lang.String}
Live out: {$r27: java.io.IOException, r40: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>(r40)
Live in: {$r27: java.io.IOException, r40: java.lang.String}
Live out: {$r27: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r27
Live in: {$r27: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void updateLastBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.protocol.ExtendedBlock)>(r8, r3)
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r12 = newarray (java.lang.Object)[4]
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock, $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r12[0] = r7
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r12[1] = r2
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock, r2: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
---------------------------------------
---------------------------------------
$r12[2] = r3
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.ExtendedBlock}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r12[3] = r1
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager, r1: java.lang.String}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r41 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] getDatanodeStorageInfos(org.apache.hadoop.hdfs.protocol.DatanodeID[],java.lang.String[],java.lang.String,java.lang.Object[])>(r4, r5, "src=%s, oldBlock=%s, newBlock=%s, clientName=%s", $r12)
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.protocol.DatanodeID[], r5: java.lang.String[], $r12: java.lang.Object[], $r11: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r41: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature getUnderConstructionFeature()>()
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r41: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[]}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r41: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.protocol.BlockType getBlockType()>()
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r41: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r41: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r14: org.apache.hadoop.hdfs.protocol.BlockType, $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: void setExpectedLocations(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[],org.apache.hadoop.hdfs.protocol.BlockType)>(r8, r41, $r14)
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r41: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[], $r14: org.apache.hadoop.hdfs.protocol.BlockType, $r13: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature}
Live out: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {z0: boolean, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: void persistBlocks(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,boolean)>($r15, r7, r6, z0)
Live in: {$r15: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.INodeFile, z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
registerBackupNode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r4: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r5: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.NNStorage: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r5: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int, $i1: int}
---------------------------------------
---------------------------------------
if $i0 == $i1 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r10 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r11 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible namespaceIDs:  Namenode namespaceID = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r12: java.lang.StringBuilder, $r13: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r12: java.lang.StringBuilder, $r13: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r12: java.lang.StringBuilder, $r14: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.NNStorage: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r12: java.lang.StringBuilder, $r14: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i2: int, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i2: int, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r15: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole getRole()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r17: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r17: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node namespaceID = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r18: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $r19: java.lang.StringBuilder, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$i3 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $r19: java.lang.StringBuilder, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $i3: int, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $i3: int, $r19: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $r20: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $r21: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r21)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException, $r21: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole getRole()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole BACKUP>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole, $r7: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole}
---------------------------------------
---------------------------------------
if $r6 != $r7 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole, $r7: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r8: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r8: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void registerBackupNode(org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration,org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, r2: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("registerBackupNode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label5
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r22 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("registerBackupNode")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
releaseBackupNode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.NNStorage: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r6: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int, $i1: int}
---------------------------------------
---------------------------------------
if $i0 == $i1 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i0: int, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r8 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incompatible namespaceIDs:  Namenode namespaceID = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r10: java.lang.StringBuilder, $r11: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r10: java.lang.StringBuilder, $r11: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r10: java.lang.StringBuilder, $r12: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.NNStorage: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r10: java.lang.StringBuilder, $r12: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i2: int, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $i2: int, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole getRole()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r15: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r15: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$NamenodeRole, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node namespaceID = ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $r17: java.lang.StringBuilder, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
---------------------------------------
---------------------------------------
$i3 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration: int getNamespaceID()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $r17: java.lang.StringBuilder, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $i3: int, $r17: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $i3: int, $r17: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $r18: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $r19: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r19)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException, $r19: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r7: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void releaseBackupStream(org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.protocol.NamenodeRegistration, $r7: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("releaseBackupNode")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label5
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r20 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r20
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("releaseBackupNode")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
listCorruptFileBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r32 := @parameter1: java.lang.String[]
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege()>()
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i4 = 0
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int}
---------------------------------------
---------------------------------------
$r8 = new java.util.ArrayList
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r8: java.util.ArrayList}
Live out: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = $r8
Live in: {r1: java.lang.String, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r8: java.util.ArrayList}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
if r32 != null goto label01
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r30 = newarray (java.lang.String)[1]
Live in: {r2: java.util.ArrayList, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int}
Live out: {r2: java.util.ArrayList, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r30: java.lang.String[]}
---------------------------------------
---------------------------------------
$r30[0] = null
Live in: {r2: java.util.ArrayList, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r30: java.lang.String[]}
Live out: {r2: java.util.ArrayList, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r30: java.lang.String[]}
---------------------------------------
---------------------------------------
r32 = $r30
Live in: {r2: java.util.ArrayList, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, $r30: java.lang.String[]}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getMissingBlocksCount()>()
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String, $l0: long}
---------------------------------------
---------------------------------------
$b1 = $l0 cmp 0L
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String, $l0: long}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String, $b1: byte}
---------------------------------------
---------------------------------------
if $b1 != 0 goto label04
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String, $b1: byte}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, i4: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r25 = r32[0]
Live in: {r2: java.util.ArrayList, r32: java.lang.String[]}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], $r25: java.lang.String}
---------------------------------------
---------------------------------------
if $r25 != null goto label02
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], $r25: java.lang.String}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[]}
---------------------------------------
---------------------------------------
$r28 = r32[0]
Live in: {r2: java.util.ArrayList, r32: java.lang.String[]}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], $r28: java.lang.String}
---------------------------------------
---------------------------------------
$i3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getIntCookie(java.lang.String)>($r28)
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], $r28: java.lang.String}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], $i3: int}
---------------------------------------
---------------------------------------
$r29 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3)
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], $i3: int}
Live out: {r2: java.util.ArrayList, r32: java.lang.String[], $r29: java.lang.String}
---------------------------------------
---------------------------------------
r32[0] = $r29
Live in: {r2: java.util.ArrayList, r32: java.lang.String[], $r29: java.lang.String}
Live out: {r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r26 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: java.util.ArrayList}
Live out: {r2: java.util.ArrayList, $r26: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z5 = interfaceinvoke $r26.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r2: java.util.ArrayList, $r26: org.slf4j.Logger}
Live out: {r2: java.util.ArrayList, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label03
Live in: {r2: java.util.ArrayList, $z5: boolean}
Live out: {r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r27 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r2: java.util.ArrayList}
Live out: {r2: java.util.ArrayList, $r27: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String)>("there are no corrupt file blocks.")
Live in: {r2: java.util.ArrayList, $r27: org.slf4j.Logger}
Live out: {r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
return r2
Live in: {r2: java.util.ArrayList}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isPopulatingReplQueues()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
---------------------------------------
---------------------------------------
$r24 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Cannot run listCorruptFileBlocks because replication queues have not been initialized.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r24
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r12.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: java.util.Iterator getCorruptReplicaBlockIterator()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r13 = r32[0]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, r3: java.util.Iterator}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, r3: java.util.Iterator, $r13: java.lang.String}
---------------------------------------
---------------------------------------
i5 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getIntCookie(java.lang.String)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r1: java.lang.String, r3: java.util.Iterator, $r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
---------------------------------------
---------------------------------------
i6 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
---------------------------------------
---------------------------------------
if i6 >= i5 goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
---------------------------------------
---------------------------------------
$z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int, $z4: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
---------------------------------------
---------------------------------------
i6 = i6 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
---------------------------------------
---------------------------------------
goto label07
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, i6: int}
---------------------------------------
---------------------------------------
$z6 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, $z6: boolean}
---------------------------------------
---------------------------------------
if $z6 == 0 goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, $z6: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r21 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, $r21: java.lang.Object}
---------------------------------------
---------------------------------------
r33 = (org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo) $r21
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, $r21: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(r33)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String, i5: int}
---------------------------------------
---------------------------------------
i5 = i5 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], r4: org.apache.hadoop.hdfs.server.namenode.INodeFile, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String, i5: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
if r4 == null goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: java.lang.String, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: java.lang.String}
---------------------------------------
---------------------------------------
$r22 = new org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r5: java.lang.String, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
---------------------------------------
---------------------------------------
specialinvoke $r22.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo: void <init>(java.lang.String,org.apache.hadoop.hdfs.protocol.Block)>(r5, r33)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r5: java.lang.String, r33: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
---------------------------------------
---------------------------------------
virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r22)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int, $r22: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int}
---------------------------------------
---------------------------------------
i4 = i4 + 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, r1: java.lang.String, r32: java.lang.String[], i5: int, r3: java.util.Iterator, i4: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
---------------------------------------
---------------------------------------
$i2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int maxCorruptFileBlocksReturn>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, $i2: int}
---------------------------------------
---------------------------------------
if i4 < $i2 goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String, $i2: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
---------------------------------------
---------------------------------------
goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int}
---------------------------------------
---------------------------------------
goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int, r3: java.util.Iterator, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], i5: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], $r14: java.lang.String}
---------------------------------------
---------------------------------------
r32[0] = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, r32: java.lang.String[], $r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int}
---------------------------------------
---------------------------------------
$r15 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, $r15: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke $r15.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, $r15: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int}
---------------------------------------
---------------------------------------
$r17 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, i4: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int}
---------------------------------------
---------------------------------------
$r16 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list corrupt file blocks returned: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int, $r16: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int, $r18: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, i4: int, $r18: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r17: org.slf4j.Logger, $r19: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r20: java.lang.String, $r17: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String)>($r20)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r20: java.lang.String, $r17: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
r34 = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
Live out: {r34: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listCorruptFileBlocks")
Live in: {r34: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r34: java.util.ArrayList}
---------------------------------------
---------------------------------------
return r34
Live in: {r34: java.util.ArrayList}
Live out: {}
---------------------------------------
---------------------------------------
$r31 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r31: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r31
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r31: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listCorruptFileBlocks")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
getIntCookie
---------------------------------------
r0 := @parameter0: java.lang.String
Live in: {}
Live out: {r0: java.lang.String}
---------------------------------------
---------------------------------------
if r0 != null goto label1
Live in: {r0: java.lang.String}
Live out: {r0: java.lang.String}
---------------------------------------
---------------------------------------
i0 = 0
Live in: {}
Live out: {i0: int}
---------------------------------------
---------------------------------------
goto label4
Live in: {i0: int}
Live out: {i0: int}
---------------------------------------
---------------------------------------
i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0)
Live in: {r0: java.lang.String}
Live out: {i0: int}
---------------------------------------
---------------------------------------
goto label4
Live in: {i0: int}
Live out: {i0: int}
---------------------------------------
---------------------------------------
$r2 := @caughtexception
Live in: {}
Live out: {$r2: java.lang.NumberFormatException}
---------------------------------------
---------------------------------------
r1 = $r2
Live in: {$r2: java.lang.NumberFormatException}
Live out: {}
---------------------------------------
---------------------------------------
i0 = 0
Live in: {}
Live out: {i0: int}
---------------------------------------
---------------------------------------
i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0)
Live in: {i0: int}
Live out: {i1: int}
---------------------------------------
---------------------------------------
return i1
Live in: {i1: int}
Live out: {}
---------------------------------------
=======================================
=======================================
createDelegationTokenSecretManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.conf.Configuration
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager
Live in: {r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.delegation.key.update-interval", 86400000L)
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.delegation.token.max-lifetime", 604800000L)
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: long getLong(java.lang.String,long)>("dfs.namenode.delegation.token.renew-interval", 86400000L)
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, $l2: long, r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l3 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL>
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, $l2: long, r1: org.apache.hadoop.conf.Configuration, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, $l2: long, $l3: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("dfs.namenode.audit.log.token.tracking.id", 0)
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, $l2: long, $l3: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.conf.Configuration}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, $l2: long, $l3: long, $z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void <init>(long,long,long,long,boolean,org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>($l0, $l1, $l2, $l3, $z0, r0)
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, $l0: long, $l1: long, $l2: long, $l3: long, $z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
=======================================
=======================================
getDelegationTokenSecretManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
=======================================
=======================================
getDelegationToken
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.io.Text
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot issue delegation token")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$z0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isAllowedDelegationTokenOp()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r24 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Delegation Token can be issued only with kerberos or web authentication")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r24
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r10: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
if $r10 == null goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r10: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r12: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke $r12.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: boolean isRunning()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $r12: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>("trying to get DT with no secret manager running")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("getDelegationToken")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r26 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r26.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r4: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = new org.apache.hadoop.io.Text
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r4: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, $r13: org.apache.hadoop.io.Text, r4: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r13.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, $r13: org.apache.hadoop.io.Text, r4: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, $r13: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
r5 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, $r13: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r27 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r27: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r26.<org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getRealUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r27: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r27: org.apache.hadoop.io.Text, $r14: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
if $r14 == null goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r27: org.apache.hadoop.io.Text, $r14: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation, r27: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r21 = new org.apache.hadoop.io.Text
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r26.<org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getRealUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text, r26: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text, $r22: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke $r22.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text, $r22: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text, $r23: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r21.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>($r23)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text, $r23: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
r27 = $r21
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, $r21: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r27: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r1: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
$r15 = new org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r27: org.apache.hadoop.io.Text, r5: org.apache.hadoop.io.Text, r1: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r5: org.apache.hadoop.io.Text, r1: org.apache.hadoop.io.Text, r27: org.apache.hadoop.io.Text}
---------------------------------------
---------------------------------------
specialinvoke $r15.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier: void <init>(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)>(r5, r1, r27)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r5: org.apache.hadoop.io.Text, r1: org.apache.hadoop.io.Text, r27: org.apache.hadoop.io.Text}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r6 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
$r16 = new org.apache.hadoop.security.token.Token
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r16: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r16: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r16: org.apache.hadoop.security.token.Token, $r17: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
specialinvoke $r16.<org.apache.hadoop.security.token.Token: void <init>(org.apache.hadoop.security.token.TokenIdentifier,org.apache.hadoop.security.token.SecretManager)>(r6, $r17)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r16: org.apache.hadoop.security.token.Token, $r17: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r16: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
r3 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r16: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r18: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
l0 = virtualinvoke $r18.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: long getTokenExpiryTime(org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier)>(r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r18: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, l0: long}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, l0: long, $r19: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r19.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logGetDelegationToken(org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier,long)>(r6, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, l0: long, $r19: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r6.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier: java.lang.String toStringStable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r6: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.token.Token, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("getDelegationToken")
Live in: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label10
Live in: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r25 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r25
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: java.lang.Throwable}
Live out: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("getDelegationToken")
Live in: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r7: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r20.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "getDelegationToken", r2)
Live in: {r3: org.apache.hadoop.security.token.Token, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.security.token.Token}
Live out: {}
---------------------------------------
=======================================
=======================================
renewDelegationToken
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.security.token.Token
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
r2 = "renewDelegationToken"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot renew delegation token")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
$z0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isAllowedDelegationTokenOp()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
$r10 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r10: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Delegation Token can be renewed only with kerberos or web authentication")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r10: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r10: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r10: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r6: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r13 = virtualinvoke $r6.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r6: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, r13: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, r13: java.lang.String, $r7: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
l0 = virtualinvoke $r7.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: long renewToken(org.apache.hadoop.security.token.Token,java.lang.String)>(r1, r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, r13: java.lang.String, $r7: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
r14 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier decodeDelegationToken(org.apache.hadoop.security.token.Token)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r8: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logRenewDelegationToken(org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier,long)>(r14, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r8: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r15 = virtualinvoke r14.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier: java.lang.String toStringStable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r15: java.lang.String, r1: org.apache.hadoop.security.token.Token, z1: boolean}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z2: boolean, r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("renewDelegationToken")
Live in: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label7
Live in: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r12: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r16 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z1: boolean, $r12: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z1: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
r17 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier decodeDelegationToken(org.apache.hadoop.security.token.Token)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z1: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z1: boolean, r17: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r18 = virtualinvoke r17.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier: java.lang.String toStringStable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z1: boolean, r17: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z1: boolean, r18: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z1, "renewDelegationToken", r18)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z1: boolean, r18: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("renewDelegationToken")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z2, "renewDelegationToken", r15)
Live in: {l0: long, z2: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long}
---------------------------------------
---------------------------------------
return l0
Live in: {l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
cancelDelegationToken
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.security.token.Token
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
r2 = "cancelDelegationToken"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot cancel delegation token")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
$r6 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r6: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r13 = virtualinvoke $r6.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r6: org.apache.hadoop.security.UserGroupInformation}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r13: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r13: java.lang.String, $r7: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)>(r1, r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r13: java.lang.String, $r7: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r8: org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r14 = (org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier) $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, $r8: org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logCancelDelegationToken(org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier)>(r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r9: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r15 = virtualinvoke r14.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier: java.lang.String toStringStable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.security.token.Token, r14: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: java.lang.String, r1: org.apache.hadoop.security.token.Token, z0: boolean}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("cancelDelegationToken")
Live in: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z0: boolean, $r11: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r16 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.Token, z0: boolean, $r11: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z0: boolean, r1: org.apache.hadoop.security.token.Token}
---------------------------------------
---------------------------------------
r17 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier decodeDelegationToken(org.apache.hadoop.security.token.Token)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z0: boolean, r1: org.apache.hadoop.security.token.Token}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z0: boolean, r17: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r18 = virtualinvoke r17.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier: java.lang.String toStringStable()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z0: boolean, r17: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z0: boolean, r18: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "cancelDelegationToken", r18)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, z0: boolean, r18: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("cancelDelegationToken")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z1, "cancelDelegationToken", r15)
Live in: {z1: boolean, r15: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
saveSecretManagerStateCompat
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.io.DataOutputStream
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.DataOutputStream, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: java.io.DataOutputStream, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.DataOutputStream, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r1: java.io.DataOutputStream, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.DataOutputStream, r2: java.lang.String, $r3: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void saveSecretManagerStateCompat(java.io.DataOutputStream,java.lang.String)>(r1, r2)
Live in: {r1: java.io.DataOutputStream, r2: java.lang.String, $r3: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
saveSecretManagerState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState saveSecretManagerState()>()
Live in: {$r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState}
Live out: {}
---------------------------------------
=======================================
=======================================
loadSecretManagerStateCompat
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.io.DataInput
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.DataInput, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r1: java.io.DataInput, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.io.DataInput, $r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void loadSecretManagerStateCompat(java.io.DataInput)>(r1)
Live in: {r1: java.io.DataInput, $r2: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
loadSecretManagerState
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection}
Live out: {r3: java.util.List, r2: java.util.List, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager dtSecretManager>
Live in: {r3: java.util.List, r2: java.util.List, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.List, $r5: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection, r2: java.util.List}
---------------------------------------
---------------------------------------
$r4 = new org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState
Live in: {r3: java.util.List, $r5: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection, r2: java.util.List}
Live out: {$r4: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState, $r5: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection, r2: java.util.List, r3: java.util.List}
---------------------------------------
---------------------------------------
specialinvoke $r4.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState: void <init>(org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection,java.util.List,java.util.List)>(r1, r2, r3)
Live in: {$r4: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState, $r5: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager, r1: org.apache.hadoop.hdfs.server.namenode.FsImageProto$SecretManagerSection, r2: java.util.List, r3: java.util.List}
Live out: {$r4: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState, $r5: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void loadSecretManagerState(org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState)>($r4)
Live in: {$r4: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager$SecretManagerState, $r5: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
logUpdateMasterKey
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.security.token.delegation.DelegationKey
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
---------------------------------------
---------------------------------------
$r5 = new java.lang.AssertionError
Live in: {}
Live out: {$r5: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>("this should never be called while in safemode, since we stop the DT manager before entering safemode!")
Live in: {$r5: java.lang.AssertionError}
Live out: {$r5: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r5
Live in: {$r5: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
---------------------------------------
---------------------------------------
$r4 = new java.lang.AssertionError
Live in: {}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.lang.AssertionError: void <init>()>()
Live in: {$r4: java.lang.AssertionError}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r4
Live in: {$r4: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logUpdateMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.security.token.delegation.DelegationKey, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
logExpireDelegationToken
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label1
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.lang.AssertionError
Live in: {}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("this should never be called while in safemode, since we stop the DT manager before entering safemode!")
Live in: {$r4: java.lang.AssertionError}
Live out: {$r4: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r4
Live in: {$r4: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label2
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasReadLock()>()
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label2
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = new java.lang.AssertionError
Live in: {}
Live out: {$r3: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.lang.AssertionError: void <init>()>()
Live in: {$r3: java.lang.AssertionError}
Live out: {$r3: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r3
Live in: {$r3: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logCancelDelegationToken(org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier)>(r1)
Live in: {r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, $r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
logReassignLease
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r1: java.lang.String, r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled>
Live in: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean hasWriteLock()>()
Live in: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = new java.lang.AssertionError
Live in: {}
Live out: {$r5: java.lang.AssertionError}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.AssertionError: void <init>()>()
Live in: {$r5: java.lang.AssertionError}
Live out: {$r5: java.lang.AssertionError}
---------------------------------------
---------------------------------------
throw $r5
Live in: {$r5: java.lang.AssertionError}
Live out: {}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logReassignLease(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
Live in: {r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
isAllowedDelegationTokenOp
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod getConnectionAuthenticationMethod()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
$z0 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>()
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $z0: boolean}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod KERBEROS>
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $r2: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
if r1 == $r2 goto label1
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $r2: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod KERBEROS_SSL>
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $r3: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
if r1 == $r3 goto label1
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $r3: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod CERTIFICATE>
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
if r1 == $r4 goto label1
Live in: {r1: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, $r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {}
---------------------------------------
---------------------------------------
return 0
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
return 1
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getConnectionAuthenticationMethod
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {}
Live out: {r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r1.<org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod getAuthenticationMethod()>()
Live in: {r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod PROXY>
Live in: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, r1: org.apache.hadoop.security.UserGroupInformation, $r2: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
if r4 != $r2 goto label1
Live in: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, r1: org.apache.hadoop.security.UserGroupInformation, $r2: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod, r1: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r1.<org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getRealUser()>()
Live in: {r1: org.apache.hadoop.security.UserGroupInformation}
Live out: {$r3: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r3.<org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod getAuthenticationMethod()>()
Live in: {$r3: org.apache.hadoop.security.UserGroupInformation}
Live out: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
---------------------------------------
---------------------------------------
return r4
Live in: {r4: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod}
Live out: {}
---------------------------------------
=======================================
=======================================
isExternalInvocation
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$z0 = staticinvoke <org.apache.hadoop.ipc.Server: boolean isRpcInvocation()>()
Live in: {}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getRemoteUser
---------------------------------------
$r0 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {}
Live out: {$r0: org.apache.hadoop.security.UserGroupInformation}
---------------------------------------
---------------------------------------
return $r0
Live in: {$r0: org.apache.hadoop.security.UserGroupInformation}
Live out: {}
---------------------------------------
=======================================
=======================================
logFsckEvent
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.net.InetAddress
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isAuditEnabled()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r1: java.lang.String, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.security.UserGroupInformation getRemoteUser()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.net.InetAddress, r1: java.lang.String}
Live out: {$r3: org.apache.hadoop.security.UserGroupInformation, r2: java.net.InetAddress, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,org.apache.hadoop.security.UserGroupInformation,java.net.InetAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, $r3, r2, "fsck", r1, null, null)
Live in: {$r3: org.apache.hadoop.security.UserGroupInformation, r2: java.net.InetAddress, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
registerMXBean
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = staticinvoke <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)>("NameNode", "NameNodeInfo", r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: javax.management.ObjectName}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: javax.management.ObjectName namenodeMXBeanName> = $r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: javax.management.ObjectName}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getVersion
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = new java.lang.StringBuilder
Live in: {}
Live out: {$r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
Live in: {$r1: java.lang.StringBuilder}
Live out: {$r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r2 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getVersion()>()
Live in: {$r1: java.lang.StringBuilder}
Live out: {$r2: java.lang.String, $r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
Live in: {$r2: java.lang.String, $r1: java.lang.StringBuilder}
Live out: {$r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", r")
Live in: {$r3: java.lang.StringBuilder}
Live out: {$r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getRevision()>()
Live in: {$r4: java.lang.StringBuilder}
Live out: {$r5: java.lang.String, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
Live in: {$r5: java.lang.String, $r4: java.lang.StringBuilder}
Live out: {$r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r6: java.lang.StringBuilder}
Live out: {$r7: java.lang.String}
---------------------------------------
---------------------------------------
return $r7
Live in: {$r7: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getUsed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCapacityUsed()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getFree
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCapacityRemaining()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCapacityTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getProvidedCapacity
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getProvidedCapacityTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getSafemode
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return ""
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Safe mode is ON. ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: java.lang.StringBuilder}
Live out: {$r2: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getSafeModeTip()>()
Live in: {$r2: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r3: java.lang.String, $r2: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
Live in: {$r3: java.lang.String, $r2: java.lang.StringBuilder}
Live out: {$r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r4: java.lang.StringBuilder}
Live out: {$r5: java.lang.String}
---------------------------------------
---------------------------------------
return $r5
Live in: {$r5: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
isUpgradeFinalized
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: boolean isUpgradeFinalized()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getNonDfsUsedSpace
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCapacityUsedNonDFS()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPercentUsed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$f0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: float getCapacityUsedPercent()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$f0: float}
---------------------------------------
---------------------------------------
return $f0
Live in: {$f0: float}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockPoolUsedSpace
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getBlockPoolUsed()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getPercentBlockPoolUsed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$f0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: float getPercentBlockPoolUsed()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$f0: float}
---------------------------------------
---------------------------------------
return $f0
Live in: {$f0: float}
Live out: {}
---------------------------------------
=======================================
=======================================
getPercentRemaining
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$f0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: float getCapacityRemainingPercent()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$f0: float}
---------------------------------------
---------------------------------------
return $f0
Live in: {$f0: float}
Live out: {}
---------------------------------------
=======================================
=======================================
getCacheCapacity
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCacheCapacity()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCacheUsed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics datanodeStatistics>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
---------------------------------------
---------------------------------------
$l0 = interfaceinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics: long getCacheUsed()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStatistics}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotalBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBlocksTotal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumberOfMissingBlocks
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingBlocksCount()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumberOfMissingBlocksWithReplicationFactorOne
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingReplOneBlocksCount()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getThreads
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = staticinvoke <java.lang.management.ManagementFactory: java.lang.management.ThreadMXBean getThreadMXBean()>()
Live in: {}
Live out: {$r1: java.lang.management.ThreadMXBean}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke $r1.<java.lang.management.ThreadMXBean: int getThreadCount()>()
Live in: {$r1: java.lang.management.ThreadMXBean}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getLiveNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = new java.util.ArrayList
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = $r8
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(r2, null, 0)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r10: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label4
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r12
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Object}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
r5 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getInfoAddr()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r5.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("infoAddr", $r13)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.String}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getInfoSecureAddr()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.String, $r14: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r14.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("infoSecureAddr", $r15)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.String, $r14: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getXferAddr()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.String, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r16.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("xferaddr", $r17)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.String, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getLastContact(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)>(r4)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.collect.ImmutableMap$Builder, $l0: long}
---------------------------------------
---------------------------------------
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: com.google.common.collect.ImmutableMap$Builder, $l0: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Long, $r18: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r18.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("lastContact", $r19)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Long, $r18: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l1 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getDfsUsed(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)>(r4)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: com.google.common.collect.ImmutableMap$Builder, $l1: long}
---------------------------------------
---------------------------------------
$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: com.google.common.collect.ImmutableMap$Builder, $l1: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r21: java.lang.Long, $r20: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r20.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("usedSpace", $r21)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r21: java.lang.Long, $r20: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: com.google.common.collect.ImmutableMap$Builder, $r23: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r23.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates: java.lang.String toString()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: com.google.common.collect.ImmutableMap$Builder, $r23: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.lang.String, $r22: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r22.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("adminState", $r24)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r24: java.lang.String, $r22: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l2 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getNonDfsUsed()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: com.google.common.collect.ImmutableMap$Builder, $l2: long}
---------------------------------------
---------------------------------------
$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r25: com.google.common.collect.ImmutableMap$Builder, $l2: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.lang.Long, $r25: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r25.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("nonDfsUsedSpace", $r26)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.lang.Long, $r25: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l3 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getCapacity()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: com.google.common.collect.ImmutableMap$Builder, $l3: long}
---------------------------------------
---------------------------------------
$r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: com.google.common.collect.ImmutableMap$Builder, $l3: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r28: java.lang.Long, $r27: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r27.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("capacity", $r28)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r28: java.lang.Long, $r27: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$i4 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int numBlocks()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: com.google.common.collect.ImmutableMap$Builder, $i4: int}
---------------------------------------
---------------------------------------
$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r29: com.google.common.collect.ImmutableMap$Builder, $i4: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: java.lang.Integer, $r29: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r29.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("numBlocks", $r30)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r30: java.lang.Integer, $r29: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r31: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getSoftwareVersion()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r31: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.lang.String, $r31: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r33 = virtualinvoke $r31.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("version", $r32)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.lang.String, $r31: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l5 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getDfsUsed()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: com.google.common.collect.ImmutableMap$Builder, $l5: long}
---------------------------------------
---------------------------------------
$r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r33: com.google.common.collect.ImmutableMap$Builder, $l5: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r34: java.lang.Long, $r33: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r33.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("used", $r34)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r34: java.lang.Long, $r33: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r35: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l6 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getRemaining()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r35: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r35: com.google.common.collect.ImmutableMap$Builder, $l6: long}
---------------------------------------
---------------------------------------
$r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r35: com.google.common.collect.ImmutableMap$Builder, $l6: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.Long, $r35: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r37 = virtualinvoke $r35.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("remaining", $r36)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r36: java.lang.Long, $r35: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r37: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$i7 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getBlocksScheduled()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r37: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r37: com.google.common.collect.ImmutableMap$Builder, $i7: int}
---------------------------------------
---------------------------------------
$r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r37: com.google.common.collect.ImmutableMap$Builder, $i7: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r38: java.lang.Integer, $r37: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r39 = virtualinvoke $r37.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("blockScheduled", $r38)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r38: java.lang.Integer, $r37: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l8 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getBlockPoolUsed()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: com.google.common.collect.ImmutableMap$Builder, $l8: long}
---------------------------------------
---------------------------------------
$r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r39: com.google.common.collect.ImmutableMap$Builder, $l8: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r40: java.lang.Long, $r39: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r39.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("blockPoolUsed", $r40)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r40: java.lang.Long, $r39: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r41: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$f0 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: float getBlockPoolUsedPercent()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r41: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r41: com.google.common.collect.ImmutableMap$Builder, $f0: float}
---------------------------------------
---------------------------------------
$r42 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r41: com.google.common.collect.ImmutableMap$Builder, $f0: float}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r42: java.lang.Float, $r41: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r43 = virtualinvoke $r41.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("blockPoolUsedPercent", $r42)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r42: java.lang.Float, $r41: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$i9 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getVolumeFailures()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: com.google.common.collect.ImmutableMap$Builder, $i9: int}
---------------------------------------
---------------------------------------
$r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r43: com.google.common.collect.ImmutableMap$Builder, $i9: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r44: java.lang.Integer, $r43: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r45 = virtualinvoke $r43.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("volfails", $r44)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r44: java.lang.Integer, $r43: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r45: com.google.common.collect.ImmutableMap$Builder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r46 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.Object getLastBlockReport(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)>(r4)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r45: com.google.common.collect.ImmutableMap$Builder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r46: java.lang.Object, $r45: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
virtualinvoke $r45.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("lastBlockReport", $r46)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r46: java.lang.Object, $r45: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
r6 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary getVolumeFailureSummary()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
if r6 == null goto label2
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
$r59 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary: java.lang.String[] getFailedStorageLocations()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r59: java.lang.String[]}
---------------------------------------
---------------------------------------
$r60 = virtualinvoke r5.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("failedStorageIDs", $r59)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r59: java.lang.String[]}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r60: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$l11 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary: long getLastVolumeFailureDate()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r60: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r60: com.google.common.collect.ImmutableMap$Builder, $l11: long}
---------------------------------------
---------------------------------------
$r61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r60: com.google.common.collect.ImmutableMap$Builder, $l11: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r61: java.lang.Long, $r60: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r62 = virtualinvoke $r60.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("lastVolumeFailureDate", $r61)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary, $r61: java.lang.Long, $r60: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r62: com.google.common.collect.ImmutableMap$Builder, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
---------------------------------------
---------------------------------------
$l12 = virtualinvoke r6.<org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary: long getEstimatedCapacityLostTotal()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r62: com.google.common.collect.ImmutableMap$Builder, r6: org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r62: com.google.common.collect.ImmutableMap$Builder, $l12: long}
---------------------------------------
---------------------------------------
$r63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r62: com.google.common.collect.ImmutableMap$Builder, $l12: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r63: java.lang.Long, $r62: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
virtualinvoke $r62.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("estimatedCapacityLostTotal", $r63)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r63: java.lang.Long, $r62: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r48 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getUpgradeDomain()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r48: java.lang.String}
---------------------------------------
---------------------------------------
if $r48 == null goto label3
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r48: java.lang.String}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r57 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getUpgradeDomain()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r57: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r5.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("upgradeDomain", $r57)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r57: java.lang.String}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r49 = new java.lang.StringBuilder
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r49: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r50 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getHostName()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r49: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r50: java.lang.String, $r49: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r50: java.lang.String, $r49: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r51: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r51: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, $r52: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$i10 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getXferPort()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, $r52: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, $i10: int, $r52: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, $i10: int, $r52: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, $r53: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap$Builder, $r53: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r54: java.lang.String, r5: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r55 = virtualinvoke r5.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r54: java.lang.String, r5: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r54: java.lang.String, $r55: com.google.common.collect.ImmutableMap}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r55)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r54: java.lang.String, $r55: com.google.common.collect.ImmutableMap}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r11: java.lang.String}
---------------------------------------
---------------------------------------
return $r11
Live in: {$r11: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getDeadNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.util.ArrayList
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.util.ArrayList: void <init>()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = $r7
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r8: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(null, r2, 0)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r11
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Object}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: com.google.common.collect.ImmutableMap$Builder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getLastContact(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)>(r4)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: com.google.common.collect.ImmutableMap$Builder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: com.google.common.collect.ImmutableMap$Builder, $l0: long}
---------------------------------------
---------------------------------------
$r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: com.google.common.collect.ImmutableMap$Builder, $l0: long}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: java.lang.Long, $r12: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r12.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("lastContact", $r13)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: java.lang.Long, $r12: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r14: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isDecommissioned()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r14: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r14: com.google.common.collect.ImmutableMap$Builder, $z1: boolean}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r14: com.google.common.collect.ImmutableMap$Builder, $z1: boolean}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r15: java.lang.Boolean, $r14: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r14.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("decommissioned", $r15)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r15: java.lang.Boolean, $r14: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $r17: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates: java.lang.String toString()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $r17: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r18: java.lang.String, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r16.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("adminState", $r18)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r18: java.lang.String, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getXferAddr()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r20: java.lang.String, $r19: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r19.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("xferaddr", $r20)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r20: java.lang.String, $r19: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r21: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
r5 = virtualinvoke $r21.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r21: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r22 = new java.lang.StringBuilder
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getHostName()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.String, $r22: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.String, $r22: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r24: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r24: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, $r25: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getXferPort()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, $r25: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, $i1: int, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, $i1: int, $r25: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: com.google.common.collect.ImmutableMap, $r26: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: java.lang.String, r5: com.google.common.collect.ImmutableMap}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r5)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r27: java.lang.String, r5: com.google.common.collect.ImmutableMap}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r10: java.lang.String}
---------------------------------------
---------------------------------------
return $r10
Live in: {$r10: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getDecomNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.HashMap, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.HashMap, $r8: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getDecommissioningNodes()>()
Live in: {r1: java.util.HashMap, $r8: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.HashMap, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, r2: java.util.List}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, $z0: boolean}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, $r10: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r10
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, $r10: java.lang.Object}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r11 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r11: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getXferAddr()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r11: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: java.lang.String, $r11: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r11.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("xferaddr", $r12)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: java.lang.String, $r11: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $r14: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r14.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: int getUnderReplicatedBlocks()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $r14: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $i0: int}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $i0: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r15: java.lang.Integer, $r13: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r13.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("underReplicatedBlocks", $r15)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r15: java.lang.Integer, $r13: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $r17: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke $r17.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: int getOutOfServiceOnlyReplicas()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $r17: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $i1: int}
---------------------------------------
---------------------------------------
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $i1: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r18: java.lang.Integer, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r16.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("decommissionOnlyReplicas", $r18)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r18: java.lang.Integer, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $r20: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke $r20.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: int getUnderReplicatedInOpenFiles()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $r20: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $i2: int}
---------------------------------------
---------------------------------------
$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $i2: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r21: java.lang.Integer, $r19: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r19.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("underReplicateInOpenFiles", $r21)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r21: java.lang.Integer, $r19: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
r5 = virtualinvoke $r22.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r23 = new java.lang.StringBuilder
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getHostName()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r24: java.lang.String, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r24: java.lang.String, $r23: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r25: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r26: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$i3 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getXferPort()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r26: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $i3: int, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $i3: int, $r26: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r27: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, $r28: java.lang.String, r5: com.google.common.collect.ImmutableMap}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r5)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, $r28: java.lang.String, r5: com.google.common.collect.ImmutableMap}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r9 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r9: java.lang.String}
---------------------------------------
---------------------------------------
return $r9
Live in: {$r9: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getEnteringMaintenanceNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.HashMap, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.HashMap, $r8: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getEnteringMaintenanceNodes()>()
Live in: {r1: java.util.HashMap, $r8: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.HashMap, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, r2: java.util.List}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, $z0: boolean}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, $r10: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r10
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, $r10: java.lang.Object}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r11 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r11: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getXferAddr()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r11: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: java.lang.String, $r11: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r11.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("xferaddr", $r12)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r12: java.lang.String, $r11: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $r14: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r14.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: int getUnderReplicatedBlocks()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $r14: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $i0: int}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r13: com.google.common.collect.ImmutableMap$Builder, $i0: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r15: java.lang.Integer, $r13: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r13.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("underReplicatedBlocks", $r15)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r15: java.lang.Integer, $r13: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $r17: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke $r17.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: int getOutOfServiceOnlyReplicas()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $r17: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $i1: int}
---------------------------------------
---------------------------------------
$r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r16: com.google.common.collect.ImmutableMap$Builder, $i1: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r18: java.lang.Integer, $r16: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r16.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("maintenanceOnlyReplicas", $r18)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r18: java.lang.Integer, $r16: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $r20: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke $r20.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus: int getUnderReplicatedInOpenFiles()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $r20: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $i2: int}
---------------------------------------
---------------------------------------
$r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r19: com.google.common.collect.ImmutableMap$Builder, $i2: int}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r21: java.lang.Integer, $r19: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r19.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("underReplicateInOpenFiles", $r21)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r21: java.lang.Integer, $r19: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: com.google.common.collect.ImmutableMap$Builder}
---------------------------------------
---------------------------------------
r5 = virtualinvoke $r22.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r22: com.google.common.collect.ImmutableMap$Builder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$r23 = new java.lang.StringBuilder
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getHostName()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r23: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r24: java.lang.String, $r23: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r24: java.lang.String, $r23: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r25: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $r25: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r26: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$i3 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: int getXferPort()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r26: java.lang.StringBuilder, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $i3: int, $r26: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $i3: int, $r26: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, r5: com.google.common.collect.ImmutableMap, $r27: java.lang.StringBuilder}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator, $r28: java.lang.String, r5: com.google.common.collect.ImmutableMap}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r5)
Live in: {r1: java.util.HashMap, r3: java.util.Iterator, $r28: java.lang.String, r5: com.google.common.collect.ImmutableMap}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r9 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r9: java.lang.String}
---------------------------------------
---------------------------------------
return $r9
Live in: {$r9: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getLastContact
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor
Live in: {}
Live out: {r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$l0 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {$l0: long, r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getLastUpdateMonotonic()>()
Live in: {$l0: long, r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 - $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
$l3 = $l2 / 1000L
Live in: {$l2: long}
Live out: {$l3: long}
---------------------------------------
---------------------------------------
return $l3
Live in: {$l3: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getLastBlockReport
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor
Live in: {}
Live out: {r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$l0 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>()
Live in: {r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {$l0: long, r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getLastBlockReportMonotonic()>()
Live in: {$l0: long, r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {$l0: long, $l1: long}
---------------------------------------
---------------------------------------
$l2 = $l0 - $l1
Live in: {$l0: long, $l1: long}
Live out: {$l2: long}
---------------------------------------
---------------------------------------
$l3 = $l2 / 60000L
Live in: {$l2: long}
Live out: {$l3: long}
---------------------------------------
---------------------------------------
$r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
Live in: {$l3: long}
Live out: {$r2: java.lang.Long}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: java.lang.Long}
Live out: {}
---------------------------------------
=======================================
=======================================
getDfsUsed
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor
Live in: {}
Live out: {r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getDfsUsed()>()
Live in: {r1: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getClusterId
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.lang.String getClusterID()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$r3: java.lang.String}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockPoolId
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: java.lang.String getBlockPoolId()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: java.lang.String}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNameDirStatuses
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new java.util.HashMap
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.util.HashMap: void <init>()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
---------------------------------------
---------------------------------------
r2 = $r6
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, $r8: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
r23 = virtualinvoke $r8.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.util.Iterator dirIterator()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, $r8: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label2
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $z0: boolean}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
---------------------------------------
---------------------------------------
$r19 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $r19: java.lang.Object}
---------------------------------------
---------------------------------------
r24 = (org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory) $r19
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $r19: java.lang.Object}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, r24: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r24.<org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory: java.io.File getRoot()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, r24: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $r20: java.io.File, r24: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke r24.<org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory: org.apache.hadoop.hdfs.server.common.Storage$StorageDirType getStorageDirType()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $r20: java.io.File, r24: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $r20: java.io.File, $r21: org.apache.hadoop.hdfs.server.common.Storage$StorageDirType}
---------------------------------------
---------------------------------------
interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator, $r20: java.io.File, $r21: org.apache.hadoop.hdfs.server.common.Storage$StorageDirType}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap, r23: java.util.Iterator}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("active", r2)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, $r10: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {r1: java.util.HashMap, $r10: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.util.HashMap, $r11: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
r25 = virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.util.List getRemovedStorageDirs()>()
Live in: {r1: java.util.HashMap, $r11: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {r1: java.util.HashMap, r25: java.util.List}
---------------------------------------
---------------------------------------
$r12 = new java.util.HashMap
Live in: {r1: java.util.HashMap, r25: java.util.List}
Live out: {r1: java.util.HashMap, r25: java.util.List, $r12: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.util.HashMap: void <init>()>()
Live in: {r1: java.util.HashMap, r25: java.util.List, $r12: java.util.HashMap}
Live out: {r1: java.util.HashMap, r25: java.util.List, $r12: java.util.HashMap}
---------------------------------------
---------------------------------------
r26 = $r12
Live in: {r1: java.util.HashMap, r25: java.util.List, $r12: java.util.HashMap}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r25: java.util.List}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r25.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r25: java.util.List}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label4
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $z1: boolean}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $r15: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory) $r15
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $r15: java.lang.Object}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory: java.io.File getRoot()>()
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $r16: java.io.File, r4: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory: org.apache.hadoop.hdfs.server.common.Storage$StorageDirType getStorageDirType()>()
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $r16: java.io.File, r4: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $r16: java.io.File, $r17: org.apache.hadoop.hdfs.server.common.Storage$StorageDirType}
---------------------------------------
---------------------------------------
interfaceinvoke r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17)
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator, $r16: java.io.File, $r17: org.apache.hadoop.hdfs.server.common.Storage$StorageDirType}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label3
Live in: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
Live out: {r1: java.util.HashMap, r26: java.util.HashMap, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("failed", r26)
Live in: {r1: java.util.HashMap, r26: java.util.HashMap}
Live out: {r1: java.util.HashMap}
---------------------------------------
---------------------------------------
$r14 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r14: java.lang.String}
---------------------------------------
---------------------------------------
return $r14
Live in: {$r14: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNodeUsage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
f10 = 0.0F
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f10: float}
---------------------------------------
---------------------------------------
f11 = 0.0F
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f10: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f11: float, f10: float}
---------------------------------------
---------------------------------------
f12 = 0.0F
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f11: float, f10: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f10: float, f11: float}
---------------------------------------
---------------------------------------
f13 = 0.0F
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f10: float, f11: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f13: float, f11: float, f10: float}
---------------------------------------
---------------------------------------
$r5 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f13: float, f11: float, f10: float}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f13: float, f11: float, f10: float, $r5: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f13: float, f11: float, f10: float, $r5: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f13: float, f11: float, f10: float, $r5: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, f12: float, f13: float, f11: float, f10: float, $r5: java.util.HashMap}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new java.util.ArrayList
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.util.ArrayList: void <init>()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.ArrayList}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = $r6
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: java.util.ArrayList}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, $r7: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, $r8: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r8.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(r2, null, 1)
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, $r8: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
r30 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, $z0: boolean}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
$r29 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, $r29: java.lang.Object}
---------------------------------------
---------------------------------------
r31 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r29
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, $r29: java.lang.Object}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, r31: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r31.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isInService()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, r31: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label2
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator, $z2: boolean}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
interfaceinvoke r30.<java.util.Iterator: void remove()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, r30: java.util.Iterator}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke r2.<java.util.List: int size()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, $i0: int}
---------------------------------------
---------------------------------------
if $i0 <= 0 goto label8
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList, $i0: int}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
f14 = 0.0F
Live in: {r1: java.util.HashMap, r2: java.util.ArrayList, f13: float}
Live out: {r1: java.util.HashMap, r2: java.util.ArrayList, f13: float, f14: float}
---------------------------------------
---------------------------------------
$i1 = interfaceinvoke r2.<java.util.List: int size()>()
Live in: {r1: java.util.HashMap, r2: java.util.ArrayList, f13: float, f14: float}
Live out: {r1: java.util.HashMap, r2: java.util.ArrayList, f13: float, f14: float, $i1: int}
---------------------------------------
---------------------------------------
r32 = newarray (float)[$i1]
Live in: {r1: java.util.HashMap, r2: java.util.ArrayList, f13: float, f14: float, $i1: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList}
---------------------------------------
---------------------------------------
i10 = 0
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, i10: int}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, i10: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label5
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int, $z1: boolean}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int}
---------------------------------------
---------------------------------------
$r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, i10: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, i10: int, $r28: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r28
Live in: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, i10: int, $r28: java.lang.Object}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i10: int}
---------------------------------------
---------------------------------------
$i9 = i10
Live in: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i10: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $i9: int, i10: int}
---------------------------------------
---------------------------------------
i10 = i10 + 1
Live in: {r1: java.util.HashMap, r32: float[], f13: float, r3: java.util.Iterator, r2: java.util.ArrayList, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $i9: int, i10: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $i9: int}
---------------------------------------
---------------------------------------
$f8 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: float getDfsUsedPercent()>()
Live in: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $i9: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $i9: int, $f8: float}
---------------------------------------
---------------------------------------
r32[$i9] = $f8
Live in: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, $i9: int, $f8: float}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$f9 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: float getDfsUsedPercent()>()
Live in: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, r4: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, $f9: float}
---------------------------------------
---------------------------------------
f14 = f14 + $f9
Live in: {r1: java.util.HashMap, r32: float[], f13: float, i10: int, r2: java.util.ArrayList, r3: java.util.Iterator, f14: float, $f9: float}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int}
---------------------------------------
---------------------------------------
goto label4
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList, r3: java.util.Iterator, i10: int}
---------------------------------------
---------------------------------------
$i2 = interfaceinvoke r2.<java.util.List: int size()>()
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, r2: java.util.ArrayList}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, $i2: int}
---------------------------------------
---------------------------------------
$f0 = (float) $i2
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, $i2: int}
Live out: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, $f0: float}
---------------------------------------
---------------------------------------
f15 = f14 / $f0
Live in: {r1: java.util.HashMap, r32: float[], f13: float, f14: float, $f0: float}
Live out: {r1: java.util.HashMap, f15: float, f13: float, r32: float[]}
---------------------------------------
---------------------------------------
staticinvoke <java.util.Arrays: void sort(float[])>(r32)
Live in: {r1: java.util.HashMap, f15: float, f13: float, r32: float[]}
Live out: {r1: java.util.HashMap, f15: float, f13: float, r32: float[]}
---------------------------------------
---------------------------------------
$i3 = lengthof r32
Live in: {r1: java.util.HashMap, f15: float, f13: float, r32: float[]}
Live out: {r1: java.util.HashMap, f15: float, f13: float, r32: float[], $i3: int}
---------------------------------------
---------------------------------------
$i4 = $i3 / 2
Live in: {r1: java.util.HashMap, f15: float, f13: float, r32: float[], $i3: int}
Live out: {r1: java.util.HashMap, f15: float, f13: float, r32: float[], $i4: int}
---------------------------------------
---------------------------------------
f10 = r32[$i4]
Live in: {r1: java.util.HashMap, f15: float, f13: float, r32: float[], $i4: int}
Live out: {r1: java.util.HashMap, f15: float, f10: float, r32: float[], f13: float}
---------------------------------------
---------------------------------------
$i5 = lengthof r32
Live in: {r1: java.util.HashMap, f15: float, f10: float, r32: float[], f13: float}
Live out: {r1: java.util.HashMap, f15: float, f10: float, r32: float[], f13: float, $i5: int}
---------------------------------------
---------------------------------------
$i6 = $i5 - 1
Live in: {r1: java.util.HashMap, f15: float, f10: float, r32: float[], f13: float, $i5: int}
Live out: {r1: java.util.HashMap, f15: float, f10: float, r32: float[], f13: float, $i6: int}
---------------------------------------
---------------------------------------
f11 = r32[$i6]
Live in: {r1: java.util.HashMap, f15: float, f10: float, r32: float[], f13: float, $i6: int}
Live out: {r1: java.util.HashMap, f15: float, f10: float, f11: float, f13: float, r32: float[]}
---------------------------------------
---------------------------------------
f12 = r32[0]
Live in: {r1: java.util.HashMap, f15: float, f10: float, f11: float, f13: float, r32: float[]}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], f15: float}
---------------------------------------
---------------------------------------
i11 = 0
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], f15: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float}
---------------------------------------
---------------------------------------
$i7 = lengthof r32
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float, $i7: int}
---------------------------------------
---------------------------------------
if i11 >= $i7 goto label7
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float, $i7: int}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float}
---------------------------------------
---------------------------------------
$f3 = r32[i11]
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, f15: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, f15: float, $f3: float}
---------------------------------------
---------------------------------------
$f6 = $f3 - f15
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, f15: float, $f3: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, $f6: float, f15: float}
---------------------------------------
---------------------------------------
$f4 = r32[i11]
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, $f6: float, f15: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, $f6: float, $f4: float, f15: float}
---------------------------------------
---------------------------------------
$f5 = $f4 - f15
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f13: float, $f6: float, $f4: float, f15: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f15: float, f13: float, $f6: float, $f5: float}
---------------------------------------
---------------------------------------
$f7 = $f6 * $f5
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f15: float, f13: float, $f6: float, $f5: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f15: float, f13: float, $f7: float}
---------------------------------------
---------------------------------------
f13 = f13 + $f7
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, i11: int, r32: float[], f15: float, f13: float, $f7: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], f15: float, i11: int}
---------------------------------------
---------------------------------------
i11 = i11 + 1
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], f15: float, i11: int}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[], i11: int, f15: float}
---------------------------------------
---------------------------------------
$i8 = lengthof r32
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, r32: float[]}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, $i8: int}
---------------------------------------
---------------------------------------
$f1 = (float) $i8
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, $i8: int}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, $f1: float}
---------------------------------------
---------------------------------------
$f2 = f13 / $f1
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, f13: float, $f1: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, $f2: float}
---------------------------------------
---------------------------------------
$d0 = (double) $f2
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, $f2: float}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, $d0: double}
---------------------------------------
---------------------------------------
$d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0)
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, $d0: double}
Live out: {r1: java.util.HashMap, f12: float, f10: float, f11: float, $d1: double}
---------------------------------------
---------------------------------------
f13 = (float) $d1
Live in: {r1: java.util.HashMap, f12: float, f10: float, f11: float, $d1: double}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float}
---------------------------------------
---------------------------------------
$r9 = new java.util.HashMap
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, $r9: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.util.HashMap: void <init>()>()
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, $r9: java.util.HashMap}
Live out: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, $r9: java.util.HashMap}
---------------------------------------
---------------------------------------
r33 = $r9
Live in: {r1: java.util.HashMap, f12: float, f13: float, f11: float, f10: float, $r9: java.util.HashMap}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, f12: float}
---------------------------------------
---------------------------------------
$r10 = newarray (java.lang.Object)[1]
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, f12: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r10: java.lang.Object[], f12: float}
---------------------------------------
---------------------------------------
$r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f12)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r10: java.lang.Object[], f12: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r10: java.lang.Object[], $r11: java.lang.Float}
---------------------------------------
---------------------------------------
$r10[0] = $r11
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r10: java.lang.Object[], $r11: java.lang.Float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r10: java.lang.Object[]}
---------------------------------------
---------------------------------------
$r12 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f%%", $r10)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r10: java.lang.Object[]}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r12: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("min", $r12)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float, $r12: java.lang.String}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float}
---------------------------------------
---------------------------------------
$r14 = newarray (java.lang.Object)[1]
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, f10: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r14: java.lang.Object[], f10: float}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f10)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r14: java.lang.Object[], f10: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r14: java.lang.Object[], $r15: java.lang.Float}
---------------------------------------
---------------------------------------
$r14[0] = $r15
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r14: java.lang.Object[], $r15: java.lang.Float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r14: java.lang.Object[]}
---------------------------------------
---------------------------------------
$r16 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f%%", $r14)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r14: java.lang.Object[]}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r16: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("median", $r16)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float, $r16: java.lang.String}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float}
---------------------------------------
---------------------------------------
$r18 = newarray (java.lang.Object)[1]
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, f11: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r18: java.lang.Object[], f11: float}
---------------------------------------
---------------------------------------
$r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f11)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r18: java.lang.Object[], f11: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r18: java.lang.Object[], $r19: java.lang.Float}
---------------------------------------
---------------------------------------
$r18[0] = $r19
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r18: java.lang.Object[], $r19: java.lang.Float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r18: java.lang.Object[]}
---------------------------------------
---------------------------------------
$r20 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f%%", $r18)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r18: java.lang.Object[]}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r20: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max", $r20)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float, $r20: java.lang.String}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float}
---------------------------------------
---------------------------------------
$r22 = newarray (java.lang.Object)[1]
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, f13: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, $r22: java.lang.Object[], f13: float}
---------------------------------------
---------------------------------------
$r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f13)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, $r22: java.lang.Object[], f13: float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, $r22: java.lang.Object[], $r23: java.lang.Float}
---------------------------------------
---------------------------------------
$r22[0] = $r23
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, $r22: java.lang.Object[], $r23: java.lang.Float}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, $r22: java.lang.Object[]}
---------------------------------------
---------------------------------------
$r24 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f%%", $r22)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, $r22: java.lang.Object[]}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap, $r24: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stdDev", $r24)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap, $r24: java.lang.String}
Live out: {r1: java.util.HashMap, r33: java.util.HashMap}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nodeUsage", r33)
Live in: {r1: java.util.HashMap, r33: java.util.HashMap}
Live out: {r1: java.util.HashMap}
---------------------------------------
---------------------------------------
$r27 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r27: java.lang.String}
---------------------------------------
---------------------------------------
return $r27
Live in: {$r27: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNameJournalStatus
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.util.ArrayList, $r9: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.util.ArrayList, r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
if r2 == null goto label7
Live in: {r1: java.util.ArrayList, r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.util.ArrayList, r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
z0 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: boolean isOpenForWriteWithoutLock()>()
Live in: {r1: java.util.ArrayList, r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.util.ArrayList, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: java.util.List getJournals()>()
Live in: {r1: java.util.ArrayList, z0: boolean, r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.util.ArrayList, z0: boolean, $r11: java.util.List}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
Live in: {r1: java.util.ArrayList, z0: boolean, $r11: java.util.List}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label7
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, $z1: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
$r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, $r12: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream) $r12
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, $r12: java.lang.Object}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream}
---------------------------------------
---------------------------------------
$r13 = new java.util.HashMap
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, $r13: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r13.<java.util.HashMap: void <init>()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, $r13: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, $r13: java.util.HashMap}
---------------------------------------
---------------------------------------
r5 = $r13
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, $r13: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream: org.apache.hadoop.hdfs.server.namenode.JournalManager getManager()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, $r14: org.apache.hadoop.hdfs.server.namenode.JournalManager}
---------------------------------------
---------------------------------------
r6 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, $r14: org.apache.hadoop.hdfs.server.namenode.JournalManager}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream: boolean isRequired()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $z2: boolean}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $z2: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $r15: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("required", $r15)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $r15: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String}
---------------------------------------
---------------------------------------
$z3 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream: boolean isDisabled()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $z3: boolean}
---------------------------------------
---------------------------------------
$r17 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $z3: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $r17: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("disabled", $r17)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String, $r17: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("manager", r6)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, r6: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean}
---------------------------------------
---------------------------------------
$z4 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream: boolean isDisabled()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, $z4: boolean}
---------------------------------------
---------------------------------------
if $z4 == 0 goto label2
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean, $z4: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stream", "Failed")
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
if z0 == 0 goto label5
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream, z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream: org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream getCurrentStream()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r4: org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalAndStream}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r7: org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream}
---------------------------------------
---------------------------------------
if r7 == null goto label3
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r7: org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r7: org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r7.<org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream: java.lang.String generateReport()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, r7: org.apache.hadoop.hdfs.server.namenode.EditLogOutputStream}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, $r22: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stream", $r22)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap, $r22: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
goto label4
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stream", "not currently writing")
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stream", "open for read")
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean, r5: java.util.HashMap}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
goto label1
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, z0: boolean}
---------------------------------------
---------------------------------------
$r10 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.lang.Object)>(r1)
Live in: {r1: java.util.ArrayList}
Live out: {$r10: java.lang.String}
---------------------------------------
---------------------------------------
return $r10
Live in: {$r10: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getJournalTransactionInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new java.util.HashMap
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
---------------------------------------
---------------------------------------
specialinvoke $r2.<java.util.HashMap: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
---------------------------------------
---------------------------------------
r1 = $r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: java.util.HashMap}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSImage: long getLastAppliedOrWrittenTxId()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
---------------------------------------
---------------------------------------
$r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("LastAppliedOrWrittenTxId", $r4)
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.lang.String}
Live out: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r1: java.util.HashMap, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.HashMap, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSImage: long getMostRecentCheckpointTxId()>()
Live in: {r1: java.util.HashMap, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r1: java.util.HashMap, $l1: long}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1)
Live in: {r1: java.util.HashMap, $l1: long}
Live out: {r1: java.util.HashMap, $r7: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("MostRecentCheckpointTxId", $r7)
Live in: {r1: java.util.HashMap, $r7: java.lang.String}
Live out: {r1: java.util.HashMap}
---------------------------------------
---------------------------------------
$r9 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>(r1)
Live in: {r1: java.util.HashMap}
Live out: {$r9: java.lang.String}
---------------------------------------
---------------------------------------
return $r9
Live in: {$r9: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNNStartedTimeInMillis
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long startTime>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getCompileInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = new java.lang.StringBuilder
Live in: {}
Live out: {$r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
Live in: {$r1: java.lang.StringBuilder}
Live out: {$r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r2 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getDate()>()
Live in: {$r1: java.lang.StringBuilder}
Live out: {$r2: java.lang.String, $r1: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
Live in: {$r2: java.lang.String, $r1: java.lang.StringBuilder}
Live out: {$r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ")
Live in: {$r3: java.lang.StringBuilder}
Live out: {$r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getUser()>()
Live in: {$r4: java.lang.StringBuilder}
Live out: {$r5: java.lang.String, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
Live in: {$r5: java.lang.String, $r4: java.lang.StringBuilder}
Live out: {$r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ")
Live in: {$r6: java.lang.StringBuilder}
Live out: {$r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getBranch()>()
Live in: {$r7: java.lang.StringBuilder}
Live out: {$r8: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
Live in: {$r8: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {$r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r9: java.lang.StringBuilder}
Live out: {$r10: java.lang.String}
---------------------------------------
---------------------------------------
return $r10
Live in: {$r10: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
=======================================
=======================================
getFSDirectory
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {}
---------------------------------------
=======================================
=======================================
setFSDirectory
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSDirectory
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir> = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getCacheManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {}
---------------------------------------
=======================================
=======================================
getErasureCodingPolicyManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager getInstance()>()
Live in: {}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.ErasureCodingPolicyManager}
Live out: {}
---------------------------------------
=======================================
=======================================
getHAContext
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.HAContext haContext>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.ha.HAContext}
Live out: {}
---------------------------------------
=======================================
=======================================
getCorruptFiles
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection listCorruptFileBlocks(java.lang.String,java.lang.String[])>("/", null)
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, r2: java.util.Collection}
---------------------------------------
---------------------------------------
i0 = interfaceinvoke r2.<java.util.Collection: int size()>()
Live in: {r1: java.util.ArrayList, r2: java.util.Collection}
Live out: {r1: java.util.ArrayList, r2: java.util.Collection, i0: int}
---------------------------------------
---------------------------------------
if i0 == 0 goto label3
Live in: {r1: java.util.ArrayList, r2: java.util.Collection, i0: int}
Live out: {r1: java.util.ArrayList, r2: java.util.Collection}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
Live in: {r1: java.util.ArrayList, r2: java.util.Collection}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, $z0: boolean}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, $r6: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo) $r6
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, $r6: java.lang.Object}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo: java.lang.String toString()>()
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, r4: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator, $r7: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7)
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator, $r7: java.lang.String}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label2
Live in: {r1: java.util.ArrayList, r3: java.util.Iterator}
Live out: {r1: java.util.ArrayList, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label7
Live in: {r1: java.util.ArrayList}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r1: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, $r8: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
r18 = $r8
Live in: {r1: java.util.ArrayList, $r8: org.apache.hadoop.ipc.StandbyException}
Live out: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException}
Live out: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException, $r9: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$z2 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>()
Live in: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException, $r9: org.slf4j.Logger}
Live out: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label5
Live in: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException, $z2: boolean}
Live out: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: java.util.ArrayList, r18: org.apache.hadoop.ipc.StandbyException}
Live out: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, r18: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, r18: org.apache.hadoop.ipc.StandbyException}
Live out: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, r18: org.apache.hadoop.ipc.StandbyException, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, r18: org.apache.hadoop.ipc.StandbyException, $r10: java.lang.StringBuilder}
Live out: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, r18: org.apache.hadoop.ipc.StandbyException, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get corrupt file blocks returned error: ")
Live in: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, r18: org.apache.hadoop.ipc.StandbyException, $r10: java.lang.StringBuilder}
Live out: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, $r12: java.lang.StringBuilder, r18: org.apache.hadoop.ipc.StandbyException}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r18.<org.apache.hadoop.ipc.StandbyException: java.lang.String getMessage()>()
Live in: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, $r12: java.lang.StringBuilder, r18: org.apache.hadoop.ipc.StandbyException}
Live out: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, $r13: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
Live in: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, $r13: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r1: java.util.ArrayList, $r11: org.slf4j.Logger, $r14: java.lang.StringBuilder}
Live out: {r1: java.util.ArrayList, $r15: java.lang.String, $r11: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r15)
Live in: {r1: java.util.ArrayList, $r15: java.lang.String, $r11: org.slf4j.Logger}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
goto label7
Live in: {r1: java.util.ArrayList}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r1: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, $r16: java.io.IOException}
---------------------------------------
---------------------------------------
r19 = $r16
Live in: {r1: java.util.ArrayList, $r16: java.io.IOException}
Live out: {r1: java.util.ArrayList, r19: java.io.IOException}
---------------------------------------
---------------------------------------
$r17 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r1: java.util.ArrayList, r19: java.io.IOException}
Live out: {r1: java.util.ArrayList, r19: java.io.IOException, $r17: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Get corrupt file blocks returned error", r19)
Live in: {r1: java.util.ArrayList, r19: java.io.IOException, $r17: org.slf4j.Logger}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r20 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.lang.Object)>(r1)
Live in: {r1: java.util.ArrayList}
Live out: {$r20: java.lang.String}
---------------------------------------
---------------------------------------
return $r20
Live in: {$r20: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumberOfSnapshottableDirs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: int getNumSnapshottableDirs()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
$l1 = (long) $i0
Live in: {$i0: int}
Live out: {$l1: long}
---------------------------------------
---------------------------------------
return $l1
Live in: {$l1: long}
Live out: {}
---------------------------------------
=======================================
=======================================
listCorruptFileBlocksWithSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.lang.String, r3: java.lang.String[]}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection listCorruptFileBlocks(java.lang.String,java.lang.String[])>(r1, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.List, r1: java.lang.String, r3: java.lang.String[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r2: java.util.List}
---------------------------------------
---------------------------------------
$r8 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r2: java.util.List, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r2: java.util.List, $r8: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r2: java.util.List, $r8: java.util.ArrayList}
---------------------------------------
---------------------------------------
r5 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r2: java.util.List, $r8: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r2: java.util.List}
---------------------------------------
---------------------------------------
$r9 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r2: java.util.List, $r9: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r2: java.util.List, $r9: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r2: java.util.List, $r9: java.util.ArrayList}
---------------------------------------
---------------------------------------
r6 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r2: java.util.List, $r9: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r6: java.util.ArrayList, r2: java.util.List}
---------------------------------------
---------------------------------------
if r2 == null goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r6: java.util.ArrayList, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r6: java.util.ArrayList, r2: java.util.List}
---------------------------------------
---------------------------------------
r33 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection, r5: java.util.ArrayList, r6: java.util.ArrayList, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
---------------------------------------
---------------------------------------
$z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $z3: boolean}
Live out: {r4: java.util.Collection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r24 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
Live in: {r4: java.util.Collection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList}
Live out: {r4: java.util.Collection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, $r24: java.lang.Object}
---------------------------------------
---------------------------------------
r34 = (java.lang.String) $r24
Live in: {r4: java.util.Collection, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, $r24: java.lang.Object}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
---------------------------------------
---------------------------------------
$r25 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory getFSDirectory()>()
Live in: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r26 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp READ_LINK>
Live in: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $r26: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r35 = virtualinvoke $r25.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INode getINode(java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp)>(r34, $r26)
Live in: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $r26: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, r35: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke r35.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeDirectory asDirectory()>()
Live in: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, r35: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $r27: org.apache.hadoop.hdfs.server.namenode.INodeDirectory}
---------------------------------------
---------------------------------------
r36 = virtualinvoke $r27.<org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.snapshot.DirectorySnapshottableFeature getDirectorySnapshottableFeature()>()
Live in: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, $r27: org.apache.hadoop.hdfs.server.namenode.INodeDirectory}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, r36: org.apache.hadoop.hdfs.server.namenode.snapshot.DirectorySnapshottableFeature}
---------------------------------------
---------------------------------------
if r36 != null goto label2
Live in: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, r36: org.apache.hadoop.hdfs.server.namenode.snapshot.DirectorySnapshottableFeature}
Live out: {r34: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, r36: org.apache.hadoop.hdfs.server.namenode.snapshot.DirectorySnapshottableFeature}
---------------------------------------
---------------------------------------
$r28 = new org.apache.hadoop.hdfs.protocol.SnapshotException
Live in: {r34: java.lang.String}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String}
---------------------------------------
---------------------------------------
$r29 = new java.lang.StringBuilder
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String, $r29: java.lang.StringBuilder}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory is not a snapshottable directory: ")
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String, $r29: java.lang.StringBuilder}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34)
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, r34: java.lang.String, $r30: java.lang.StringBuilder}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, $r31: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, $r31: java.lang.StringBuilder}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, $r32: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r28.<org.apache.hadoop.hdfs.protocol.SnapshotException: void <init>(java.lang.String)>($r32)
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException, $r32: java.lang.String}
Live out: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException}
---------------------------------------
---------------------------------------
throw $r28
Live in: {$r28: org.apache.hadoop.hdfs.protocol.SnapshotException}
Live out: {}
---------------------------------------
---------------------------------------
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r36)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection, r36: org.apache.hadoop.hdfs.server.namenode.snapshot.DirectorySnapshottableFeature}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
---------------------------------------
---------------------------------------
goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r33: java.util.Iterator, r5: java.util.ArrayList, r6: java.util.ArrayList, r4: java.util.Collection}
---------------------------------------
---------------------------------------
r37 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>()
Live in: {r5: java.util.ArrayList, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.Collection}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList}
---------------------------------------
---------------------------------------
$z5 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, $z5: boolean}
---------------------------------------
---------------------------------------
if $z5 == 0 goto label8
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, $z5: boolean}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r10 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, $r10: java.lang.Object}
---------------------------------------
---------------------------------------
r38 = (org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo) $r10
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, $r10: java.lang.Object}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = r38.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo: java.lang.String path>
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.HdfsFileStatus getFileInfo(java.lang.String,boolean,boolean,boolean)>($r11, 1, 0, 0)
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.String}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
---------------------------------------
---------------------------------------
if $r12 == null goto label5
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.protocol.HdfsFileStatus}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke r38.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo: java.lang.String toString()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r23: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r23)
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r23: java.lang.String}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory getFSDirectory()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r6: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r14 = r38.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo: java.lang.String path>
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $r14: java.lang.String}
---------------------------------------
---------------------------------------
r39 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: java.util.Collection getSnapshotFiles(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.util.List,java.lang.String)>($r13, r6, $r14)
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $r14: java.lang.String}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r39: java.util.Collection}
---------------------------------------
---------------------------------------
if r39 == null goto label7
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r39: java.util.Collection}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r39: java.util.Collection}
---------------------------------------
---------------------------------------
r40 = interfaceinvoke r39.<java.util.Collection: java.util.Iterator iterator()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r39: java.util.Collection}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label7
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $z0: boolean}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
---------------------------------------
---------------------------------------
$r15 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r15: java.lang.Object}
---------------------------------------
---------------------------------------
r7 = (java.lang.String) $r15
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r15: java.lang.Object}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = new java.lang.StringBuilder
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = r38.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo: org.apache.hadoop.hdfs.protocol.Block block>
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r16: java.lang.StringBuilder, $r17: org.apache.hadoop.hdfs.protocol.Block}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke $r17.<org.apache.hadoop.hdfs.protocol.Block: java.lang.String getBlockName()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r16: java.lang.StringBuilder, $r17: org.apache.hadoop.hdfs.protocol.Block}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r18: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r18: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t")
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r19: java.lang.StringBuilder}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, r7: java.lang.String, $r20: java.lang.StringBuilder}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r21: java.lang.StringBuilder}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r22: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22)
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo, $r22: java.lang.String}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
---------------------------------------
---------------------------------------
goto label6
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList, r40: java.util.Iterator, r38: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$CorruptFileBlockInfo}
---------------------------------------
---------------------------------------
goto label4
Live in: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList}
Live out: {r5: java.util.ArrayList, r37: java.util.Iterator, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.util.ArrayList}
---------------------------------------
---------------------------------------
return r5
Live in: {r5: java.util.ArrayList}
Live out: {}
---------------------------------------
=======================================
=======================================
getDistinctVersionCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.HashMap getDatanodesSoftwareVersions()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$r3: java.util.HashMap}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r3.<java.util.HashMap: int size()>()
Live in: {$r3: java.util.HashMap}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getDistinctVersions
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.HashMap getDatanodesSoftwareVersions()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$r3: java.util.HashMap}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: java.util.HashMap}
Live out: {}
---------------------------------------
=======================================
=======================================
getSoftwareVersion
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getVersion()>()
Live in: {}
Live out: {$r1: java.lang.String}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
getNameDirSize
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.lang.String getNNDirectorySize()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$r3: java.lang.String}
---------------------------------------
---------------------------------------
return $r3
Live in: {$r3: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
verifyToken
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
---------------------------------------
---------------------------------------
r2 := @parameter1: byte[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r2: byte[]}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager getDelegationTokenSecretManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r2: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r2: byte[], $r4: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager: void verifyToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,byte[])>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenIdentifier, r2: byte[], $r4: org.apache.hadoop.hdfs.security.token.delegation.DelegationTokenSecretManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r5 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.security.token.SecretManager$InvalidToken}
---------------------------------------
---------------------------------------
r3 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.security.token.SecretManager$InvalidToken}
Live out: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean inTransitionToActive()>()
Live in: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label4
Live in: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken, $z0: boolean}
Live out: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken}
---------------------------------------
---------------------------------------
$r6 = new org.apache.hadoop.ipc.RetriableException
Live in: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken}
Live out: {$r6: org.apache.hadoop.ipc.RetriableException, r3: org.apache.hadoop.security.token.SecretManager$InvalidToken}
---------------------------------------
---------------------------------------
specialinvoke $r6.<org.apache.hadoop.ipc.RetriableException: void <init>(java.lang.Exception)>(r3)
Live in: {$r6: org.apache.hadoop.ipc.RetriableException, r3: org.apache.hadoop.security.token.SecretManager$InvalidToken}
Live out: {$r6: org.apache.hadoop.ipc.RetriableException}
---------------------------------------
---------------------------------------
throw $r6
Live in: {$r6: org.apache.hadoop.ipc.RetriableException}
Live out: {}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: org.apache.hadoop.security.token.SecretManager$InvalidToken}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getEditLogTailer
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {}
---------------------------------------
=======================================
=======================================
setEditLogTailerForTests
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer editLogTailer> = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setFsLockForTests
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.util.concurrent.locks.ReentrantReadWriteLock
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.concurrent.locks.ReentrantReadWriteLock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r1: java.util.concurrent.locks.ReentrantReadWriteLock, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock, r1: java.util.concurrent.locks.ReentrantReadWriteLock}
---------------------------------------
---------------------------------------
$r2.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: java.util.concurrent.locks.ReentrantReadWriteLock coarseLock> = r1
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock, r1: java.util.concurrent.locks.ReentrantReadWriteLock}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getFsLockForTests
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock fsLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
---------------------------------------
---------------------------------------
$r2 = $r1.<org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock: java.util.concurrent.locks.ReentrantReadWriteLock coarseLock>
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSNamesystemLock}
Live out: {$r2: java.util.concurrent.locks.ReentrantReadWriteLock}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: java.util.concurrent.locks.ReentrantReadWriteLock}
Live out: {}
---------------------------------------
=======================================
=======================================
getCpLockForTests
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.concurrent.locks.ReentrantLock cpLock>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: java.util.concurrent.locks.ReentrantLock}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: java.util.concurrent.locks.ReentrantLock}
Live out: {}
---------------------------------------
=======================================
=======================================
setNNResourceChecker
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker nnResourceChecker> = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getSnapshotManager
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {}
---------------------------------------
=======================================
=======================================
allowSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "allowSnapshot"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>("allowSnapshot")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot allow snapshot for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $r10: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: void allowSnapshot(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String)>($r11, $r10, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $r10: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("allowSnapshot")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("allowSnapshot")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "allowSnapshot", r1, null, null)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
disallowSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "disallowSnapshot"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>("disallowSnapshot")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot disallow snapshot for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $r10: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: void disallowSnapshot(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String)>($r11, $r10, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, $r10: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("disallowSnapshot")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("disallowSnapshot")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "disallowSnapshot", r1, null, null)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
createSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create snapshot for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r17 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: java.lang.String createSnapshot(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String,java.lang.String,boolean)>($r13, r3, $r12, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r17: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("createSnapshot")
Live in: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "createSnapshot", r1, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("createSnapshot")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "createSnapshot", r1, r17, null)
Live in: {r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: java.lang.String}
---------------------------------------
---------------------------------------
return r17
Live in: {r17: java.lang.String}
Live out: {}
---------------------------------------
=======================================
=======================================
renameSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter3: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r4 = "renameSnapshot"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, z1: boolean, r3: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r5 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, z1: boolean, r3: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r6 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r2: java.lang.String, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r2: java.lang.String, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot rename snapshot for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, r3: java.lang.String, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, $r17: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, $r17: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, $r17: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: void renameSnapshot(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String,java.lang.String,java.lang.String,boolean)>($r17, r7, $r16, r1, r2, r3, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean, $r17: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r5: java.lang.String, r6: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("renameSnapshot")
Live in: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, z1: boolean, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, z1: boolean, r5: java.lang.String, $r20: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r8 = $r20
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, z1: boolean, r5: java.lang.String, $r20: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException, z1: boolean, r5: java.lang.String, r6: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "renameSnapshot", r5, r6, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException, z1: boolean, r5: java.lang.String, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r19 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
---------------------------------------
---------------------------------------
r9 = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
Live out: {r9: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("renameSnapshot")
Live in: {r9: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r9
Live in: {r9: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "renameSnapshot", r5, r6, null)
Live in: {z2: boolean, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getSnapshottableDirListing
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
r10 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[] getSnapshottableDirListing(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager)>($r7, r1, $r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listSnapshottableDirectory")
Live in: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r2 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "listSnapshottableDirectory", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listSnapshottableDirectory")
Live in: {r3: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "listSnapshottableDirectory", null, null, null)
Live in: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[]}
---------------------------------------
---------------------------------------
return r10
Live in: {r10: org.apache.hadoop.hdfs.protocol.SnapshottableDirectoryStatus[]}
Live out: {}
---------------------------------------
=======================================
=======================================
getSnapshotDiffReport
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
if r2 == null goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
---------------------------------------
---------------------------------------
goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
---------------------------------------
---------------------------------------
$r15 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
if r3 == null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $r16: java.lang.String}
---------------------------------------
---------------------------------------
goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $r16: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $r16: java.lang.String}
---------------------------------------
---------------------------------------
r5 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, $r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r1: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r2: java.lang.String, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: java.lang.String, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r17 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport getSnapshotDiffReport(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String,java.lang.String,java.lang.String)>($r12, r6, $r11, r1, r2, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r6: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("computeSnapshotDiff")
Live in: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport, r4: java.lang.String, r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport, r4: java.lang.String, r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label12
Live in: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport, r4: java.lang.String, r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport, r4: java.lang.String, r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r7 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.String, r4: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException, r4: java.lang.String, r5: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "computeSnapshotDiff", r4, r5, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException, r4: java.lang.String, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r7: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r8 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r8: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("computeSnapshotDiff")
Live in: {r8: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r8
Live in: {r8: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "computeSnapshotDiff", r4, r5, null)
Live in: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport, r4: java.lang.String, r5: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport}
---------------------------------------
---------------------------------------
return r17
Live in: {r17: org.apache.hadoop.hdfs.protocol.SnapshotDiffReport}
Live out: {}
---------------------------------------
=======================================
=======================================
getSnapshotDiffReportListing
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
r4 := @parameter3: byte[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String}
---------------------------------------
---------------------------------------
i0 := @parameter4: int
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
---------------------------------------
---------------------------------------
if r2 == null goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
---------------------------------------
---------------------------------------
$r16 = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r16: java.lang.String}
---------------------------------------
---------------------------------------
goto label03
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r16: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r16: java.lang.String}
---------------------------------------
---------------------------------------
r5 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, $r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
if r3 == null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r17 = r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $r17: java.lang.String}
---------------------------------------
---------------------------------------
goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $r17: java.lang.String}
---------------------------------------
---------------------------------------
$r17 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $r17: java.lang.String}
---------------------------------------
---------------------------------------
r6 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, $r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r3: java.lang.String, i0: int, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r4: byte[], r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: byte[]}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, i0: int, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: byte[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: byte[], i0: int}
---------------------------------------
---------------------------------------
$i1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int snapshotDiffReportLimit>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: byte[], i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: byte[], i0: int, $i1: int}
---------------------------------------
---------------------------------------
r18 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing getSnapshotDiffReportListing(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String,java.lang.String,java.lang.String,byte[],int,int)>($r13, r7, $r12, r1, r2, r3, r4, i0, $i1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r7: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, r3: java.lang.String, r4: byte[], i0: int, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("computeSnapshotDiff")
Live in: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label12
Live in: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r8 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: java.lang.String, r5: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException, r5: java.lang.String, r6: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "computeSnapshotDiff", r5, r6, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException, r5: java.lang.String, r6: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r9 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r9: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("computeSnapshotDiff")
Live in: {r9: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r9
Live in: {r9: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "computeSnapshotDiff", r5, r6, null)
Live in: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing, r5: java.lang.String, r6: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing}
---------------------------------------
---------------------------------------
return r18
Live in: {r18: org.apache.hadoop.hdfs.protocol.SnapshotDiffReportListing}
Live out: {}
---------------------------------------
=======================================
=======================================
deleteSnapshot
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r17 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r17: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r17: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot delete snapshot for ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r17: java.lang.String}
---------------------------------------
---------------------------------------
r17 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot: java.lang.String getSnapshotPath(java.lang.String,java.lang.String)>(r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, r2: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r18 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo deleteSnapshot(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager,java.lang.String,java.lang.String,boolean)>($r13, r3, $r12, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager, r1: java.lang.String, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("deleteSnapshot")
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
goto label6
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r17: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "deleteSnapshot", r17, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r17: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("deleteSnapshot")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
if r18 == null goto label7
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void removeBlocks(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)>(r18)
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r18: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo}
Live out: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "deleteSnapshot", r17, null, null)
Live in: {r17: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeSnapshottableDirs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
if $r2 == null goto label1
Live in: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager snapshotManager>
Live in: {r1: java.util.List, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.List, $r3: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
---------------------------------------
---------------------------------------
virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager: void removeSnapshottable(java.util.List)>(r1)
Live in: {r1: java.util.List, $r3: org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotManager}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
queryRollingUpgrade
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>("queryRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("queryRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r4 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
z1 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSImage: boolean hasRollbackFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, $r6: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: void setCreatedRollbackImages(boolean)>(z1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, $r6: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("queryRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r8: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("queryRollingUpgrade")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "queryRollingUpgrade", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r7: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
return $r7
Live in: {$r7: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
=======================================
=======================================
startRollingUpgrade
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "startRollingUpgrade"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>("startRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startRollingUpgrade")
Live in: {r12: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r12: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
return r12
Live in: {r12: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
---------------------------------------
l2 = staticinvoke <org.apache.hadoop.util.Time: long now()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void startRollingUpgradeInternalForNonHA(long)>(l2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Failed to start rolling upgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void startRollingUpgradeInternal(long)>(l2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l2: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r6 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r6: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r6.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: long getStartTime()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r6: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long, $r5: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r5.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logStartRollingUpgrade(long)>($l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long, $r5: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 == 0 goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$i1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i1: int, $r9: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature rollEditLog(int)>($i1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i1: int, $r9: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("startRollingUpgrade")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "startRollingUpgrade", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
return $r8
Live in: {$r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
=======================================
=======================================
startRollingUpgradeInternal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkRollingUpgrade(java.lang.String)>("start rolling upgrade")
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void checkUpgrade()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setRollingUpgradeInfo(boolean,long)>(0, l0)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
startRollingUpgradeInternalForNonHA
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z3 = 1
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
$z3 = 0
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z3)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z3: boolean}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isInSafeMode()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label3
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = new java.io.IOException
Live in: {}
Live out: {$r6: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Safe mode should be turned ON in order to create namespace image.")
Live in: {$r6: java.io.IOException}
Live out: {$r6: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r6
Live in: {$r6: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkRollingUpgrade(java.lang.String)>("start rolling upgrade")
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: void checkUpgrade()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile IMAGE_ROLLBACK>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSImage: void saveNamespace(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile,org.apache.hadoop.hdfs.util.Canceler)>(r0, $r3, null)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Successfully saved namespace for preparing rolling upgrade.")
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.slf4j.Logger}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction SAFEMODE_LEAVE>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean setSafeMode(org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction)>($r5)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: org.apache.hadoop.hdfs.protocol.HdfsConstants$SafeModeAction}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void setRollingUpgradeInfo(boolean,long)>(1, l0)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setRollingUpgradeInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
l0 := @parameter1: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r1 = new org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, l0: long, z0: boolean}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getBlockPoolId()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, l0: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r2: java.lang.String, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
specialinvoke $r1.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: void <init>(java.lang.String,boolean,long,long)>($r2, z0, l0, 0L)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r2: java.lang.String, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo> = $r1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setCreatedRollbackImages
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z0: boolean, $r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
virtualinvoke $r2.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: void setCreatedRollbackImages(boolean)>(z0)
Live in: {z0: boolean, $r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getRollingUpgradeInfo
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
=======================================
=======================================
isNeedRollbackFsImage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean needRollbackFsImage>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
setNeedRollbackFsImage
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter0: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean needRollbackFsImage> = z0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getRollingUpgradeStatus
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo getRollingUpgradeInfo()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r8.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: boolean createdRollbackImages()>()
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label02
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {$r4: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
specialinvoke $r4.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean: void <init>(org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo)>(r8)
Live in: {$r4: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {$r4: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean}
---------------------------------------
---------------------------------------
return $r4
Live in: {$r4: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
r8 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo getRollingUpgradeInfo()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
if r8 != null goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getRollingUpgradeStatus")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = virtualinvoke r8.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: boolean createdRollbackImages()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r3: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
z3 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSImage: boolean hasRollbackFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r3: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, z3: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r8.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: void setCreatedRollbackImages(boolean)>(z3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getRollingUpgradeStatus")
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
goto label10
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
$r6 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r6: java.io.IOException}
---------------------------------------
---------------------------------------
r9 = $r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r6: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r9: java.io.IOException}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r9: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r9: java.io.IOException, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Encountered exception setting Rollback Image", r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r9: java.io.IOException, $r7: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getRollingUpgradeStatus")
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
goto label10
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
$r5 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getRollingUpgradeStatus")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean
Live in: {r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean: void <init>(org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo)>(r8)
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean, r8: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean}
---------------------------------------
---------------------------------------
return $r2
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo$Bean}
Live out: {}
---------------------------------------
=======================================
=======================================
isRollingUpgrade
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
if $r1 == null goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: boolean isFinalized()>()
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = 1
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {$z1: boolean}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
$z1 = 0
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
return $z1
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
getEffectiveLayoutVersion
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {$z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage getStorage()>()
Live in: {$z0: boolean, $r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$z0: boolean, $r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.NNStorage: int getLayoutVersion()>()
Live in: {$z0: boolean, $r2: org.apache.hadoop.hdfs.server.namenode.NNStorage}
Live out: {$z0: boolean, $i0: int}
---------------------------------------
---------------------------------------
$i2 = <org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion: int MINIMUM_COMPATIBLE_LAYOUT_VERSION>
Live in: {$z0: boolean, $i0: int}
Live out: {$z0: boolean, $i0: int, $i2: int}
---------------------------------------
---------------------------------------
$i1 = <org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion: int CURRENT_LAYOUT_VERSION>
Live in: {$z0: boolean, $i0: int, $i2: int}
Live out: {$z0: boolean, $i0: int, $i2: int, $i1: int}
---------------------------------------
---------------------------------------
$i3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion(boolean,int,int,int)>($z0, $i0, $i2, $i1)
Live in: {$z0: boolean, $i0: int, $i2: int, $i1: int}
Live out: {$i3: int}
---------------------------------------
---------------------------------------
return $i3
Live in: {$i3: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getEffectiveLayoutVersion
---------------------------------------
z0 := @parameter0: boolean
Live in: {}
Live out: {z0: boolean}
---------------------------------------
---------------------------------------
i0 := @parameter1: int
Live in: {z0: boolean}
Live out: {i0: int, z0: boolean}
---------------------------------------
---------------------------------------
i1 := @parameter2: int
Live in: {i0: int, z0: boolean}
Live out: {i0: int, z0: boolean, i1: int}
---------------------------------------
---------------------------------------
i2 := @parameter3: int
Live in: {i0: int, z0: boolean, i1: int}
Live out: {i0: int, i2: int, i1: int, z0: boolean}
---------------------------------------
---------------------------------------
if z0 == 0 goto label1
Live in: {i0: int, i2: int, i1: int, z0: boolean}
Live out: {i0: int, i2: int, i1: int}
---------------------------------------
---------------------------------------
if i0 > i1 goto label1
Live in: {i0: int, i2: int, i1: int}
Live out: {i0: int, i2: int}
---------------------------------------
---------------------------------------
return i0
Live in: {i0: int}
Live out: {}
---------------------------------------
---------------------------------------
return i2
Live in: {i2: int}
Live out: {}
---------------------------------------
=======================================
=======================================
requireEffectiveLayoutVersionForFeature
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
i0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
---------------------------------------
---------------------------------------
$z0 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion: boolean supports(org.apache.hadoop.hdfs.protocol.LayoutVersion$LayoutFeature,int)>(r1, i0)
Live in: {i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
Live out: {i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature, $z0: boolean}
Live out: {i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.HadoopIllegalArgumentException
Live in: {i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature, i0: int}
---------------------------------------
---------------------------------------
$r3 = newarray (java.lang.Object)[2]
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature, i0: int}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[], i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
---------------------------------------
---------------------------------------
$r3[0] = r1
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[], i0: int, r1: org.apache.hadoop.hdfs.server.namenode.NameNodeLayoutVersion$Feature}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[], i0: int}
---------------------------------------
---------------------------------------
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[], i0: int}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[], $r4: java.lang.Integer}
---------------------------------------
---------------------------------------
$r3[1] = $r4
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[], $r4: java.lang.Integer}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[]}
---------------------------------------
---------------------------------------
$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Feature %s unsupported at NameNode layout version %d.  If a rolling upgrade is in progress, then it must be finalized before using this feature.", $r3)
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r3: java.lang.Object[]}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r5: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.HadoopIllegalArgumentException: void <init>(java.lang.String)>($r5)
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException, $r5: java.lang.String}
Live out: {$r2: org.apache.hadoop.HadoopIllegalArgumentException}
---------------------------------------
---------------------------------------
throw $r2
Live in: {$r2: org.apache.hadoop.HadoopIllegalArgumentException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkRollingUpgrade
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = new org.apache.hadoop.hdfs.protocol.RollingUpgradeException
Live in: {r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r3 = new java.lang.StringBuilder
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to ")
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r4: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since a rolling upgrade is already in progress. Existing rolling upgrade info:\n")
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r5: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r6: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r6: java.lang.StringBuilder, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r7: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r7: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo, $r6: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r8: java.lang.StringBuilder}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r9: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r2.<org.apache.hadoop.hdfs.protocol.RollingUpgradeException: void <init>(java.lang.String)>($r9)
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException, $r9: java.lang.String}
Live out: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException}
---------------------------------------
---------------------------------------
throw $r2
Live in: {$r2: org.apache.hadoop.hdfs.protocol.RollingUpgradeException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
finalizeRollingUpgrade
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(java.lang.String)>("finalizeRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r2: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isRollingUpgrade()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("finalizeRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return null
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Failed to finalize rolling upgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = staticinvoke <org.apache.hadoop.util.Time: long now()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void finalizeRollingUpgradeInternal(long)>($l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$r5 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r5: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
$l1 = virtualinvoke $r5.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: long getFinalizeTime()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog, $r5: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r4.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logFinalizeRollingUpgrade(long)>($l1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $l1: long, $r4: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$i2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: int getEffectiveLayoutVersion()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i2: int, $r12: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.CheckpointSignature rollEditLog(int)>($i2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $i2: int, $r12: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.namenode.FSImage: void updateStorageVersion()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r6: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage getFSImage()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile IMAGE_ROLLBACK>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile IMAGE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r8: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSImage: void renameCheckpoint(org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile,org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile)>($r9, $r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r8: org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile, $r7: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("finalizeRollingUpgrade")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r1 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("finalizeRollingUpgrade")
Live in: {r1: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r1
Live in: {r1: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$z2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean haEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $z2: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "finalizeRollingUpgrade", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r10: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
return $r10
Live in: {$r10: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
=======================================
=======================================
finalizeRollingUpgradeInternal
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo rollingUpgradeInfo>
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
---------------------------------------
---------------------------------------
virtualinvoke $r1.<org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo: void finalize(long)>(l0)
Live in: {l0: long, $r1: org.apache.hadoop.hdfs.protocol.RollingUpgradeInfo}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
addCacheDirective
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.EnumSet
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.EnumSet, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.EnumSet, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.fs.CacheFlag: org.apache.hadoop.fs.CacheFlag FORCE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r6: org.apache.hadoop.fs.CacheFlag}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r2.<java.util.EnumSet: boolean contains(java.lang.Object)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r6: org.apache.hadoop.fs.CacheFlag}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r12: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void waitForRescanIfNeeded()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r12: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot add cache directive")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo addCacheDirective(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo,java.util.EnumSet,boolean)>(r0, $r9, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("addCacheDirective")
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if 1 == 0 goto label8
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label8
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "addCacheDirective", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("addCacheDirective")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if 0 == 0 goto label7
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r5: java.lang.Throwable, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r16.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.String toString()>()
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "addCacheDirective", r3, null, null)
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r3: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r16.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.Long getId()>()
Live in: {r16: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {$r10: java.lang.Long}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>()
Live in: {$r10: java.lang.Long}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
modifyCacheDirective
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.EnumSet
Live in: {r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.util.EnumSet, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r2: java.util.EnumSet, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
r3 = "modifyCacheDirective"
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
z2 = 0
Live in: {z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{id: ")
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.Long getId()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r9: java.lang.Long, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r9: java.lang.Long, $r8: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r10: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r2: java.util.EnumSet, z0: boolean, $r11: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.fs.CacheFlag: org.apache.hadoop.fs.CacheFlag FORCE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r12: org.apache.hadoop.fs.CacheFlag}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r2.<java.util.EnumSet: boolean contains(java.lang.Object)>($r12)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r12: org.apache.hadoop.fs.CacheFlag}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label1
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $z1: boolean}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r18: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void waitForRescanIfNeeded()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r18: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r13 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r13)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r13: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r14: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r14)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet, $r14: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot add cache directive")
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r15 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, z0: boolean, r2: java.util.EnumSet}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.CacheManager, r2: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: void modifyCacheDirective(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo,java.util.EnumSet,boolean)>(r0, $r15, r1, r2, z0)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, $r15: org.apache.hadoop.hdfs.server.namenode.CacheManager, r2: java.util.EnumSet, z0: boolean}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String}
---------------------------------------
---------------------------------------
z3 = 1
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z3: boolean, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("modifyCacheDirective")
Live in: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
if z3 == 0 goto label8
Live in: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
goto label8
Live in: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r21 := @caughtexception
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, $r21: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r21
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, r4: java.lang.String, $r21: org.apache.hadoop.security.AccessControlException}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.String toString()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r4: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r4: java.lang.String, $r22: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "modifyCacheDirective", r4, $r22, null)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r4: java.lang.String, $r22: java.lang.String}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r19 := @caughtexception
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r19
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("modifyCacheDirective")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
---------------------------------------
---------------------------------------
if z2 == 0 goto label7
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r20.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r6: java.lang.Throwable, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.String toString()>()
Live in: {z3: boolean, r4: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {z3: boolean, r4: java.lang.String, $r16: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z3, "modifyCacheDirective", r4, $r16, null)
Live in: {z3: boolean, r4: java.lang.String, $r16: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeCacheDirective
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z0: boolean}
---------------------------------------
---------------------------------------
r1 = "removeCacheDirective"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z0: boolean}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r5 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{id: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r7: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r7: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, z1: boolean, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long, $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot remove cache directives")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r12: org.apache.hadoop.hdfs.server.namenode.CacheManager, l0: long, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: void removeCacheDirective(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,long,boolean)>(r0, $r12, l0, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r12: org.apache.hadoop.hdfs.server.namenode.CacheManager, l0: long, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeCacheDirective")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r3 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z1: boolean, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, z1: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "removeCacheDirective", r2, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, z1: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeCacheDirective")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "removeCacheDirective", r2, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
listCacheDirectives
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
r1 := @parameter1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
r2 = "listCacheDirectives"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r7: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void waitForRescanIfNeeded()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r7: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, l0: long}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, l0: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, l0: long, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, l0: long}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, l0: long}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries listCacheDirectives(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,long,org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo)>(r0, $r9, l0, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, z0: boolean}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listCacheDirectives")
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, z0: boolean, $r12: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo, z0: boolean, $r12: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z0: boolean, $r13: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, "listCacheDirectives", $r13, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z0: boolean, $r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listCacheDirectives")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: java.lang.String toString()>()
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, $r10: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "listCacheDirectives", $r10, null, null)
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, $r10: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
=======================================
=======================================
addCachePool
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.CachePoolInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r3 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r3: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r5 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r5: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add cache pool")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r5: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
if r1 != null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r14: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r14: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r14: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CachePoolInfo: java.lang.String getPoolName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r14: java.lang.String, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r14: java.lang.String, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r8: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, $r8: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
---------------------------------------
---------------------------------------
r15 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: org.apache.hadoop.hdfs.protocol.CachePoolInfo addCachePool(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,org.apache.hadoop.hdfs.protocol.CachePoolInfo,boolean)>(r0, $r9, r1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
r16 = virtualinvoke r15.<org.apache.hadoop.hdfs.protocol.CachePoolInfo: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("addCachePool")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: java.lang.String}
---------------------------------------
---------------------------------------
goto label8
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: java.lang.String}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r17 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "addCachePool", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r2 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("addCachePool")
Live in: {r2: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "addCachePool", r16, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
modifyCachePool
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.CachePoolInfo
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
---------------------------------------
---------------------------------------
r2 = "modifyCachePool"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
---------------------------------------
---------------------------------------
z3 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{poolName: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
if r1 != null goto label01
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r27: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label02
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r27: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r27: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r27 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CachePoolInfo: java.lang.String getPoolName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r27: java.lang.String, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r27: java.lang.String, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z0: boolean, z3: boolean, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r12 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot modify cache pool")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
if r1 != null goto label04
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r28: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
goto label05
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r28: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r28: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CachePoolInfo: java.lang.String getPoolName()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r28: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r28: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, $r16: org.apache.hadoop.hdfs.server.namenode.CacheManager, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: void modifyCachePool(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,org.apache.hadoop.hdfs.protocol.CachePoolInfo,boolean)>(r0, $r16, r1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean, $r16: org.apache.hadoop.hdfs.server.namenode.CacheManager, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String, z3: boolean}
---------------------------------------
---------------------------------------
z4 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("modifyCachePool")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
goto label12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r23 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z3: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z3: boolean, r3: java.lang.String, $r23: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r23
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo, z3: boolean, r3: java.lang.String, $r23: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
if r1 != null goto label08
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r29 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, $r29: java.lang.String}
---------------------------------------
---------------------------------------
goto label09
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, $r29: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, $r29: java.lang.String}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CachePoolInfo: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, $r29: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z3, "modifyCachePool", r3, $r29, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z3: boolean, r3: java.lang.String, $r29: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r22 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r22
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r22: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("modifyCachePool")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
if r1 != null goto label13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
---------------------------------------
---------------------------------------
$r30 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, $r30: java.lang.String}
---------------------------------------
---------------------------------------
goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, $r30: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, $r30: java.lang.String}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke r1.<org.apache.hadoop.hdfs.protocol.CachePoolInfo: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, r1: org.apache.hadoop.hdfs.protocol.CachePoolInfo}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, $r30: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z4, "modifyCachePool", r3, $r30, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, r3: java.lang.String, $r30: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeCachePool
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r2 = "removeCachePool"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{poolName: ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z1: boolean, z0: boolean, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r12 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot modify cache pool")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, $r16: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: void removeCachePool(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,java.lang.String,boolean)>(r0, $r16, r1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, $r16: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r3: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeCachePool")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r3: java.lang.String}
---------------------------------------
---------------------------------------
goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r3: java.lang.String}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, $r18: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.lang.String, z1: boolean, $r18: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z1: boolean, r3: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "removeCachePool", r3, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z1: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r19 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r19: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeCachePool")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "removeCachePool", r3, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z2: boolean, r3: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r17.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r17: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
listCachePools
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "listCachePools"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.CacheManager}
---------------------------------------
---------------------------------------
virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void waitForRescanIfNeeded()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.CacheManager}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager cacheManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSNDNCacheOp: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries listCachePools(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.CacheManager,java.lang.String)>(r0, $r9, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: org.apache.hadoop.hdfs.server.namenode.CacheManager, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean}
---------------------------------------
---------------------------------------
z1 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listCachePools")
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r11: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r11: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z0: boolean}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, "listCachePools", null, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listCachePools")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "listCachePools", null, null, null)
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
=======================================
=======================================
modifyAclEntries
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot modify ACL entries on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAclOp: org.apache.hadoop.fs.FileStatus modifyAclEntries(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.util.List)>($r12, r3, r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("modifyAclEntries")
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "modifyAclEntries", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("modifyAclEntries")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "modifyAclEntries", r1, null, r16)
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeAclEntries
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove ACL entries on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAclOp: org.apache.hadoop.fs.FileStatus removeAclEntries(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.util.List)>($r12, r3, r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeAclEntries")
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "removeAclEntries", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeAclEntries")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "removeAclEntries", r1, null, r16)
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeDefaultAcl
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove default ACL entries on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r15 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAclOp: org.apache.hadoop.fs.FileStatus removeDefaultAcl(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r11, r2, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeDefaultAcl")
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r3 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "removeDefaultAcl", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeDefaultAcl")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "removeDefaultAcl", r1, null, r15)
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
removeAcl
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove ACL on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r11 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r15 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAclOp: org.apache.hadoop.fs.FileStatus removeAcl(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r11, r2, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeAcl")
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r3 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "removeAcl", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeAcl")
Live in: {r4: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "removeAcl", r1, null, r15)
Live in: {r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setAcl
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set ACL on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAclOp: org.apache.hadoop.fs.FileStatus setAcl(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.util.List)>($r12, r3, r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setAcl")
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setAcl", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setAcl")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "setAcl", r1, null, r16)
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getAclStatus
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "getAclStatus"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAclOp: org.apache.hadoop.fs.permission.AclStatus getAclStatus(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r9, r4, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.fs.permission.AclStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getAclStatus")
Live in: {r3: org.apache.hadoop.fs.permission.AclStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.permission.AclStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.fs.permission.AclStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.permission.AclStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r11: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "getAclStatus", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getAclStatus")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "getAclStatus", r1)
Live in: {r3: org.apache.hadoop.fs.permission.AclStatus, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.fs.permission.AclStatus}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.fs.permission.AclStatus}
Live out: {}
---------------------------------------
=======================================
=======================================
createEncryptionZone
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 = "createEncryptionZone"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r19 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.crypto.key.KeyProvider$Metadata ensureKeyIsInitialized(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,java.lang.String)>($r7, r2, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create encryption zone on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r13: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, $r13: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r14 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r19.<org.apache.hadoop.crypto.key.KeyProvider$Metadata: java.lang.String getCipher()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, r2: java.lang.String, r19: org.apache.hadoop.crypto.key.KeyProvider$Metadata}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.String, r2: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
r5 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.fs.FileStatus createEncryptionZone(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,boolean)>($r14, r1, r4, $r15, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r14: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.String, r2: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("createEncryptionZone")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
goto label6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r18: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r18
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r18: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("createEncryptionZone")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r6: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "createEncryptionZone", r1, null, r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r5: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
goto label9
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r20 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r20: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "createEncryptionZone", r1)
Live in: {r20: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r20: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r20
Live in: {r20: org.apache.hadoop.security.AccessControlException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getEZForPath
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "getEZForPath"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r13 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r14 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: java.util.Map$Entry getEZForPath(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>($r8, r1, r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.util.Map$Entry, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.util.Map$Entry, r13: org.apache.hadoop.fs.FileStatus, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.util.Map$Entry, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
$r9 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.util.Map$Entry, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.util.Map$Entry, z0: boolean, r1: java.lang.String, $r9: java.lang.Object, r13: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
r13 = (org.apache.hadoop.fs.FileStatus) $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.util.Map$Entry, z0: boolean, r1: java.lang.String, $r9: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String, r14: java.util.Map$Entry}
---------------------------------------
---------------------------------------
$r10 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String, r14: java.util.Map$Entry}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String, $r10: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.protocol.EncryptionZone) $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String, $r10: java.lang.Object}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.EncryptionZone, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getEZForPath")
Live in: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String, $r12: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r15 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r13: org.apache.hadoop.fs.FileStatus, z0: boolean, r1: java.lang.String, $r12: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: org.apache.hadoop.security.AccessControlException, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, "getEZForPath", r1, null, r13)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: org.apache.hadoop.security.AccessControlException, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getEZForPath")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z0, "getEZForPath", r1, null, r13)
Live in: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone, z0: boolean, r1: java.lang.String, r13: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.hdfs.protocol.EncryptionZone}
Live out: {}
---------------------------------------
=======================================
=======================================
listEncryptionZones
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
r1 = "listEncryptionZones"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, l0: long}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries listEncryptionZones(org.apache.hadoop.hdfs.server.namenode.FSDirectory,long)>($r8, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
r4 = r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listEncryptionZones")
Live in: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "listEncryptionZones", null)
Live in: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return r4
Live in: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listEncryptionZones")
Live in: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "listEncryptionZones", null)
Live in: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
reencryptEncryptionZone
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "zone is null.")
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r3 = virtualinvoke $r7.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r3)
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNode in safemode, cannot ")
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" re-encryption on zone ")
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r11: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r12: java.lang.StringBuilder}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r13: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r13)
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r13: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void reencryptEncryptionZoneInt(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction,boolean)>(r3, r1, r2, z0)
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z2: boolean}
---------------------------------------
---------------------------------------
$r14 = new java.lang.StringBuilder
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r14: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r14: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reencryption")
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: java.lang.StringBuilder}
Live out: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {z2: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: java.lang.StringBuilder}
Live out: {z2: boolean, $r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, $r17, r1, null, null)
Live in: {z2: boolean, $r17: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label5
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r18 := @caughtexception
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r18: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r18
Live in: {r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r18: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r19 = new java.lang.StringBuilder
Live in: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r19: java.lang.StringBuilder}
Live out: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r19: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
Live in: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r19: java.lang.StringBuilder}
Live out: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r20: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reencryption")
Live in: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r20: java.lang.StringBuilder}
Live out: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r21: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r21: java.lang.StringBuilder}
Live out: {r4: java.lang.Throwable, z1: boolean, $r22: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, $r22, r1, null, null)
Live in: {r4: java.lang.Throwable, z1: boolean, $r22: java.lang.String, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
listReencryptionStatus
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
r1 = "listReencryptionStatus"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
r2 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long, r2: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
---------------------------------------
---------------------------------------
$r8 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, l0: long}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries listReencryptionStatus(org.apache.hadoop.hdfs.server.namenode.FSDirectory,long)>($r8, l0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory, l0: long}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
r4 = r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r3: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listReencryptionStatus")
Live in: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "listReencryptionStatus", null)
Live in: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
---------------------------------------
---------------------------------------
return r4
Live in: {r4: org.apache.hadoop.fs.BatchedRemoteIterator$BatchedListEntries}
Live out: {}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listReencryptionStatus")
Live in: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "listReencryptionStatus", null)
Live in: {r5: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
reencryptEncryptionZoneInt
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r3 := @parameter2: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
z0 := @parameter3: boolean
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension getProvider()>()
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r7: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
---------------------------------------
---------------------------------------
if $r7 != null goto label01
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r7: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r50 = new java.io.IOException
Live in: {}
Live out: {$r50: java.io.IOException}
---------------------------------------
---------------------------------------
specialinvoke $r50.<java.io.IOException: void <init>(java.lang.String)>("No key provider configured, re-encryption operation is rejected")
Live in: {$r50: java.io.IOException}
Live out: {$r50: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r50
Live in: {$r50: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
r54 = null
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r54: java.lang.String}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction START>
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r54: java.lang.String}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r54: java.lang.String, $r8: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
if r3 != $r8 goto label03
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r54: java.lang.String, $r8: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r54: java.lang.String}
---------------------------------------
---------------------------------------
$r37 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r37: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r54 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: java.lang.String getCurrentKeyVersion(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r37, r1, r2)
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r37: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
if r54 != null goto label02
Live in: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r2: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r45 = new java.io.IOException
Live in: {r2: java.lang.String}
Live out: {$r45: java.io.IOException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r46 = new java.lang.StringBuilder
Live in: {$r45: java.io.IOException, r2: java.lang.String}
Live out: {$r45: java.io.IOException, r2: java.lang.String, $r46: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
Live in: {$r45: java.io.IOException, r2: java.lang.String, $r46: java.lang.StringBuilder}
Live out: {$r45: java.io.IOException, r2: java.lang.String, $r46: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get key version name for ")
Live in: {$r45: java.io.IOException, r2: java.lang.String, $r46: java.lang.StringBuilder}
Live out: {$r45: java.io.IOException, r2: java.lang.String, $r47: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {$r45: java.io.IOException, r2: java.lang.String, $r47: java.lang.StringBuilder}
Live out: {$r45: java.io.IOException, $r48: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r45: java.io.IOException, $r48: java.lang.StringBuilder}
Live out: {$r45: java.io.IOException, $r49: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r45.<java.io.IOException: void <init>(java.lang.String)>($r49)
Live in: {$r45: java.io.IOException, $r49: java.lang.String}
Live out: {$r45: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r45
Live in: {$r45: java.io.IOException}
Live out: {}
---------------------------------------
---------------------------------------
$r39 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r38 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Re-encryption using key version ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r38: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r40: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r40: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r41: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for zone ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r41: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r42: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r42: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r43: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r39: org.slf4j.Logger, $r43: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r44: java.lang.String, $r39: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String)>($r44)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r44: java.lang.String, $r39: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r10 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNode in safemode, cannot ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" re-encryption on zone ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r16 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r16: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r18 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r17 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r4 = virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePath(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp)>(r1, r2, $r17)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, r1: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r17: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r18: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke r4.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r19: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
if $r19 != null goto label06
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r19: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r32 = new java.io.FileNotFoundException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r33 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, r2: java.lang.String, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, r2: java.lang.String, $r33: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, r2: java.lang.String, $r33: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, r2: java.lang.String, $r33: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, $r34: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist.")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, $r34: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, $r35: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, $r35: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, $r36: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r32.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r36)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException, $r36: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException}
---------------------------------------
---------------------------------------
throw $r32
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r32: java.io.FileNotFoundException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$1: int[] $SwitchMap$org$apache$hadoop$hdfs$protocol$HdfsConstants$ReencryptAction>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r20: int[]}
---------------------------------------
---------------------------------------
$i0 = virtualinvoke r3.<org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction: int ordinal()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r20: int[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r20: int[], $i0: int}
---------------------------------------
---------------------------------------
$i1 = $r20[$i0]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r20: int[], $i0: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $i1: int}
---------------------------------------
---------------------------------------
lookupswitch($i1)
{
    case 1: goto label07;
    case 2: goto label08;
    default: goto label09;
}
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $i1: int}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r25 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r54: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r54: java.lang.String}
---------------------------------------
---------------------------------------
r55 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: java.util.List reencryptEncryptionZone(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String)>($r25, r4, r54)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, $r25: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r54: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
$r21 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, $r21: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
---------------------------------------
---------------------------------------
r55 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: java.util.List cancelReencryptEncryptionZone(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath)>($r21, r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, z0: boolean, $r21: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
goto label10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
$r26 = new java.io.IOException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
---------------------------------------
---------------------------------------
$r27 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r27: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r27: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Re-encryption action ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r27: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r28: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, r3: org.apache.hadoop.hdfs.protocol.HdfsConstants$ReencryptAction, $r28: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r29: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r29: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r30: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r30: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r31: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r31)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException, $r31: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException}
---------------------------------------
---------------------------------------
throw $r26
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r26: java.io.IOException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r22 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean, $r22: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r22.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeUnlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean, $r22: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
goto label13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
$r51 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r51: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r51
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r51: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
$r52 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.Throwable, $r52: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r52.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void writeUnlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.Throwable, $r52: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: java.lang.Throwable}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if r55 == null goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r55.<java.util.List: boolean isEmpty()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean, $z1: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
---------------------------------------
---------------------------------------
$r24 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean, $r24: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r24.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSetXAttrs(java.lang.String,java.util.List,boolean)>(r2, r55, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r55: java.util.List, z0: boolean, $r24: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r53 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r53: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r53
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r53: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock()>()
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r23 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r23: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r23.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {$r23: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
setErasureCodingPolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.lang.String, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r3 = "setErasureCodingPolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String}
---------------------------------------
---------------------------------------
r15 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set erasure coding policy on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
r15 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: org.apache.hadoop.fs.FileStatus setErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,boolean)>(r0, r1, r2, r4, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r2: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setErasureCodingPolicy")
Live in: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z2 == 0 goto label3
Live in: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "setErasureCodingPolicy", r1, null, r15)
Live in: {z2: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label7
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, $r13: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, $r13: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setErasureCodingPolicy")
Live in: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label6
Live in: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "setErasureCodingPolicy", r1, null, r15)
Live in: {r5: java.lang.Throwable, z1: boolean, r1: java.lang.String, r15: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
addErasureCodingPolicies
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r2 = "addErasureCodingPolicies"
Live in: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r7 = new java.util.ArrayList
Live in: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
---------------------------------------
---------------------------------------
$i1 = lengthof r1
Live in: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList, $i1: int}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1)
Live in: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList, $i1: int}
Live out: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
---------------------------------------
---------------------------------------
r3 = $r7
Live in: {r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r7: java.util.ArrayList}
Live out: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
$r9 = new java.util.ArrayList
Live in: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r9: java.util.ArrayList}
---------------------------------------
---------------------------------------
$i2 = lengthof r1
Live in: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r9: java.util.ArrayList}
Live out: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r9: java.util.ArrayList, $i2: int}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i2)
Live in: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r9: java.util.ArrayList, $i2: int}
Live out: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r9: java.util.ArrayList}
---------------------------------------
---------------------------------------
r4 = $r9
Live in: {r3: java.util.ArrayList, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r9: java.util.ArrayList}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean}
---------------------------------------
---------------------------------------
z4 = 0
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
$r10 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r10)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], $r10: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>("Cannot add erasure coding policy")
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
r22 = r1
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r1: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
i0 = lengthof r22
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean}
---------------------------------------
---------------------------------------
i3 = 0
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
if i3 >= i0 goto label07
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
r5 = r22[i3]
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
r23 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy addErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy,boolean)>(r0, r5, z0)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r23.<org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy: java.lang.String getName()>()
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r15: java.lang.String}
---------------------------------------
---------------------------------------
interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r15)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r15: java.lang.String}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
$r16 = new org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r16: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
specialinvoke $r16.<org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse: void <init>(org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy)>(r23)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r16: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse, r23: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r16: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse}
---------------------------------------
---------------------------------------
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r16)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r16: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
goto label06
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int}
---------------------------------------
---------------------------------------
$r20 := @caughtexception
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r20: org.apache.hadoop.HadoopIllegalArgumentException}
---------------------------------------
---------------------------------------
r24 = $r20
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, $r20: org.apache.hadoop.HadoopIllegalArgumentException}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r24: org.apache.hadoop.HadoopIllegalArgumentException, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
$r21 = new org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, r24: org.apache.hadoop.HadoopIllegalArgumentException, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, $r21: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r24: org.apache.hadoop.HadoopIllegalArgumentException}
---------------------------------------
---------------------------------------
specialinvoke $r21.<org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse: void <init>(org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy,org.apache.hadoop.HadoopIllegalArgumentException)>(r5, r24)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, $r21: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse, r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, r24: org.apache.hadoop.HadoopIllegalArgumentException}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, $r21: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse}
---------------------------------------
---------------------------------------
interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r21)
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int, $r21: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int}
---------------------------------------
---------------------------------------
i3 = i3 + 1
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[], z0: boolean, i3: int}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
goto label02
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
Live out: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z4: boolean, i0: int, i3: int, z0: boolean, r22: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy[]}
---------------------------------------
---------------------------------------
z4 = 1
Live in: {r3: java.util.ArrayList, r4: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r11 = newarray (org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse)[0]
Live in: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: java.util.ArrayList}
Live out: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r12 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r11)
Live in: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], r4: java.util.ArrayList}
Live out: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Object[]}
---------------------------------------
---------------------------------------
r25 = (org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[]) $r12
Live in: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Object[]}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("addErasureCodingPolicies")
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
if z4 == 0 goto label09
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>()
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, $r13: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z4, "addErasureCodingPolicies", $r13, null, null)
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[], z4: boolean, $r13: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[]}
---------------------------------------
---------------------------------------
return r25
Live in: {r25: org.apache.hadoop.hdfs.protocol.AddErasureCodingPolicyResponse[]}
Live out: {}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r17
Live in: {r3: java.util.ArrayList, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r17: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("addErasureCodingPolicies")
Live in: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
if z4 == 0 goto label12
Live in: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r19 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList, $r19: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r19.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList, $r19: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>()
Live in: {r6: java.lang.Throwable, z4: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r3: java.util.ArrayList}
Live out: {r6: java.lang.Throwable, z4: boolean, $r18: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z4, "addErasureCodingPolicies", $r18, null, null)
Live in: {r6: java.lang.Throwable, z4: boolean, $r18: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
removeErasureCodingPolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "removeErasureCodingPolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r4 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r4)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r4: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove erasure coding policy ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r9: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r9: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: void removeErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,boolean)>(r0, r1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeErasureCodingPolicy")
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z2 == 0 goto label3
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r10: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "removeErasureCodingPolicy", r1, null, null)
Live in: {z2: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label7
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r3 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r11: java.lang.Throwable}
Live out: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeErasureCodingPolicy")
Live in: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label6
Live in: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r12.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "removeErasureCodingPolicy", r1, null, null)
Live in: {r3: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r3
Live in: {r3: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
enableErasureCodingPolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "enableErasureCodingPolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot enable erasure coding policy ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r10: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
z1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: boolean enableErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,boolean)>(r0, r1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("enableErasureCodingPolicy")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label8
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "enableErasureCodingPolicy", r1, null, null)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
goto label8
Live in: {z1: boolean}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r3 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r14: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "enableErasureCodingPolicy", r1, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("enableErasureCodingPolicy")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label8
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r15.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "enableErasureCodingPolicy", r1, null, null)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
goto label8
Live in: {z1: boolean}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r12: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("enableErasureCodingPolicy")
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label7
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "enableErasureCodingPolicy", r1, null, null)
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return z1
Live in: {z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
disableErasureCodingPolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "disableErasureCodingPolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
$r6 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disable the erasure coding policy ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r6: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r7: org.slf4j.Logger, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r10: java.lang.String, $r7: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r10: java.lang.String, $r7: org.slf4j.Logger}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r11 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r11: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
$r12 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r12: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot disable erasure coding policy ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r12: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r13: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r13: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r14: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r14: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r15: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r15)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean, $r15: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, z0: boolean}
---------------------------------------
---------------------------------------
z1 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: boolean disableErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,boolean)>(r0, r1, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("disableErasureCodingPolicy")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label8
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r16.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r16: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "disableErasureCodingPolicy", r1, null, null)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
goto label8
Live in: {z1: boolean}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
$r17 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r3 = $r17
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r17: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(0, "disableErasureCodingPolicy", r1, null, null)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("disableErasureCodingPolicy")
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label8
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r18 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r18.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r18: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "disableErasureCodingPolicy", r1, null, null)
Live in: {z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
goto label8
Live in: {z1: boolean}
Live out: {z1: boolean}
---------------------------------------
---------------------------------------
$r19 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r19: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r19
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, $r19: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("disableErasureCodingPolicy")
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label7
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r20 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r20.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r20: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "disableErasureCodingPolicy", r1, null, null)
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return z1
Live in: {z1: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
unsetErasureCodingPolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 := @parameter1: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "unsetErasureCodingPolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r14 = null
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
z1 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
$r7 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot unset erasure coding policy on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r7: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r10)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean, $r10: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
---------------------------------------
---------------------------------------
r14 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: org.apache.hadoop.fs.FileStatus unsetErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,boolean)>(r0, r1, r3, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
z2 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, z2: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("unsetErasureCodingPolicy")
Live in: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z2 == 0 goto label3
Live in: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r11.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z2, "unsetErasureCodingPolicy", r1, null, r14)
Live in: {z2: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label7
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, $r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, $r12: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("unsetErasureCodingPolicy")
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
if z1 == 0 goto label6
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(z1, "unsetErasureCodingPolicy", r1, null, r14)
Live in: {r4: java.lang.Throwable, z1: boolean, r1: java.lang.String, r14: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getErasureCodingPolicy
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "getErasureCodingPolicy"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy getErasureCodingPolicy(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker)>(r0, r1, r3)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r1: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, z0: boolean}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r4: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
r5 = r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r4: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getErasureCodingPolicy")
Live in: {r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "getErasureCodingPolicy", null)
Live in: {r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
---------------------------------------
---------------------------------------
return r5
Live in: {r5: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicy}
Live out: {}
---------------------------------------
---------------------------------------
$r9 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r9
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r9: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getErasureCodingPolicy")
Live in: {r6: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "getErasureCodingPolicy", null)
Live in: {r6: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
getErasureCodingPolicies
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "getErasureCodingPolicies"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
r2 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[] getErasureCodingPolicies(org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[], z0: boolean}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[]}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r2: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[]}
---------------------------------------
---------------------------------------
r3 = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r2: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[]}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getErasureCodingPolicies")
Live in: {r3: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "getErasureCodingPolicies", null)
Live in: {r3: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[], z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[]}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: org.apache.hadoop.hdfs.protocol.ErasureCodingPolicyInfo[]}
Live out: {}
---------------------------------------
---------------------------------------
$r7 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r7: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getErasureCodingPolicies")
Live in: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "getErasureCodingPolicies", null)
Live in: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
getErasureCodingCodecs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 = "getErasureCodingCodecs"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
z0 = 0
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r5)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r5: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
---------------------------------------
---------------------------------------
r2 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirErasureCodingOp: java.util.Map getErasureCodingCodecs(org.apache.hadoop.hdfs.server.namenode.FSNamesystem)>(r0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Map, z0: boolean}
---------------------------------------
---------------------------------------
z0 = 1
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r2: java.util.Map}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r2: java.util.Map}
---------------------------------------
---------------------------------------
r3 = r2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, r2: java.util.Map}
Live out: {r3: java.util.Map, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getErasureCodingCodecs")
Live in: {r3: java.util.Map, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.Map, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "getErasureCodingCodecs", null)
Live in: {r3: java.util.Map, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.Map}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: java.util.Map}
Live out: {}
---------------------------------------
---------------------------------------
$r7 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
r4 = $r7
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, z0: boolean, $r7: java.lang.Throwable}
Live out: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getErasureCodingCodecs")
Live in: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(z0, "getErasureCodingCodecs", null)
Live in: {r4: java.lang.Throwable, z0: boolean, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r4
Live in: {r4: java.lang.Throwable}
Live out: {}
---------------------------------------
=======================================
=======================================
setXAttr
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.fs.XAttr
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
r3 := @parameter2: java.util.EnumSet
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
---------------------------------------
---------------------------------------
z0 := @parameter3: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: java.util.EnumSet, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: java.util.EnumSet, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: java.util.EnumSet, r2: org.apache.hadoop.fs.XAttr, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: java.util.EnumSet, r2: org.apache.hadoop.fs.XAttr, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: java.util.EnumSet, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: java.util.EnumSet, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r9 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set XAttr on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r11: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r11: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r12: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r12)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, $r12: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
---------------------------------------
---------------------------------------
$r13 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, z0: boolean}
---------------------------------------
---------------------------------------
r17 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirXAttrOp: org.apache.hadoop.fs.FileStatus setXAttr(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.fs.XAttr,java.util.EnumSet,boolean)>($r13, r4, r1, r2, r3, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r13: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, r3: java.util.EnumSet, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setXAttr")
Live in: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r16 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "setXAttr", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r15: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("setXAttr")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r14 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r14.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "setXAttr", r1, null, r17)
Live in: {r1: java.lang.String, r17: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getXAttrs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: java.util.List
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
r3 = "getXAttrs"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
---------------------------------------
---------------------------------------
r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r9)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r9: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: java.util.List, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
---------------------------------------
---------------------------------------
r4 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirXAttrOp: java.util.List getXAttrs(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.util.List)>($r10, r5, r1, r2)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r5: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: java.util.List}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: java.util.List}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getXAttrs")
Live in: {r4: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r4: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r6 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "getXAttrs", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r6
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r6: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r7 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("getXAttrs")
Live in: {r7: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r7: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r7
Live in: {r7: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "getXAttrs", r1)
Live in: {r4: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r4: java.util.List}
---------------------------------------
---------------------------------------
return r4
Live in: {r4: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
listXAttrs
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "listXAttrs"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, $r8: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
---------------------------------------
---------------------------------------
r3 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirXAttrOp: java.util.List listXAttrs(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String)>($r9, r4, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r4: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r3: java.util.List}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listXAttrs")
Live in: {r3: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r3: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r10 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r5 = $r10
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r10: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "listXAttrs", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r5
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r5: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r11 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
---------------------------------------
---------------------------------------
r6 = $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.lang.Throwable}
Live out: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("listXAttrs")
Live in: {r6: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r6: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r6
Live in: {r6: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(1, "listXAttrs", r1)
Live in: {r3: java.util.List, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r3: java.util.List}
---------------------------------------
---------------------------------------
return r3
Live in: {r3: java.util.List}
Live out: {}
---------------------------------------
=======================================
=======================================
removeXAttr
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
r2 := @parameter1: org.apache.hadoop.fs.XAttr
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
z0 := @parameter2: boolean
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.XAttr, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.XAttr, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory WRITE>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
$r8 = new java.lang.StringBuilder
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove XAttr entry on ")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r8: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r9: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r9: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r10: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r10: java.lang.StringBuilder}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r11: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkNameNodeSafeMode(java.lang.String)>($r11)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, $r11: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
---------------------------------------
---------------------------------------
$r12 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, z0: boolean, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, z0: boolean}
---------------------------------------
---------------------------------------
r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirXAttrOp: org.apache.hadoop.fs.FileStatus removeXAttr(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.fs.XAttr,boolean)>($r12, r3, r1, r2, z0)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r12: org.apache.hadoop.hdfs.server.namenode.FSDirectory, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r2: org.apache.hadoop.fs.XAttr, z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeXAttr")
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
goto label6
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r15 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r4 = $r15
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r15: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "removeXAttr", r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r4: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r14 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r14
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r14: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void writeUnlock(java.lang.String)>("removeXAttr")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
virtualinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void logSync()>()
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r13: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)>(1, "removeXAttr", r1, null, r16)
Live in: {r1: java.lang.String, r16: org.apache.hadoop.fs.FileStatus, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
checkAccess
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r14 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String}
---------------------------------------
---------------------------------------
r1 := @parameter1: org.apache.hadoop.fs.permission.FsAction
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String}
---------------------------------------
---------------------------------------
r2 = "checkAccess"
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r6)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String, $r6: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String}
---------------------------------------
---------------------------------------
r3 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String}
---------------------------------------
---------------------------------------
$r7 = <org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>($r7)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String, $r7: org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String}
---------------------------------------
---------------------------------------
$r9 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
$r8 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp READ>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
r15 = virtualinvoke $r9.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.INodesInPath resolvePath(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp)>(r3, r14, $r8)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r14: java.lang.String, $r8: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp, $r9: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r14: java.lang.String}
---------------------------------------
---------------------------------------
r14 = virtualinvoke r15.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: org.apache.hadoop.fs.permission.FsAction, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction}
---------------------------------------
---------------------------------------
r4 = virtualinvoke r15.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction, r4: org.apache.hadoop.hdfs.server.namenode.INode}
---------------------------------------
---------------------------------------
if r4 != null goto label2
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction, r4: org.apache.hadoop.hdfs.server.namenode.INode}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction}
---------------------------------------
---------------------------------------
$r11 = new java.io.FileNotFoundException
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.io.FileNotFoundException, r14: java.lang.String}
---------------------------------------
---------------------------------------
specialinvoke $r11.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Path not found")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.io.FileNotFoundException, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.io.FileNotFoundException, r14: java.lang.String}
---------------------------------------
---------------------------------------
throw $r11
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r11: java.io.FileNotFoundException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean isPermissionEnabled>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction, $z0: boolean}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction}
---------------------------------------
---------------------------------------
$r10 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory dir>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction, $r10: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
---------------------------------------
---------------------------------------
virtualinvoke $r10.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void checkPathAccess(org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.fs.permission.FsAction)>(r3, r15, r1)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, r3: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker, r15: org.apache.hadoop.hdfs.server.namenode.INodesInPath, r1: org.apache.hadoop.fs.permission.FsAction, $r10: org.apache.hadoop.hdfs.server.namenode.FSDirectory}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("checkAccess")
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {}
---------------------------------------
---------------------------------------
goto label7
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r13 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, $r13: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r16 = $r13
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r14: java.lang.String, $r13: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, r14: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, "checkAccess", r14)
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException, r14: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r16
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r16: org.apache.hadoop.security.AccessControlException}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r12 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
---------------------------------------
---------------------------------------
r5 = $r12
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r12: java.lang.Throwable}
Live out: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readUnlock(java.lang.String)>("checkAccess")
Live in: {r5: java.lang.Throwable, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r5: java.lang.Throwable}
---------------------------------------
---------------------------------------
throw r5
Live in: {r5: java.lang.Throwable}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
enableAsyncAuditLog
---------------------------------------
$r5 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log auditLog>
Live in: {}
Live out: {$r5: org.apache.commons.logging.Log}
---------------------------------------
---------------------------------------
$z0 = $r5 instanceof org.apache.commons.logging.impl.Log4JLogger
Live in: {$r5: org.apache.commons.logging.Log}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG>
Live in: {}
Live out: {$r12: org.slf4j.Logger}
---------------------------------------
---------------------------------------
interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>("Log4j is required to enable async auditlog")
Live in: {$r12: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r6 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log auditLog>
Live in: {}
Live out: {$r6: org.apache.commons.logging.Log}
---------------------------------------
---------------------------------------
$r7 = (org.apache.commons.logging.impl.Log4JLogger) $r6
Live in: {$r6: org.apache.commons.logging.Log}
Live out: {$r7: org.apache.commons.logging.impl.Log4JLogger}
---------------------------------------
---------------------------------------
r0 = virtualinvoke $r7.<org.apache.commons.logging.impl.Log4JLogger: org.apache.log4j.Logger getLogger()>()
Live in: {$r7: org.apache.commons.logging.impl.Log4JLogger}
Live out: {r0: org.apache.log4j.Logger}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke r0.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>()
Live in: {r0: org.apache.log4j.Logger}
Live out: {r0: org.apache.log4j.Logger, $r8: java.util.Enumeration}
---------------------------------------
---------------------------------------
r1 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r8)
Live in: {r0: org.apache.log4j.Logger, $r8: java.util.Enumeration}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger}
---------------------------------------
---------------------------------------
$z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 != 0 goto label4
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $z1: boolean}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger}
---------------------------------------
---------------------------------------
$r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $r9: java.lang.Object}
---------------------------------------
---------------------------------------
$z2 = $r9 instanceof org.apache.log4j.AsyncAppender
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $r9: java.lang.Object}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $z2: boolean}
---------------------------------------
---------------------------------------
if $z2 != 0 goto label4
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $z2: boolean}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger}
---------------------------------------
---------------------------------------
$r10 = new org.apache.log4j.AsyncAppender
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $r10: org.apache.log4j.AsyncAppender}
---------------------------------------
---------------------------------------
specialinvoke $r10.<org.apache.log4j.AsyncAppender: void <init>()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $r10: org.apache.log4j.AsyncAppender}
Live out: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $r10: org.apache.log4j.AsyncAppender}
---------------------------------------
---------------------------------------
r2 = $r10
Live in: {r1: java.util.ArrayList, r0: org.apache.log4j.Logger, $r10: org.apache.log4j.AsyncAppender}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r1: java.util.ArrayList}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, $z3: boolean}
---------------------------------------
---------------------------------------
if $z3 == 0 goto label3
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, $z3: boolean}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
$r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, $r11: java.lang.Object}
---------------------------------------
---------------------------------------
r4 = (org.apache.log4j.Appender) $r11
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, $r11: java.lang.Object}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, r4: org.apache.log4j.Appender}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.log4j.Logger: void removeAppender(org.apache.log4j.Appender)>(r4)
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, r4: org.apache.log4j.Appender}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, r4: org.apache.log4j.Appender}
---------------------------------------
---------------------------------------
virtualinvoke r2.<org.apache.log4j.AsyncAppender: void addAppender(org.apache.log4j.Appender)>(r4)
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator, r4: org.apache.log4j.Appender}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label2
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
Live out: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger, r3: java.util.Iterator}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.log4j.Logger: void addAppender(org.apache.log4j.Appender)>(r2)
Live in: {r2: org.apache.log4j.AsyncAppender, r0: org.apache.log4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotalSyncCount
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r2 = $r1.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: long getTotalSyncCount()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getTotalSyncTimes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r2 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSImage fsImage>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
---------------------------------------
---------------------------------------
$r3 = $r2.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog editLog>
Live in: {$r2: org.apache.hadoop.hdfs.server.namenode.FSImage}
Live out: {$r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
---------------------------------------
---------------------------------------
r1 = virtualinvoke $r3.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: org.apache.hadoop.hdfs.server.namenode.JournalSet getJournalSet()>()
Live in: {$r3: org.apache.hadoop.hdfs.server.namenode.FSEditLog}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.JournalSet}
---------------------------------------
---------------------------------------
if r1 == null goto label1
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.JournalSet}
Live out: {r1: org.apache.hadoop.hdfs.server.namenode.JournalSet}
---------------------------------------
---------------------------------------
$r4 = virtualinvoke r1.<org.apache.hadoop.hdfs.server.namenode.JournalSet: java.lang.String getSyncTimes()>()
Live in: {r1: org.apache.hadoop.hdfs.server.namenode.JournalSet}
Live out: {$r4: java.lang.String}
---------------------------------------
---------------------------------------
return $r4
Live in: {$r4: java.lang.String}
Live out: {}
---------------------------------------
---------------------------------------
return ""
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getBytesInFuture
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long getBytesInFuture()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumInMaintenanceLiveDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(r1, null, 1)
Live in: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
i1 = 0
Live in: {r1: java.util.ArrayList}
Live out: {i1: int, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {i1: int, r1: java.util.ArrayList}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label4
Live in: {i1: int, r2: java.util.Iterator, $z0: boolean}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.Iterator, i1: int}
Live out: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r7
Live in: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
Live out: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
---------------------------------------
---------------------------------------
$i0 = i1
Live in: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
Live out: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isInMaintenance()>()
Live in: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r2: java.util.Iterator, $i0: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r2: java.util.Iterator, $i0: int, $z1: boolean}
Live out: {r2: java.util.Iterator, $i0: int}
---------------------------------------
---------------------------------------
$b2 = 1
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
$b2 = 0
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
i1 = $i0 + $b2
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
return i1
Live in: {i1: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumInMaintenanceDeadDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r4 = new java.util.ArrayList
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.util.ArrayList: void <init>()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
---------------------------------------
---------------------------------------
r1 = $r4
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, $r4: java.util.ArrayList}
Live out: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r5 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r1: java.util.ArrayList, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {r1: java.util.ArrayList, $r5: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
virtualinvoke $r6.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void fetchDatanodes(java.util.List,java.util.List,boolean)>(null, r1, 1)
Live in: {r1: java.util.ArrayList, $r6: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
i1 = 0
Live in: {r1: java.util.ArrayList}
Live out: {i1: int, r1: java.util.ArrayList}
---------------------------------------
---------------------------------------
r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
Live in: {i1: int, r1: java.util.ArrayList}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label4
Live in: {i1: int, r2: java.util.Iterator, $z0: boolean}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
$r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
Live in: {r2: java.util.Iterator, i1: int}
Live out: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
---------------------------------------
---------------------------------------
r3 = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) $r7
Live in: {r2: java.util.Iterator, i1: int, $r7: java.lang.Object}
Live out: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
---------------------------------------
---------------------------------------
$i0 = i1
Live in: {r2: java.util.Iterator, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor, i1: int}
Live out: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r3.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isInMaintenance()>()
Live in: {r2: java.util.Iterator, $i0: int, r3: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor}
Live out: {r2: java.util.Iterator, $i0: int, $z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {r2: java.util.Iterator, $i0: int, $z1: boolean}
Live out: {r2: java.util.Iterator, $i0: int}
---------------------------------------
---------------------------------------
$b2 = 1
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
goto label3
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
$b2 = 0
Live in: {r2: java.util.Iterator, $i0: int}
Live out: {r2: java.util.Iterator, $i0: int, $b2: byte}
---------------------------------------
---------------------------------------
i1 = $i0 + $b2
Live in: {r2: java.util.Iterator, $i0: int, $b2: byte}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
goto label1
Live in: {i1: int, r2: java.util.Iterator}
Live out: {i1: int, r2: java.util.Iterator}
---------------------------------------
---------------------------------------
return i1
Live in: {i1: int}
Live out: {}
---------------------------------------
=======================================
=======================================
getNumEnteringMaintenanceDataNodes
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager getBlockManager()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>()
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
---------------------------------------
---------------------------------------
$r3 = virtualinvoke $r2.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getEnteringMaintenanceNodes()>()
Live in: {$r2: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager}
Live out: {$r3: java.util.List}
---------------------------------------
---------------------------------------
$i0 = interfaceinvoke $r3.<java.util.List: int size()>()
Live in: {$r3: java.util.List}
Live out: {$i0: int}
---------------------------------------
---------------------------------------
return $i0
Live in: {$i0: int}
Live out: {}
---------------------------------------
=======================================
=======================================
checkSuperuserPrivilege
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void checkSuperuserPrivilege()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
---------------------------------------
---------------------------------------
goto label4
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$r3 := @caughtexception
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
r2 = $r3
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem, r1: java.lang.String, $r3: org.apache.hadoop.security.AccessControlException}
Live out: {r2: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void logAuditEvent(boolean,java.lang.String,java.lang.String)>(0, r1, null)
Live in: {r2: org.apache.hadoop.security.AccessControlException, r1: java.lang.String, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {r2: org.apache.hadoop.security.AccessControlException}
---------------------------------------
---------------------------------------
throw r2
Live in: {r2: org.apache.hadoop.security.AccessControlException}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getQuotaCommand
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {}
Live out: {l0: long}
---------------------------------------
---------------------------------------
l1 := @parameter1: long
Live in: {l0: long}
Live out: {l1: long, l0: long}
---------------------------------------
---------------------------------------
$b2 = l0 cmp -1L
Live in: {l1: long, l0: long}
Live out: {l1: long, l0: long, $b2: byte}
---------------------------------------
---------------------------------------
if $b2 != 0 goto label1
Live in: {l1: long, l0: long, $b2: byte}
Live out: {l1: long, l0: long}
---------------------------------------
---------------------------------------
$b6 = l1 cmp 9223372036854775807L
Live in: {l1: long, l0: long}
Live out: {l1: long, l0: long, $b6: byte}
---------------------------------------
---------------------------------------
if $b6 != 0 goto label1
Live in: {l1: long, l0: long, $b6: byte}
Live out: {l1: long, l0: long}
---------------------------------------
---------------------------------------
return "clearQuota"
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$b3 = l0 cmp 9223372036854775807L
Live in: {l1: long, l0: long}
Live out: {l1: long, $b3: byte}
---------------------------------------
---------------------------------------
if $b3 != 0 goto label2
Live in: {l1: long, $b3: byte}
Live out: {l1: long}
---------------------------------------
---------------------------------------
$b5 = l1 cmp -1L
Live in: {l1: long}
Live out: {l1: long, $b5: byte}
---------------------------------------
---------------------------------------
if $b5 != 0 goto label2
Live in: {l1: long, $b5: byte}
Live out: {l1: long}
---------------------------------------
---------------------------------------
return "clearSpaceQuota"
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$b4 = l1 cmp 9223372036854775807L
Live in: {l1: long}
Live out: {$b4: byte}
---------------------------------------
---------------------------------------
if $b4 != 0 goto label3
Live in: {$b4: byte}
Live out: {}
---------------------------------------
---------------------------------------
return "setQuota"
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
return "setSpaceQuota"
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getFailedStorageCommand
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
r1 := @parameter0: java.lang.String
Live in: {}
Live out: {r1: java.lang.String}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("check")
Live in: {r1: java.lang.String}
Live out: {r1: java.lang.String, $z0: boolean}
---------------------------------------
---------------------------------------
if $z0 == 0 goto label1
Live in: {r1: java.lang.String, $z0: boolean}
Live out: {r1: java.lang.String}
---------------------------------------
---------------------------------------
return "checkRestoreFailedStorage"
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true")
Live in: {r1: java.lang.String}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
if $z1 == 0 goto label2
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
return "enableRestoreFailedStorage"
Live in: {}
Live out: {}
---------------------------------------
---------------------------------------
return "disableRestoreFailedStorage"
Live in: {}
Live out: {}
---------------------------------------
=======================================
=======================================
getBlockCollection
---------------------------------------
r0 := @this: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
l0 := @parameter0: long
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = virtualinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(long)>(l0)
Live in: {l0: long, r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.namenode.INodeFile}
Live out: {}
---------------------------------------
=======================================
=======================================
access$100
---------------------------------------
r0 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$z0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean fsRunning>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
return $z0
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
=======================================
=======================================
access$200
---------------------------------------
r0 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long resourceRecheckInterval>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
access$300
---------------------------------------
r0 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$l0 = specialinvoke r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCorrectTransactionsSinceLastLogRoll()>()
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
return $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
=======================================
=======================================
access$400
---------------------------------------
r0 := @parameter0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem
Live in: {}
Live out: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
---------------------------------------
---------------------------------------
$r1 = r0.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager>
Live in: {r0: org.apache.hadoop.hdfs.server.namenode.FSNamesystem}
Live out: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
---------------------------------------
---------------------------------------
return $r1
Live in: {$r1: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager}
Live out: {}
---------------------------------------
=======================================
=======================================
<clinit>
---------------------------------------
$r0 = class "Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;"
Live in: {}
Live out: {$r0: java.lang.Class}
---------------------------------------
---------------------------------------
$z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>()
Live in: {$r0: java.lang.Class}
Live out: {$z0: boolean}
---------------------------------------
---------------------------------------
if $z0 != 0 goto label1
Live in: {$z0: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$z1 = 1
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
goto label2
Live in: {$z1: boolean}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
$z1 = 0
Live in: {}
Live out: {$z1: boolean}
---------------------------------------
---------------------------------------
<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean $assertionsDisabled> = $z1
Live in: {$z1: boolean}
Live out: {}
---------------------------------------
---------------------------------------
$r1 = class "Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;"
Live in: {}
Live out: {$r1: java.lang.Class}
---------------------------------------
---------------------------------------
$r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()
Live in: {$r1: java.lang.Class}
Live out: {$r2: java.lang.String}
---------------------------------------
---------------------------------------
$r3 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>($r2)
Live in: {$r2: java.lang.String}
Live out: {$r3: org.slf4j.Logger}
---------------------------------------
---------------------------------------
<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.slf4j.Logger LOG> = $r3
Live in: {$r3: org.slf4j.Logger}
Live out: {}
---------------------------------------
---------------------------------------
$r4 = new java.lang.StringBuilder
Live in: {}
Live out: {$r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
Live in: {$r4: java.lang.StringBuilder}
Live out: {$r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r5 = class "Lorg/apache/hadoop/hdfs/server/namenode/FSNamesystem;"
Live in: {$r4: java.lang.StringBuilder}
Live out: {$r4: java.lang.StringBuilder, $r5: java.lang.Class}
---------------------------------------
---------------------------------------
$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>()
Live in: {$r4: java.lang.StringBuilder, $r5: java.lang.Class}
Live out: {$r6: java.lang.String, $r4: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
Live in: {$r6: java.lang.String, $r4: java.lang.StringBuilder}
Live out: {$r7: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".audit")
Live in: {$r7: java.lang.StringBuilder}
Live out: {$r8: java.lang.StringBuilder}
---------------------------------------
---------------------------------------
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
Live in: {$r8: java.lang.StringBuilder}
Live out: {$r9: java.lang.String}
---------------------------------------
---------------------------------------
$r10 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>($r9)
Live in: {$r9: java.lang.String}
Live out: {$r10: org.apache.commons.logging.Log}
---------------------------------------
---------------------------------------
<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log auditLog> = $r10
Live in: {$r10: org.apache.commons.logging.Log}
Live out: {}
---------------------------------------
---------------------------------------
$r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
Live in: {}
Live out: {$r12: java.util.concurrent.TimeUnit}
---------------------------------------
---------------------------------------
$r11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>
Live in: {$r12: java.util.concurrent.TimeUnit}
Live out: {$r11: java.util.concurrent.TimeUnit, $r12: java.util.concurrent.TimeUnit}
---------------------------------------
---------------------------------------
$l0 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r11)
Live in: {$r11: java.util.concurrent.TimeUnit, $r12: java.util.concurrent.TimeUnit}
Live out: {$l0: long}
---------------------------------------
---------------------------------------
<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL> = $l0
Live in: {$l0: long}
Live out: {}
---------------------------------------
---------------------------------------
$r13 = new org.apache.hadoop.hdfs.server.namenode.startupprogress.Step
Live in: {}
Live out: {$r13: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step}
---------------------------------------
---------------------------------------
$r14 = <org.apache.hadoop.hdfs.server.namenode.startupprogress.StepType: org.apache.hadoop.hdfs.server.namenode.startupprogress.StepType AWAITING_REPORTED_BLOCKS>
Live in: {$r13: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step}
Live out: {$r13: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step, $r14: org.apache.hadoop.hdfs.server.namenode.startupprogress.StepType}
---------------------------------------
---------------------------------------
specialinvoke $r13.<org.apache.hadoop.hdfs.server.namenode.startupprogress.Step: void <init>(org.apache.hadoop.hdfs.server.namenode.startupprogress.StepType)>($r14)
Live in: {$r13: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step, $r14: org.apache.hadoop.hdfs.server.namenode.startupprogress.StepType}
Live out: {$r13: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step}
---------------------------------------
---------------------------------------
<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step STEP_AWAITING_REPORTED_BLOCKS> = $r13
Live in: {$r13: org.apache.hadoop.hdfs.server.namenode.startupprogress.Step}
Live out: {}
---------------------------------------
---------------------------------------
return
Live in: {}
Live out: {}
---------------------------------------
=======================================
